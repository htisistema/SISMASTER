#include "inkey.ch"              // constantes de codigos das teclas
#INCLUDE "COMMCTRL.CH"
#include "wvwtools.ch"
#INCLUDE "wingdi.ch"
#INCLUDE "winuser.ch"
//SQLRDD***********************************
#include "sqlrdd.ch"
#include "pgs.ch"          // Needed if you plan to use native connection to Postgres
#include "mysql.ch"        // Needed if you plan to use native connection to MySQL
#include "oracle.ch"       // Needed if you plan to use native connection to Oracle
#include "firebird.ch"     // Needed if you plan to use native connection to Firebird
//REQUEST SQLRDD             // SQLRDD should be linked in
//REQUEST SR_FIREBIRD        // Needed if you plan to use native connection to Firebird
REQUEST DBFCDX
REQUEST DBFFPT
//#define mvar ' '
*/
MEMVAR mdata_sis,cod_operado,nivel_acess,mversao,sistema,;
       memp_resa,cor,mend_firm,mcid_firm,mfone_firm,mcgc_firm,getlist,mt_cor
******************************* F I M ****************************************
* FUNCAO PARA CRIPTOGRAFA
*************************
FUNCTION cripto(mexp,q,mprod)
*****************************
LOCAL mletra:={},maux:={},msenha,i
IF LASTKEY() = 27
        RETURN .F.
ENDIF
//IF LEN(mexp) < 2 .OR. (LEN(mexp) > 8 .AND. q = NIL)
IF (LEN(mexp) > 8 .AND. q = NIL)
        atencao('Senha Invalida !!!')
        RETURN .F.
ENDIF
msenha := ''
mexp := UPPER(mexp)
i:=0
FOR i = 1 TO LEN(mexp)
        AADD(mletra,SUBSTR(mexp,i,1))
NEXT
i:=0
FOR i = 1 TO LEN(mexp)
        IF mletra[i] = 'A'
                AADD(maux,CHR(189)) //¢
        ELSEIF mletra[i] = 'B'
                AADD(maux,CHR(184)) //©
        ELSEIF mletra[i] = 'C'
                AADD(maux,CHR(154)) //Ü
        ELSEIF mletra[i] = 'D'
                AADD(maux,CHR(181)) //Á
        ELSEIF mletra[i] = 'E'
                AADD(maux,CHR(228)) //õ
        ELSEIF mletra[i] = 'F'
                AADD(maux,CHR(230)) //µ
        ELSEIF mletra[i] = 'G'
                AADD(maux,CHR(232)) //Þ
        ELSEIF mletra[i] = 'H'
                AADD(maux,CHR(218)) //+
        ELSEIF mletra[i] = 'I'
                AADD(maux,CHR(204)) //¦
        ELSEIF mletra[i] = 'J'
                AADD(maux,CHR(236)) //ý
        ELSEIF mletra[i] = 'K'
                AADD(maux,CHR(231)) //þ
        ELSEIF mletra[i] = 'L'
                AADD(maux,CHR(245)) //§
        ELSEIF mletra[i] = 'M'
                AADD(maux,CHR(225)) //ß
        ELSEIF mletra[i] = 'N'
                AADD(maux,CHR(237)) //Ý
        ELSEIF mletra[i] = 'O'
                AADD(maux,CHR(224)) //Ó
        ELSEIF mletra[i] = 'P'
                AADD(maux,CHR(208))
        ELSEIF mletra[i] = 'Q'
                AADD(maux,CHR(166))
        ELSEIF mletra[i] = 'R'
                AADD(maux,CHR(168))
        ELSEIF mletra[i] = 'S'
                AADD(maux,CHR(172))
        ELSEIF mletra[i] = 'T'
                AADD(maux,CHR(157))
        ELSEIF mletra[i] = 'U'
                AADD(maux,CHR(140))
        ELSEIF mletra[i] = 'W'
                AADD(maux,CHR(174))
        ELSEIF mletra[i] = 'V'
                AADD(maux,CHR(20))
        ELSEIF mletra[i] = 'X'
                AADD(maux,CHR(223))
        ELSEIF mletra[i] = 'Y'
                AADD(maux,CHR(239))
        ELSEIF mletra[i] = 'Z'
                AADD(maux,CHR(235))
        ELSEIF mletra[i] = '0'
                AADD(maux,CHR(251))
        ELSEIF mletra[i] = '1'
                AADD(maux,CHR(253))
        ELSEIF mletra[i] = '2'
                AADD(maux,CHR(252))
        ELSEIF mletra[i] = '3'
                AADD(maux,CHR(248))
        ELSEIF mletra[i] = '4'
                AADD(maux,CHR(216))
        ELSEIF mletra[i] = '5'
                AADD(maux,CHR(200))
        ELSEIF mletra[i] = '6'
                AADD(maux,CHR(136))
        ELSEIF mletra[i] = '7'
                AADD(maux,CHR(127))
        ELSEIF mletra[i] = '8'
                AADD(maux,CHR(21))
        ELSEIF mletra[i] = '9'
                AADD(maux,CHR(23))
        ELSEIF mletra[i] = ' '
                AADD(maux,'0')
        ELSEIF mletra[i] = '*'
                AADD(maux,'1')
        ELSEIF mletra[i] = '-'
                AADD(maux,'2')
        ELSEIF mletra[i] = '/'
                AADD(maux,'3')
        ELSEIF mletra[i] = '.'
                AADD(maux,'4')
        ELSEIF mletra[i] = ','
                AADD(maux,'5')
        ELSEIF mletra[i] = '"'
                AADD(maux,'A')
        ELSEIF mletra[i] = "'"
                AADD(maux,'6')
        ELSEIF mletra[i] = '('
                AADD(maux,'7')
        ELSEIF mletra[i] = ')'
                AADD(maux,'8')
        ELSEIF mletra[i] = '='
                AADD(maux,'9')
        ELSEIF mletra[i] = '%'
                AADD(maux,'B')
        ELSEIF mletra[i] = '*'
                AADD(maux,'C')
        ELSEIF mletra[i] = '+'
                AADD(maux,'D')
        ELSEIF mletra[i] = '@'
                AADD(maux,'E')
        ELSEIF mletra[i] = ']'
                AADD(maux,'F')
        ELSEIF mletra[i] = '['
                AADD(maux,'G')
        ELSEIF mletra[i] = '{'
                AADD(maux,'I')
        ELSEIF mletra[i] = '}'
                AADD(maux,'J')
        ELSEIF mletra[i] = '&'
                AADD(maux,'K')
        ELSEIF mletra[i] = '#'
                AADD(maux,'L')
        ELSEIF mletra[i] = '!'
                AADD(maux,'M')
        ELSEIF mletra[i] = ':'
                AADD(maux,'N')
        ELSEIF mletra[i] = ';'
                AADD(maux,'O')
        ELSEIF mletra[i] = '?'
                AADD(maux,'P')
        ELSEIF mletra[i] = '|'
                AADD(maux,'Q')
        ELSEIF mletra[i] = '\'
                AADD(maux,'R')
        ELSEIF mletra[i] = 'ç'
                AADD(maux,'S')
        ELSEIF mletra[i] = 'Ç'
                AADD(maux,'T')
        ELSEIF mletra[i] = 'Ã'
                AADD(maux,'U')
        ELSEIF mletra[i] = 'ã'
                AADD(maux,'V')
        ELSEIF mletra[i] = 'Õ'
                AADD(maux,'X')
        ELSEIF mletra[i] = 'õ'
                AADD(maux,'Y')
        ELSEIF mletra[i] = 'Á'
                AADD(maux,'Z')
        ELSEIF mletra[i] = 'á'
                AADD(maux,'a')
        ELSEIF mletra[i] = 'º'
                AADD(maux,'b')
        ELSEIF mletra[i] = 'ª'
                AADD(maux,'c')
        ELSEIF mletra[i] = NIL
                AADD(maux,'d')
        ELSE
                AADD(maux,'_')
        ENDIF
NEXT
i:=0
IF LEN(mexp) = 0
        msenha := ''
ELSEIF LEN(mexp) = 1
        msenha := maux[1]
ELSE
        msenha := maux[2] + maux[1]
        FOR i = 3 TO LEN(mexp)
                msenha := msenha + maux[i]
        NEXT
ENDIF
RETURN msenha
*************************** F I M ***********************************************
* VERIFICA SENHAS
**********************
FUNCTION senha(mflag,mecf)
**************************
LOCAL mcont,msenha,mdata_sen,mdata_aux,msenha_aux,mtela_sen,opcao,vsenha,vsenha1,;
      lci:=40,cci:=12,lba:=5,cba:=30,mtel_senha,aret:={},mdata_dat,q_merc,m_docapagar,ccomm,m_est_min,m_est_med
MEMVAR cod_operado
PUBLIC senha_acess,mcod_oper:=0

mcont:=0
setcor(1)
//op_tela(23,17,29,60,'ACESSO AO SISTEMA  '+mversao)
//op_tela(40,00,46,120,'ACESSO AO SISTEMA  '+mversao)
/*
sr_getconnection():exec("DELETE FROM sactrm WHERE data <= "+sr_cdbvalue(DATE()-5),,.f.)
aret:={}
sr_getconnection():exec("SELECT * FROM sactrm WHERE nome_trm = "+sr_cdbvalue(ALLTRIM(NETNAME())),,.t.,@aret)
IF lEN(aret) > 0
        sr_getconnection():exec('UPDATE sactrm SET data = '+sr_cdbvalue(DATE())+',versao = '+sr_cdbvalue(mversao)+',hora = '+sr_cdbvalue(TIME())+' WHERE nome_trm = '+sr_cdbvalue(ALLTRIM(NETNAME())),,.f.)
ELSE
        sr_getconnection():exec('INSERT INTO sactrm (nome_trm,ip_trm,data,hora,inicio,versao,sr_deleted) VALUES ('+;
                                sr_cdbvalue(NETNAME())+','+; //1
                                sr_cdbvalue(' ')+','+; //1 sr_cdbvalue(GETIP())+','+; //1
                                sr_cdbvalue(DATE())+','+; //2
                                sr_cdbvalue(TIME())+','+; //4
                                sr_cdbvalue(DATE())+','+; //2
                                sr_cdbvalue(mversao)+','+; //2
                                sr_cdbvalue(' ')+')',,.f.)

ENDIF
sr_getconnection():exec('COMMIT',,.f.)
*/
WHILE .T.
        WHILE mcont <= 3
                SET CENTURY ON
	        botao(39,04,45,50,,'Acesso ao Sistema')
		limpa(39,04,45,50)
		WVW_DrawImage( ,39, 4,45,10,ALLTRIM(m_cfg[12])+'HTIUSU.JPG',.T.,.F.)
		//WVW_DrawImage( ,45,50,50,60,ALLTRIM(m_cfg[12])+'HTILOGO.JPG',.T.,.F.)
                setcor(1)
                mensagem('Digite o Codigo de Operador')
		DEVPOS(lci,cci+1);DEVOUT('Codigo Operador:')
                DEVPOS(lci+2,cci+1);DEVOUT('Digite a Senha.:')
                DEVPOS(lci+4,cci+1);DEVOUT('Data do Sistema:')
                WVW_DrawBoxGet(,lci,cci+18,3)
                WVW_DrawBoxGet(,lci+2,cci+18,12)
                WVW_DrawBoxGet(,lci+4,cci+18,10)
                /*
                setcor(3)
                DEVPOS(lci  ,cci+50);DEVOUT('      .: H T I   Sistemas de Informatica :.')
                DEVPOS(lci+1,cci+50);DEVOUT('Rua Tenente Joao Cicero, 415 - Sl.05 - Recife - PE.')
                DEVPOS(lci+2,cci+50);DEVOUT('Fone....:(81)3755.1072')
                DEVPOS(lci+3,cci+50);DEVOUT('Suporte.:(81)9169.9097 - MSN-Email:suporte@htisistemas.com')
                DEVPOS(lci+4,cci+50);DEVOUT('                  www.htisistemas.com')
                DEVPOS(lci+5,cci+55);DEVOUT('Direito Copia (C)1994-'+SUBSTR(DTOC(directory('sismaster.exe') [1][3]),7,4)+' da HTI Sistemas')
                */
                setcor(1)
                SET CENTURY OFF
                @ lci,cci+18 GET mcod_oper PICT '999' VALID IF(EMPTY(mcod_oper),.F.,ven(mcod_oper))
                READ
                IF LASTKEY() = 27
                        //wvw_lclosewindow()
                        RETURN .F.
                ENDIF
                aret:={}
                //sr_getconnection():exec("SELECT snivel,scod_op,sult_e_c,sexpira,ssenha,stipo,snome FROM insopera WHERE scod_op = "+sr_cdbvalue(STRZERO(mcod_oper,3)),,.t.,@aret)
                sr_getconnection():exec("SELECT * FROM insopera WHERE scod_op = "+sr_cdbvalue(STRZERO(mcod_oper,3)),,.t.,@aret)
                /*
                IF STRZERO(mcod_oper,3) <> '999'
                        atencao('Este Usuario/Operador estar Bloqueado, Procure seu Administrador...')
                        LOOP
                ENDIF
                */
		IF FILE(ALLTRIM(m_cfg[12])+STRZERO(mcod_oper,3)+'.jpg')
		        WVW_DrawImage( ,39, 4,45,10,ALLTRIM(m_cfg[12])+STRZERO(mcod_oper,3)+'.jpg',.T.,.F.)
		ENDIF
                mensagem('Operador: '+aret[1,2]+' - Digite sua SENHA')
                msenha = ''
                IF mcod_oper = 999
			pegasenha(@msenha,lci+2,cci+18,setcor(2),12)
		ELSE
			pegasenha(@msenha,lci+2,cci+18,setcor(2))
		ENDIF
                setcor(1)
                IF msenha = 'NAO'
                        //wvw_lclosewindow()
                        atencao('Senha Incorreta Tente Novamente')
                        RETURN .F.
                ENDIF
                IF EMPTY(msenha)
                        atencao('Senha Incorreta Tente Novamente')
                        TONE(100,6)
                        TONE(1600,6)
                        INKEY(2)
                        IF mcont = 3
                                //wvw_lclosewindow()
                                RETURN .F.
                        ENDIF
                        LOOP
                ENDIF
                mcont ++
                IF ALLTRIM(msenha) = 'HTI251507' .AND. STRZERO(mcod_oper,3) = '999'
                        nivel_acess := '1'
                        cod_operado := '999'
                        senha_acess := msenha
                        EXIT
                ENDIF
		// EX: 21/07/10  21+07+10 = 3 8
		// EX: ADM: SOMA  A= ANO+DIA = 31 - D= DIA+DIA= 42 - M= MES+DIA = 28
		// EX: 3 31 42 28 8
		mdig1 := SUBSTR(STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),4,2)),2),1,1)
		mdig2 := STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
		mdig3 := STRZERO(VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
		mdig4 := STRZERO(VAL(SUBSTR(DTOC(DATE()),4,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
		mdig5 := SUBSTR(STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),4,2)),2),2,1)

		IF SUBSTR(msenha,1,8) = mdig1+mdig2+mdig3+mdig4+mdig5 .AND. LEN(ALLTRIM(msenha)) >= 10
                        IF VAL(SUBSTR(msenha,9)) = 0
                                mdata_aux :=SPACE(11)
                        ELSE
                                //mdata_sen := DATE() + VAL(SUBSTR(msenha,7))
                                mdata_sen := DATE() + VAL(SUBSTR(msenha,9))
                                //mdata_aux := SUBSTR(DTOC(mdata_sen),1,2)+SUBSTR(DTOC(mdata_sen),4,2)+SUBSTR(DTOC(mdata_sen),7,2) + SUBSTR(msenha,1,6)
                                mdata_aux := SUBSTR(DTOC(mdata_sen),1,2)+SUBSTR(DTOC(mdata_sen),4,2)+SUBSTR(DTOC(mdata_sen),7,2) + SUBSTR(DTOC(DATE()),7,2)+SUBSTR(DTOC(DATE()),1,2)+SUBSTR(DTOC(DATE()),4,2)
                        ENDIF
                        ccomm :="UPDATE sacsetup SET sysdatlm = "+sr_cdbvalue(mdata_aux)
                        sr_getconnection():exec(ccomm,,.f.)
                        sr_getconnection():exec('COMMIT',,.f.)
                        masterdbf()
                        nivel_acess := aret[1,13]
                        cod_operado := aret[1,1]
                        senha_acess := msenha
                        //wvw_lclosewindow()
                        RETURN .T.
                ENDIF
                IF ALLTRIM(msenha) == ALLTRIM(DCRIPTO(aret[1,5]))
                        sr_getconnection():exec("UPDATE insopera SET sult_ent = "+sr_cdbvalue(mdata_sis)+",shora_ini = "+sr_cdbvalue(SUBSTR(TIME(),1,5))+" WHERE scod_op = "+sr_cdbvalue(STRZERO(mcod_oper,3)),,.f.)
                        //sr_getconnection():exec("UPDATE sactrm SET oper = "+sr_cdbvalue(STRZERO(mcod_oper,3))+',versao = '+sr_cdbvalue(mversao)+',hora = '+sr_cdbvalue(TIME())+' WHERE nome_trm = '+sr_cdbvalue(ALLTRIM(NETNAME())),,.f.)
                        sr_getconnection():exec('COMMIT',,.f.)
                        nivel_acess := aret[1,13]
                        cod_operado := aret[1,1]
                        senha_acess := msenha
                        EXIT
                ELSE
                        atencao('Senha Incorreta Tente Novamente')
                        TONE(100,6)
                        TONE(1600,6)
                        INKEY(2)
                        IF mcont = 3
                                //wvw_lclosewindow()
                                RETURN .F.
                        ENDIF
                        LOOP
                ENDIF
        ENDDO
        WHILE .T.
                SET CENTURY ON
		mensagem('Confira a Data do Sistema')
                //c_ped:={}
                //sr_getconnection():exec("SELECT MAX(pdat_ped) FROM sacped_s",,.t.,@c_ped)
                setcor(1)
                WVW_DrawBoxGet(,lci+4,cci+18,10)
                @ lci+4,cci+18 GET mdata_sis
                READ
                mdata_dat := DATE()
                IF mdata_sis > DATE() + 10
                        atencao('A Data informada estar com mais de 10 dias: '+DTOC(mdata_sis))
                        IF ! ver_nivel('ALT_DATA','ALTERACAO DA DATA DO SISTEMA','1245',nivel_acess,,'AMBIE')
                                LOOP
                        ENDIF
                ENDIF
                EXIT

                /*
                c_caixa:={}
                sr_getconnection():exec("SELECT MAX(data) FROM saccaixa",,.t.,@c_caixa)
                IF mdata_sis < c_caixa[1,1]
		      	       t := c_caixa[1,1]
                ENDIF
                IF mdata_sis <> mdata_dat
                        IF ! ver_nivel('ALT_DATA','ALTERACAO DA DATA DO SISTEMA','1245',nivel_acess,,'AMBIE')
                                LOOP
                        ENDIF
                ENDIF
                IF LASTKEY() = 27 .OR. EMPTY(mdata_sis)
                        LOOP
	       	ENDIF
	       	*/
        ENDDO
        SET CENTURY OFF
        EXIT
ENDDO
//wvw_lclosewindow()
* ERRO DO SISTEMA**********
//erro()
********************
IF mflag <> NIL
        RETURN .T.
ENDIF
master0()
CLOSE sen
RETURN .T.
********************************** f i m **************************************
* menu DE ERROS
***************
FUNCTION erro
**************
atencao(lci,cci,lba,cba)
DEVPOS(0,0);DEVOUT('Corruption detection - general protection')
DEVPOS(1,0);DEVOUT(' programam aborterd. address: OAB9:1005')
CLEAR
QUIT
RETURN NIL
*********************** f i m ************************************
* ALTERA A SENHA
*****************
FUNCTION alt_senha(p)
*********************
LOCAL mcont,msenha,lci,cci,lba,cba,tela,msele,morde,mmen,mcor,mponto,mponto1,;
      mcod_oper:=0
MEMVAR senha_acess
mcont:=0
lci := 12
cci := 10
lba := 15
cba := 75
mmen := SAVESCREEN(23,00,23,79)
tela := SAVESCREEN(00,00,24,79)
mcor := SETCOLOR()
msele := SELE()
morde := INDEXORD()
*-----------------------------------------------------
IF ! AbriArq('mastercfg','cfg');RETURN NIL;ENDIF
IF ! AbriArq('insopera','sen');RETURN NIL;ENDIF
*-----------------------------------------------------
WHILE .T.
        *************
        SELE('sen')
        ORDSETFOCUS(2)
        GO TOP
        *************

        IF sen->(DBSEEK(cod_operado))
                mponto := RECNO()
                IF BLOQREG()
                        sen-> sult_fim := DATE()
                        sen-> shora_fim := TIME()
                        sen-> sh_i_c    := '     '
                        nivel_acess := sen->snivel
                        cod_operado := sen->scod_op
                        senha_acess := msenha
                        COMMIT
                        UNLOCK
                        IF p = NIL
                                setcor(4)
                                DEVPOS(24,67);DEVOUT('Operador: '+cod_operado)
                                setcor(1)
                        ENDIF
                ELSE
                        atencao('Nao foi Possivel Acessar o Arquivo')
                        LOOP
                ENDIF
                ver_mensa(cod_operado)          //verifica mensagens
        ENDIF

        WHILE .T.
                mcod_oper:=0
                setcor(3)
                botao(lci,cci,lba,cba,,' IDENTIFICAR O OPERADOR ','*')
                setcor(1)
                limpa(lci+1,cci+1,lci+1,cba-2)
                DEVPOS(lci+1,cci+1);DEVOUT('Codigo do Operador......:')
                DEVPOS(lci+2,cci+1);DEVOUT('Digite a Senha de Acesso:')
                @ lci+1,cci+27 GET mcod_oper PICT '999' VALID IF(EMPTY(mcod_oper),.F.,ven(mcod_oper,lci+1,cci+31))
                READ
                IF LASTKEY() = 27
                        IF p = '1'
                                RESTSCREEN(00,00,24,79,tela)
                                RESTSCREEN(23,00,23,79,mmen)
                                setcor(4)
                                DEVPOS(24,67);DEVOUT('Operador: '+cod_operado)
                                setcor(1)
                                atencao('Operador: '+cod_operado+'-'+RTRIM(sen->snome))
                                SETCOLOR(mcor)
                                sen->(DBSEEK(cod_operado))
                                IF BLOQREG()
                                        sen-> sult_ent := mdata_sis
                                        sen-> shora_ini := TIME()
                                        sen-> sh_i_c    := cfg->nome
                                        nivel_acess := sen->snivel
                                        cod_operado := sen->scod_op
                                        senha_acess := msenha
                                        COMMIT
                                        UNLOCK
                                ENDIF
                                SELE(msele);ORDSETFOCUS(morde)
                                RETURN .F.
                        ELSE
                                LOOP
                        ENDIF
                ENDIF
                msenha = ''
                pegasenha(@msenha,lci+2,cci+27,setcor(6,'*'))
                setcor(1)
                IF msenha = 'NAO'
                        LOOP
                ENDIF
                mcont ++
*               GO TOP
                IF EMPTY(msenha)
                        atencao('Senha Incorreta Tente Novamente')
                        LOOP
                ENDIF
                IF ALLTRIM(msenha) == ALLTRIM(DCRIPTO(sen->ssenha))
                        mponto1 := RECNO()
                        *************
                        SELE('sen')
                        ORDSETFOCUS(1)
                        *************
                        GO mponto1
                        IF BLOQREG()
                                sen-> sult_ent := mdata_sis
                                sen-> shora_ini := TIME()
                                sen-> sh_i_c    := cfg->nome
                                nivel_acess := sen->snivel
                                cod_operado := sen->scod_op
                                senha_acess := msenha
                                COMMIT
                                UNLOCK
                                RESTSCREEN(00,00,24,79,tela)
                                RESTSCREEN(23,00,23,79,mmen)
*                               IF p = NIL
                                        setcor(4)
                                        DEVPOS(24,67);DEVOUT('Operador: '+cod_operado)
                                        setcor(1)
*                               ENDIF
                                atencao('Operador: '+cod_operado+'-'+RTRIM(sen->snome))
                                SETCOLOR(mcor)
                                SELE(msele);ORDSETFOCUS(morde)
                                ver_mensa(cod_operado)          //verifica mensagens
                                RETURN .T.
                        ELSE
                                atencao('Nao foi Possivel Acessar o Arquivo')
                                LOOP
                        ENDIF
                ELSE
                        limpa(lci+1,cci+2,lci+1,cba-2)
                        atencao('Senha Incorreta Tente Novamente')
                        LOOP
                ENDIF
        ENDDO
ENDDO
RETURN NIL
************************** F I M ******************************
#include "wvwtools.ch"
#INCLUDE "wingdi.ch"
#INCLUDE "winuser.ch"
// Function PegaChar
// Programada por Paulo Nasi em 21.04.1992
// Recupera caracter digitado pelo usuario
//
Function PegaChar
*****************
SETPOS(25,00)
Return Inkey(0)

//
// Function PegaSenha
// Programada por Paulo Nasi em 29.06.1993
// Pega senha digitada pela usuario
//
Procedure PegaSenha ( Senha, LinSenha, ColSenha , cor )

Local SenhaTamMax  := 8
Local CharDigitado
Local SenhaTela    := ""
limpa(linsenha,colsenha,linsenha,colsenha+9)

Do While Len(SenhaTela) <= SenhaTamMax

   CharDigitado := PegaChar()
   Do Case
      Case CharDigitado >= 97 .And. CharDigitado <= 122   /* ALFA MINUSCULA */
           Senha     := Senha + Upper(Chr(CharDigitado))
           SenhaTela := SenhaTela + "#"
      Case CharDigitado >= 65 .And. CharDigitado <= 90    /* ALFA MAIUSCULA */
           Senha     := Senha + Chr(CharDigitado)
           SenhaTela := SenhaTela + "#"
      Case CharDigitado >= 48 .And. CharDigitado <= 57    /* NUMERICO */
           Senha     := Senha + Chr(CharDigitado)
           SenhaTela := SenhaTela + "#"
      Case (CharDigitado = K_LEFT) .Or. (CharDigitado = K_BS)
           If Len(Senha) != 0
              Senha     := Left(Senha,Len(Senha)-1)
              SenhaTela := Left(SenhaTela,Len(SenhaTela)-1)
           EndIf
      Case CharDigitado = K_ENTER
           Exit
      Case CharDigitado = K_ESC
           Senha := "NAO"
           Exit
   EndCase
   IF cor <> NIL
          SETCOLOR(cor)
   ENDIF
   @ LinSenha,ColSenha Say PadR(SenhaTela,SenhaTamMax)

EndDo

Return
********************************* f i m ********************************
* VERIFICA SE A MENSAGEM
************************
FUNCTION ver_mensa(mcod,tp,rapida)
**********************************
LOCAL msele,morde,mcor,mpesq,cons_mensa:={},mmensagem,opcao
MEMVAR mdata_sis
//msele := SELE()
//morde := INDEXORD()
//mcor := SETCOLOR()

cons_mensa:={}
cComm  := "SELECT * FROM sacmensa WHERE cod_rec = "+sr_cdbvalue(mcod)+" AND ler = 'R'"
sr_getconnection():exec(ccomm,,.t.,@cons_mensa)
IF LEN(cons_mensa) > 0
	//atencao( 'REMETENTE....: '+cons_mensa[1,3]+'  -  Emissao: '+DTOC(cons_mensa[1,1])+' - Hora: '+cons_mensa[1,2]+SPACE(90);
        WHILE .T.
	       opcao := op_simnao('N','REMETENTE....: '+cons_mensa[1,3]+'  -  Emissao: '+DTOC(cons_mensa[1,1])+' - Hora: '+cons_mensa[1,2]+SPACE(165);
	                +'ASSUNTO......: '+cons_mensa[1,5]+SPACE(97)+cons_mensa[1,6]+cons_mensa[1,7]+cons_mensa[1,8]+cons_mensa[1,9];
                        +cons_mensa[1,10]+cons_mensa[1,11]+cons_mensa[1,12]+cons_mensa[1,13]+cons_mensa[1,14]+cons_mensa[1,15];
                        +cons_mensa[1,16]+cons_mensa[1,17]+cons_mensa[1,18]+cons_mensa[1,19]+cons_mensa[1,20]+cons_mensa[1,21];
                        +cons_mensa[1,22]+cons_mensa[1,23]+cons_mensa[1,24]+cons_mensa[1,25])
                IF opcao = 'S'
                        EXIT
                ENDIF
        ENDDO
        cComm  := "UPDATE sacmensa SET ler = '*',data_ler = "+sr_cdbvalue(mdata_sis)+" WHERE cod_rec = "+sr_cdbvalue(mcod)+" AND ler = 'R'"
        sr_getconnection():exec(ccomm,,.f.)
        sr_getconnection():exec('COMMIT',,.f.)
ENDIF
IF rapida <> NIL
        RETURN .T.
ENDIF
cons_mensa:={}
cComm  := "SELECT * FROM sacmensa WHERE cod_rec = "+sr_cdbvalue(mcod)+" AND (ler IS NULL OR ler = ' ') AND data_men <= "+sr_cdbvalue(mdata_sis)
sr_getconnection():exec(ccomm,,.t.,@cons_mensa)
IF LEN(cons_mensa) > 0
        IF tp = NIL
		atencao('Existe Mensagens para este Operador')
        ENDIF
        RETURN .T.
ELSE
        RETURN .F.
ENDIF
RETURN NIL
/*
IF ! AbriArq('sacmensa','mensa');RETURN NIL;ENDIF
***************
SELE('mensa');ORDSETFOCUS(1)
GO TOP
***************
mpesq := mcod+' '
IF mensa->(DBSEEK(mpesq))
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        IF tp = NIL .AND. mensa->data_men <= mdata_sis
                atencao('Existe Mensagens para este Operador',1)
        ENDIF
        IF mensa->data_men <= mdata_sis
                DEVPOS(03,70);DEVOUT('Mensagem')
        ENDIF
        RETURN .T.
ELSE
        IF msele > 0
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        ENDIF
        DEVPOS(03,70);DEVOUT('        ')
        RETURN .F.
ENDIF
RETURN NIL
*/
******************************* f i m *********************************************
FUNCTION ver_dia(mv)
********************
LOCAL mdia
IF dow(mv)=1
        mdia := 'DOMINGO'
ELSEIF dow(mv)=2
        mdia := 'SEGUNDA FEIRA'
ELSEIF dow(mv)=3
        mdia := 'TERCA FEIRA'
ELSEIF dow(mv)=4
        mdia := 'QUARTA FEIRA'
ELSEIF dow(mv)=5
        mdia := 'QUINTA FEIRA'
ELSEIF dow(mv)=6
        mdia := 'SEXTA FEIRA'
ELSEIF dow(mv)=7
        mdia := 'SABADO'
ENDIF
RETURN mdia
************************** F I M ***************************************
* OPCAO SIM OU NAO
**********************
FUNCTION op_simnao(mtipo_op,mensagem,mtitulo)
*********************************************
LOCAL mopcao_simnao
mopcao_simnao := WVW_MessageBox( ,mensagem,IF(mtitulo=NIL,' Escolha a Opcao ',mtitulo),MB_YESNO + MB_ICONQUESTION + MB_SYSTEMMODAL + IF(mtipo_op = 'S',MB_DEFBUTTON1,MB_DEFBUTTON2))
IF mopcao_simnao = 6
        RETURN 'S'
ELSE
        RETURN 'N'
ENDIF
RETURN NIL
*************************** f i m ****************************
Function VCGC(xArg1)
********************
If (Empty(xArg1))
        Return .T.
EndIf
xArg1:= Trim(xArg1)
If (Len(xArg1) # 14)
        Return .F.
EndIf
dv1_f:= Val(SubStr(xArg1,13,1))
dv2_f:= Val(SubStr(xArg1,14,1))
num_:= SubStr(xArg1,1,12)
dv1_c:= 0
posi_:= 12
mu_:= "543298765432"
Do While (posi_ > 0)
        dv1_c:= dv1_c+Val(SubStr(num_,posi_,1))*Val(SubStr(mu_,posi_,1))
        posi_--
EndDo
rest_:= dv1_c-Int(dv1_c/11)*11
dv1_c:= IIf(rest_ < 2,0,11-rest_)
dv_:= SubStr(Str(dv1_c,1),1)
num_:= num_+dv_
dv2_c:= 0
mu_:= "6"+mu_
posi_:= 13
Do While (posi_ > 0)
        dv2_c:= dv2_c+Val(SubStr(num_,posi_,1))*Val(SubStr(mu_,posi_,1))
        posi_--
EndDo
rest_:= dv2_c-Int(dv2_c/11)*11
dv2_c:= IIf(rest_ < 2,0,11-rest_)
Return dv1_c = dv1_f .AND. dv1_c = dv1_f .AND. dv2_c = dv2_f
FUNCTION CALCU()
****************
IF ! MYRUN2('c:\windows\system32\calc.exe')
	atencao('NAO FOI ENCONTRADA A CALCULADORA COM WINDOWS FAVOR ENTRAR EM CONTATO COM O GERENTE DOS COMPUTADORES....')
ENDIF
RETURN  NIL
*************************** f i m *******************************************
* MENU ALTERACAO FIRMAS
***********************
FUNCTION incl_firma(t)
**********************
LOCAL mprg:='INCL_FIRMA',;
      opcao,mrazao,mfantasia,mend,mbairro,mcidade,mcgc,mserie,mfone,;
      mdataini,mcgc_aux,mlogradouro,mcont_numer,mcont_compl,mcont_bairro,;
      mcont_cep,mcontato,mcont_tel,mnome_cab,;
      lci,cci,lba,cba,tela,minsc,mcep,memail,mcont_cpf,mprodepe,mcodemp,minsc_mun,mcnae,mnumero,mcomplemento,;
      aret:={},m_emp:={},mcod_acess

IF ! ver_nivel(mprg,'INCLUSAO E ALTERACAO DA EMPRESA','1',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF
lci:=cci:=0
lba:=24
cba:=100

mcomplemento := SPACE(10)
mrazao    := SPACE(35)
mfantasia := SPACE(35)
mnome_cab := SPACE(1)
mend      := SPACE(40)
mfone     := SPACE(30)
mbairro   := mcidade   := SPACE(20)
mcep      := SPACE(8)
mcgc      := mcgc_aux  := minsc := SPACE(14)
mserie    := mnumero := SPACE(6)
memail    := SPACE(50)
mdataini  := DATE()

mrazao    := m_set[1,2]
mfantasia := m_set[1,3]
mnome_cab := m_set[1,4]
mend      := m_set[1,5]
mbairro   := m_set[1,8]
mcidade   := m_set[1,9]
mcep      := m_set[1,11]
memail    := m_set[1,13]
mcod_acess:= m_set[1,30]
IF EMPTY(m_set[1,35])
        mcgc      := mcgc_aux  := SPACE(14)
        mserie    := SPACE(6)
ELSE
        mcgc      := mcgc_aux  := m_set[1,35]
        mserie    := m_set[1,23]
ENDIF
minsc     := m_set[1,14]
mfone     := m_set[1,12]
mdataini  := m_set[1,16]
mnumero   := m_set[1,6]
mcomplemento := m_set[1,7]
op_tela(lci,cci,lba,cba,' CONFIGURACAO DO SISTEMA P/FIRMA')
WHILE .T.
        opcao = 'S'
        setcor(3)
        @ lci+9,cci TO lci+9,cba
        setcor(1)
        DEVPOS(lci+4,cci+2);DEVOUT('Data de Inicio.......:')
        DEVPOS(lci+5,cci+2);DEVOUT('Razao Social.........:')
        DEVPOS(lci+6,cci+2);DEVOUT('Nome Fantasia........:')
        DEVPOS(lci+7,cci+2);DEVOUT('Nome p/Cabecalho dos documentos [F]antasia [R]azao:')
        DEVPOS(lci+8,cci+2);DEVOUT('CNPJ.................:')
        DEVPOS(lci+8,cci+45);DEVOUT('Inscricao:')

        DEVPOS(lci+10,cci+2);DEVOUT('Endereco.............:')
        DEVPOS(lci+10,cci+67);DEVOUT('Numero:')
        DEVPOS(lci+10,cci+82);DEVOUT('Compl.:')
        DEVPOS(lci+11,cci+2);DEVOUT('Bairro...............:')
        DEVPOS(lci+12,cci+2);DEVOUT('Cidade ..............:')
        DEVPOS(lci+12,cci+57);DEVOUT('CEP:')
        DEVPOS(lci+13,cci+2);DEVOUT('Telefones e Fax .....:')
        DEVPOS(lci+14,cci+2);DEVOUT('EMAIL................:')
        DEVPOS(lci+15,cci+2);DEVOUT('Codigo de Acesso.....:')
        DEVPOS(lci+16,cci+2);DEVOUT('Serie................:')
        setcor(3)
        DEVPOS(lci+16,cci+25);DEVOUT(mserie)
        setcor(1)
        @ lci+4,cci+25 GET mdataini VALID IF(EMPTY(mdataini),.F.,.T.)
        @ lci+5,cci+25 GET mrazao VALID IF(EMPTY(mrazao),.F.,.T.)
        @ lci+6,cci+25 GET mfantasia VALID IF(EMPTY(mfantasia),.F.,.T.)
        @ lci+7,cci+54 GET mnome_cab PICT '@!' VALID mnome_cab $ 'F,R'
        @ lci+8,cci+25 GET mcgc PICT '@@r 99.999.999/9999-99' VALID IF(VCGC(mcgc),.T.,.F.) WHEN cod_operado = '999'
        @ lci+8,cci+56 GET minsc PICT '@!'

        @ lci+10,cci+25 GET mend
        @ lci+10,cci+74 GET mnumero
        @ lci+10,cci+89 GET mcomplemento
        @ lci+11,cci+25 GET mbairro
        @ lci+12,cci+25 GET mcidade
        @ lci+12,cci+62 GET mcep
        @ lci+13,cci+25 GET mfone
        @ lci+14,cci+25 GET memail
        @ lci+15,cci+25 GET mcod_acess
        READ
        IF LASTKEY() = 27
                SET CURSOR ON
                EXIT
        ENDIF
        mserie := '1'+SUBSTR(mcod_acess,4,1)+SUBSTR(mcod_acess,2,1)+SUBSTR(mcod_acess,5,1)+SUBSTR(mcod_acess,3,1)+SUBSTR(mcod_acess,1,1)
        setcor(3)
        DEVPOS(lci+17,cci+25);DEVOUT(mserie)
        setcor(1)
        inkey(2)
        setcor(1)
        opcao := op_simnao('S','Confirma a Inclusao da Firma:')
        IF opcao = 'N'
                EXIT
        ENDIF
        m_set:={}
        sr_getconnection():exec("SELECT * FROM sacsetup",,.t.,@m_set)
        IF LEN(m_set) = 0
                sr_getconnection():exec('INSERT INTO sacsetup ('+;
                'razao      ,'+;
                'fantasia   ,'+;
                'nome_cab   ,'+;
                'end_firma  ,'+;
                'bairro     ,'+;
                'cidade     ,'+;
                'cep        ,'+;
                'fone       ,'+;
                'email      ,'+;
                'insc       ,'+;
                'dataini    ,'+;
                'serie      ,'+;
                'numero     ,'+;
                'complemento,'+;
                'cod_acess  ,'+;
                'cnpj       ,'+;
                'SR_RECNO   ,'+;
                'SR_DELETED)'+;
                ' VALUES ('+;
                sr_cdbvalue(mrazao                                               )+','+; //5
                sr_cdbvalue(mfantasia                                            )+','+; //6
                sr_cdbvalue(mnome_cab                                            )+','+; //7
                sr_cdbvalue(mend                                                 )+','+; //8
                sr_cdbvalue(mbairro                                              )+','+;//9
                sr_cdbvalue(mcidade                                              )+','+;//10
                sr_cdbvalue(mcep                                                 )+','+;//9
                sr_cdbvalue(mfone                                                )+','+;//9
                sr_cdbvalue(memail                                               )+','+;//9
                sr_cdbvalue(minsc                                                )+','+;//9
                sr_cdbvalue(mdataini                                             )+','+;//9
                sr_cdbvalue(mserie                                               )+','+;//9 sr_cdbvalue(CRIPTO(ALLTRIM(mcgc),'*')+CRIPTO(ALLTRIM(mserie),'*'))+','+;//9
                sr_cdbvalue(mnumero                                              )+','+;//9
                sr_cdbvalue(mcomplemento                                         )+','+;//9
                sr_cdbvalue(mcod_acess                                           )+','+;//9
                sr_cdbvalue(mcgc                                                 )+','+;//9
                sr_cdbvalue(1                                                    )+','+;//9
                sr_cdbvalue(' ')+')',,.f.)
                sr_getconnection():exec('COMMIT',,.f.)
        ELSE
                ccomm := "UPDATE sacsetup SET "
                ccomm := ccomm + " razao      = "+sr_cdbvalue(mrazao                                               )
                ccomm := ccomm + ",fantasia   = "+sr_cdbvalue(mfantasia                                            )
                ccomm := ccomm + ",nome_cab   = "+sr_cdbvalue(mnome_cab                                            )
                ccomm := ccomm + ",end_firma  = "+sr_cdbvalue(mend                                                 )
                ccomm := ccomm + ",bairro     = "+sr_cdbvalue(mbairro                                              )
                ccomm := ccomm + ",cidade     = "+sr_cdbvalue(mcidade                                              )
                ccomm := ccomm + ",cep        = "+sr_cdbvalue(mcep                                                 )
                ccomm := ccomm + ",fone       = "+sr_cdbvalue(mfone                                                )
                ccomm := ccomm + ",email      = "+sr_cdbvalue(memail                                               )
                ccomm := ccomm + ",insc       = "+sr_cdbvalue(minsc                                                )
                ccomm := ccomm + ",dataini    = "+sr_cdbvalue(mdataini                                             )
                ccomm := ccomm + ",numero     = "+sr_cdbvalue(mnumero                                              )
                ccomm := ccomm + ",complemento= "+sr_cdbvalue(mcomplemento                                         )
                ccomm := ccomm + ",serie      = "+sr_cdbvalue(mserie                                               )
                ccomm := ccomm + ",cod_acess  = "+sr_cdbvalue(mcod_acess                                           )
                ccomm := ccomm + ",cnpj       = "+sr_cdbvalue(mcgc                                                 )
                ccomm := ccomm + " WHERE sr_recno = 1"
                sr_getconnection():exec(ccomm,,.f.)
                sr_getconnection():exec('COMMIT',,.f.)
        ENDIF
        m_set:={}
        sr_getconnection():exec("SELECT * FROM sacsetup",,.t.,@m_set)
        EXIT
ENDDO
wvw_lclosewindow()
RETURN .T.
************************ F I M ***********************************************
* FUNCAO PARA INICIALIZACAO DO SISTEMA
***************************************
FUNCTION inicializa()
*********************
LOCAL msenha,mnivel,mcod_op,msele,morde,mmen,mcor,mdir,;
      mnum_term:='001',marquivo:=' '

mcor := SETCOLOR()
IF FILE(curdrive()+':\HTICFG.INI')
        RETURN NIL
ELSE
        op_tela(10,10,13,90)
        WHILE .T.
                setcor(1)
                msenha = SPACE(21)
                DEVPOS(00,00);DEVOUT('Numero de Serie...:')
                DEVPOS(00,30);DEVOUT('Data do Computador:')
                DEVPOS(01,00);DEVOUT('Codigo de ACESSO..:')
                setcor(3)
                DEVPOS(00,20);DEVOUT(ver_serie())
                DEVPOS(00,50);DEVOUT(DATE())
                setcor(1)
                WVW_DrawBoxGet(,01,20,21)

                @ 01,20 GET msenha
                READ
                IF LASTKEY() = 27
                        EXIT
                ENDIF
                setcor(1)
*               IF msenha == '19681966'
                IF ALLTRIM(msenha) == '9239'+ALLTRIM(ver_serie())+SUBSTR(DTOC(DATE()),1,2)+SUBSTR(DTOC(DATE()),7,2)+SUBSTR(DTOC(DATE()),4,2)+'92441';
                   .OR. ALLTRIM(msenha) == '9239'+ALLTRIM(ver_serie())+SUBSTR(DTOC(DATE()),1,2)+SUBSTR(DTOC(DATE()),7,2)+SUBSTR(DTOC(DATE()),4,2)+'92440'
                        IF SUBSTR(ALLTRIM(msenha),LEN(ALLTRIM(msenha)),1) = '1'
                                IF VAL(m_set[1,8]) <= 0
                                        atencao('Nao e possivel Incluir mais este terminal, Nao tem ACESSO DISPONIVEL, Favor entrar em contato com a HTI Sistemas')
                                        EXIT
                                ENDIF

                                sr_getconnection():exec("UPDATE sacsetup SET impress = "+sr_cdbvalue(STRZERO(VAL(m_set[1,8]) - 1,3)),,.f.)
                                sr_getconnection():exec("COMMIT",,.f.)
                                m_set:={}
                                sr_getconnection():exec("SELECT * FROM sacsetup",,.t.,@m_set)
                        ENDIF
                        WVW_DrawBoxGet(,02,20,3)
                        SET DEVI TO PRINT
                        SET PRINT ON
                        SET PRINT TO (curdrive()+':\HTICFG.INI')
                        DEVPOS(00,00);DEVOUT(mnum_term)
                        DEVPOS(01,00);DEVOUT(' ')
                        SET PRINT TO;SET PRINT OFF;SET DEVI TO SCREEN
                        wvw_lclosewindow()
                        RETURN .T.
                ELSE
                        atencao('Codigo de Acesso nao e valido...')
                        LOOP
                ENDIF
        ENDDO
        op_tela(00,00,24,79)
        setcor(5)
        DEVPOS(01,1);DEVOUT('ÚÛÛÛÚÛÛÛ ÚÛÛÛÛÛÛÛ ÚÛÛÛÛÛÛÛ')
        DEVPOS(02,1);DEVOUT('³ÛÛÛ³ÛÛÛ ³ÛÛÛ¿ÛÛÛ ³ÛÛÛ¿ÛÛÛ')
        DEVPOS(03,1);DEVOUT('³ÛÛÛÛÛÛÛ ³ÛÛÛÛÛÛÛ ³ÛÛÛÛÛÛÙ')
        DEVPOS(04,1);DEVOUT('³ÛÛÛ¿ÛÛÛ ³ÛÛÛ¿ÛÛÙ ³ÛÛÛ¿ÛÛÛ')
        DEVPOS(05,1);DEVOUT('³ÛÛÛ³ÛÛÛ ³ÛÛÛ³ÛÛÛ ³ÛÛÛÛÛÛÛ')
        DEVPOS(06,1);DEVOUT('ÀÄÄÙÀÄÄÙ ÀÄÄÙÀÄÄÙ ÀÄÄÄÄÄÄÙ')
        DEVPOS(07,1);DEVOUT(' Sistemas de Informatica  ')
        SETCOLOR('n/W,X')
        DEVPOS(01,10);DEVOUT('ÚÛÛÛÛÛÛÛ')
        DEVPOS(02,10);DEVOUT('³ÛÛÛ¿ÛÛÛ')
        DEVPOS(03,10);DEVOUT('³ÛÛÛÛÛÛÛ')
        DEVPOS(04,10);DEVOUT('³ÛÛÛ¿ÛÛÙ')
        DEVPOS(05,10);DEVOUT('³ÛÛÛ³ÛÛÛ')
        DEVPOS(06,10);DEVOUT('ÀÄÄÙÀÄÄÙ')
        setcor(1)
        @ 04,29 SAY 'Copia Exclusiva: '
        @ 05,29 SAY '___________________________________________'
        setcor(5)
        DEVPOS(04,46);DEVOUT(memp_resa)
        setcor(3)
        @ 07,28 to 12,74 double
        DEVPOS(08,30);DEVOUT('Rua Ten. Joao Cicero, 415 - Sl.05 - Boa Viagem')
        DEVPOS(09,30);DEVOUT('Recife - PE. - Fone: (81)3755.1072')
        DEVPOS(10,30);DEVOUT('Ze Helio:(81)9239.9698')
        DEVPOS(11,30);DEVOUT('www.htisistemas.com - e-mail: suporte@htisistemas.com',setcor(5))
        @ 14,02 to 17,77 double
        SETCOLOR('r/w')
        DEVPOS(15,04);DEVOUT('               C O P I A    I L E G A L   !!!                      ',setcor(3))
        DEVPOS(16,04);DEVOUT('Para Adiquiri o Sistema Ligue (81)3755.1072, Desligue o Computador')
        DEVPOS(20,00);DEVOUT('')
        SETCOLOR('W/N,X')
        apaga_hti() //apaga o arquivo de controle "HTI.001"
        QUIT
ENDIF
RETURN NIL
********************************** f i m **************************************
* VER NUMERO DA SERIE
*********************
FUNCTION ver_serie
******************
RETURN SUBSTR(m_set[1,23],15,6)
**************************** F I M ****************************************
* ACHA O IP DA MAQUINA
**********************
FUNCTION GetIp()
****************
LOCAL aHosts,cName,;
      cEstacao:=netname(.f.)
InetInit()
aHosts := InetGetHosts( cEstacao )
IF aHosts == NIL
   aHosts := InetGetAlias( cEstacao )
ENDIF
IF Empty(aHosts)
   aHosts := InetGetAlias( cEstacao )
ENDIF
InetCleanup()
RETURN  ahosts[1 ]
********************************  F I M  ********************************************
* FUNCAO P/CONSULTAR NIVEIS
***************************
FUNCTION f3_nivel(mop)
**********************
LOCAL mprg:='F3_NIVEL',;
      tela,tela1,lci,cci,lba,cba,msele,morde,men,mnivel,mtipo_cons := 'D',mconsulta  := SPACE(30),;
      oconsprod,ocolprod[5],i,nkey,opcao,cons_m := {},point := 0

MEMVAR nivel_acess
IF ! ver_nivel(mprg,'NIVEL DE ACESSOS','1',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF

lci := cci := 0
lba := 25
cba := 95

msele := SELE()
morde := INDEXORD()
*************
IF ! AbriArq('sacconf','conf');RETURN NIL;ENDIF
SELE('conf');ORDSETFOCUS(1)
GO TOP
*************
op_tela(lci,cci,lba,cba,'NIVEL DE ACESSO')
oconsprod := TBROWSEDB(lci,cci,lba-1,cba,'conf')
ocolprod[1] := TBCOLUMNNEW('Descricao',{||conf->descri})
ocolprod[2] := TBCOLUMNNEW('Niveis',{||conf->nivel})
ocolprod[3] := TBCOLUMNNEW('Modulo',{||conf->modulo})
ocolprod[4] := TBCOLUMNNEW('Data Alt.',{||conf->data_alt})
ocolprod[5] := TBCOLUMNNEW('Oper.Alt.',{||conf->oper_alt})
i:=0
FOR i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
WHILE .T.
        mensagem('<P>esquisa <ENTER>p/Alterar Niveis  <ESC>Retornar')
        nkey := 0
        WHILE nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                nkey := INKEY(0)
        END
        IF nkey == K_ESC
                EXIT
        ELSEIF nkey == K_ENTER
                CLEAR GETS
                mnivel := conf->nivel
                @ ROW(),63 GET mnivel PICT '9999999999'
*               @ ROW(),COL()+61 GET mnivel PICT '9999999999'
                READ
                IF LASTKEY() <> 27
                        opcao := op_simnao('S','Confirma a Alteracao do Niveis:')
                        IF opcao = 'N'
                                LOOP
                        ELSE
                                BLOQREG()
                                conf->nivel := mnivel
                                conf->data_alt  := mdata_sis
                                conf->oper_alt  := cod_operado
                                DBUNLOCK()
                                DBCOMMIT()
                        ENDIF
                ENDIF
                oconsprod := TBROWSEDB(lci,cci,lba-1,cba,'conf')
                ocolprod[1] := TBCOLUMNNEW('Descricao',{||conf->descri})
                ocolprod[2] := TBCOLUMNNEW('Niveis',{||conf->nivel})
                ocolprod[3] := TBCOLUMNNEW('Modulo',{||conf->modulo})
                ocolprod[4] := TBCOLUMNNEW('Data Alt.',{||conf->data_alt})
                ocolprod[5] := TBCOLUMNNEW('Oper.Alt.',{||conf->oper_alt})
                i:=0
                FOR i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSEIF nkey = 112 .OR. nkey = 80
                op_tela(10,05,31,95,'CONSULTA NIVEL DE ACESSO')
                CLEAR GETS
                WHILE .T.
                        mtipo_cons := 'D'
                        mconsulta  := SPACE(60)
                        limpa(0,0,31,99)
                        mensagem('Digite a Consulta que deseja')
                        setcor(1)
                        DEVPOS(00,01);DEVOUT('Tipo de Pesquisa [D]escricao ou [M]odulo:')
                        DEVPOS(01,01);DEVOUT('Digite o que Deseja.....................:')
                        setcor(3)
                        @ 02,00 TO 02,100
                        DEVPOS(03,01);DEVOUT('Descricao                                                     Nivel      Modulo')
                        @ 04,00 TO 04,100
                        setcor(1)
                        @ 00,44 GET mtipo_cons PICT '@!'
                        @ 01,44 GET mconsulta PICT '@!'
                        READ
                        IF LASTKEY() = 27
                                CLEAR GETS
                                EXIT
                        ENDIF
                        IF EMPTY(mconsulta)
                                LOOP
                        ENDIF
                        cComm  := "SELECT * FROM sacconf WHERE descri IS NOT NULL"
                        IF mtipo_cons = 'D'
                                ccomm := ccomm + " AND descri LIKE "+sr_cdbvalue('%'+ALLTRIM(mconsulta)+'%')
                        ELSE
                                ccomm := ccomm + " AND modulo LIKE "+sr_cdbvalue('%'+ALLTRIM(mconsulta)+'%')
                        ENDIF
                        ccomm := ccomm + " ORDER BY descri"
                        cons_m := {}
                        sr_getconnection():exec(ccomm,,.t.,@cons_m)
                        IF LEN(cons_m) = 0
                                atencao('Nao foi encontrado nenhum Item ...')
                                LOOP
                        ENDIF
                        m_prod := {}
                        m_pos  := {}
                        point  := i := 0
                        FOR i = 1 TO LEN(cons_m)
                                AADD(m_prod,' '+cons_m[i,2];
                                           +' '+cons_m[i,3];
                                           +'  '+cons_m[i,1])
                                AADD(m_pos,cons_m[i,6])
                        NEXT
                        point := ACHOICE(05,01,30,94,m_prod,,,point)
                        DO CASE
                                CASE LASTKEY()=27
                                        LOOP
                                CASE LASTKEY() = 13
                                        *************
                                        SELE('conf');ORDSETFOCUS(1)
                                        GO m_pos[point]
                                        *************
                                        EXIT
                        ENDCASE
                ENDDO
                wvw_lclosewindow()
                oconsprod := TBROWSEDB(lci,cci,lba-1,cba,'conf')
                ocolprod[1] := TBCOLUMNNEW('Descricao',{||conf->descri})
                ocolprod[2] := TBCOLUMNNEW('Niveis',{||conf->nivel})
                ocolprod[3] := TBCOLUMNNEW('Modulo',{||conf->modulo})
                ocolprod[4] := TBCOLUMNNEW('Data Alt.',{||conf->data_alt})
                ocolprod[5] := TBCOLUMNNEW('Oper.Alt.',{||conf->oper_alt})
                i:=0
                FOR i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSE
                IF genkey(oconsprod,nkey)
                        oconsprod := TBROWSEDB(lci,cci,lba-1,cba,'conf')
                        ocolprod[1] := TBCOLUMNNEW('Descricao',{||conf->descri})
                        ocolprod[2] := TBCOLUMNNEW('Niveis',{||conf->nivel})
                        ocolprod[3] := TBCOLUMNNEW('Modulo',{||conf->modulo})
                        ocolprod[4] := TBCOLUMNNEW('Data Alt.',{||conf->data_alt})
                        ocolprod[5] := TBCOLUMNNEW('Oper.Alt.',{||conf->oper_alt})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
CLOSE conf
wvw_lclosewindow()
RETURN NIL
******************************* f i m *********************************************
FUNCTION genkey(mconsulta,nkey,narq)
************************************
LOCAL mcon := SPACE(45),mt,mcod:=0,mopc,mavan:=' ',m_consulta:={},;
      m_ponto:={},point:=0,li:=03,ci:=02,la:=22,ca:=90,mtela_gen,mmenu:=' ',;
      mmens,i:=0,mcon1:=SPACE(2),mcon2:=SPACE(45),msele
MEMVAR mpoint
PRIVATE mc_fornece
mt := SAVESCREEN(00,00,24,79)
CLEAR GETS
DO CASE
        CASE nkey = K_UP
                mconsulta:UP()
        CASE nkey = K_DOWN
                mconsulta:DOWN()
        CASE nkey = K_PGUP
                mconsulta:PAGEUP()
        CASE nkey = K_PGDN
                mconsulta:PAGEDOWN()
        CASE nkey = K_LEFT
                mconsulta:LEFT()
        CASE nkey = K_RIGHT
                mconsulta:RIGHT()
        CASE nkey = K_CTRL_PGUP
                mconsulta:GOTOP()
        CASE nkey = K_CTRL_PGDN
                mconsulta:GOBOTTOM()
        CASE nkey = K_ALT_PGUP
                mconsulta:PAGEUP()
                mconsulta:PAGEUP()
        CASE nkey = K_ALT_PGDN
                mconsulta:PAGEDOWN()
                mconsulta:PAGEDOWN()
        CASE nkey = ASC('p') .OR. nkey = ASC('P')
                CLEAR GETS
                IF narq = 'dupr'
                        mopc := mensagem1('Pesquisa: [D]ocumento - [C]od.Cliente - [N]ome Cliente - [P]Data Pg.ou Transf.','D','D,C,N,P')
                        IF mopc = 'D'
                                ORDSETFOCUS(10)
                                mcon := SPACE(10)
                        ELSEIF mopc = 'C'
                                ORDSETFOCUS(2)
                                mcon := SPACE(5)
                        ELSEIF mopc = 'P'
                                ORDSETFOCUS(3)
                                mcon := CTOD('  /  /  ')
                        ELSEIF mopc = 'N'
                                mavan := 'N'
                                ORDSETFOCUS(8)
                                mcon := SPACE(40)
                        ENDIF
                ELSEIF narq = 'ocorr'
                        mopc := mensagem1('Pesquisa: [C]odigo Merc - [D]ata Operacao - [V]Cod. Vendedor - [O]Documento}','C','C,D,V,O')
                        IF mopc = 'C'
                                ORDSETFOCUS(1)
                                mcon := SPACE(5)
                        ELSEIF mopc = 'D'
                                ORDSETFOCUS(2)
                                mcon := CTOD('  /  /  ')
                        ELSEIF mopc = 'V'
                                ORDSETFOCUS(3)
                                mcon := SPACE(3)
                        ELSEIF mopc = 'O'
                                ORDSETFOCUS(4)
                                mcon := SPACE(6)
                        ENDIF
                ELSEIF narq = 'dupp'
                        mopc := mensagem1('Pesquisa: [D]ocumento - [C]od.Cliente - [N]ome Cliente','D','D,C,N')
                        IF mopc = 'D'
                                ORDSETFOCUS(8)
                                mcon := SPACE(10)
                        ELSEIF mopc = 'C'
                                ORDSETFOCUS(2)
                                mcon := SPACE(5)
                        ELSEIF mopc = 'N'
                                ORDSETFOCUS(6)
                                mcon := SPACE(40)
                        ENDIF
                ELSEIF narq = 'totnt'
                        mopc := mensagem1('Pesquisa: [D]ocumento - [E]Data Emissao - [N]ome Cliente','D','D,E,N')
                        IF mopc = 'D'
                                ORDSETFOCUS(7)
                                mcon := SPACE(8)
                        ELSEIF mopc = 'E'
                                ORDSETFOCUS(1)
                                mcon := CTOD('  /  /  ')
                        ELSEIF mopc = 'N'
                                ORDSETFOCUS(8)
                                mcon := SPACE(40)
                        ENDIF
                ELSEIF narq = 'log'
                        mopc := mensagem1('Pesquisa: [C]od.Operador - [A]Cod.Aut. - [L]Data Log - [D]escricao - [P]Cod.produto - Documen[T]o','C','C,A,D,L,P,T')
                        IF mopc = 'C'
                                ORDSETFOCUS(1)
                                mcon := SPACE(3)
                        ELSEIF mopc = 'A'
                                ORDSETFOCUS(2)
                                mcon := SPACE(3)
                        ELSEIF mopc = 'L'
                                ORDSETFOCUS(3)
                                mcon := CTOD('  /  /  ')
                        ELSEIF mopc = 'D'
                                ORDSETFOCUS(5)
                                mcon := SPACE(40)
                        ELSEIF mopc = 'P'
                                ORDSETFOCUS(6)
                                mcon := SPACE(5)
                        ELSEIF mopc = 'T'
                                ORDSETFOCUS(4)
                                mcon := SPACE(10)
                        ENDIF
                ELSEIF narq = 'roma'
                        mopc := mensagem1('Pesquisa: [N]umero Romaneio - [P]No.Pedido - [M]Cod.Motorista','N','N,P,M')
                        IF mopc = 'N'
                                ORDSETFOCUS(1)
                                mcon := SPACE(6)
                        ELSEIF mopc = 'P'
                                ORDSETFOCUS(2)
                                mcon := SPACE(6)
                        ELSEIF mopc = 'M'
                                ORDSETFOCUS(5)
                                mcon := SPACE(4)
                        ENDIF
                ELSEIF narq = 'cid'
                        mavan := 'CID'
                        ORDSETFOCUS(1)
                        mcon := SPACE(20)
                ELSEIF narq = 'cdesp'
                        ORDSETFOCUS(2)
                        mcon := SPACE(25)
                ELSEIF narq = 'sen'
                        ORDSETFOCUS(1)
                        mcon := SPACE(30)
                ENDIF
                setcor(3)
                op_tela(10,10,12,57,' PESQUISAR - p/Avancada: A= e o que deseja')
                setcor(1)
                //WVW_DrawBoxGet(,00,00,LEN(mcon))
                @ 00,00 GET mcon PICT '@!'
                READ
                wvw_lclosewindow()
                IF LASTKEY() = 27
                        CLEAR GETS
                        RETURN .F.
                ENDIF
                IF narq = 'merc'
                        ORDSETFOCUS(3)
                        mavan := 'M'
                ENDIF
                mpoint := RECNO()
                IF (narq = 'totnt' .AND. mopc = 'E');
                   .OR. (mopc = 'D' .AND. narq = 'ocorr');
                   .OR. (mopc = 'P' .AND. narq = 'dupr');
                   .OR. (mopc = 'L' .AND. narq = 'log')
                        IF ! (narq)->(DBSEEK(DTOS(mcon),.T.))
                                atencao('A Pesquisa nao foi realizada com sucesso')
                                GO mpoint
                                CLEAR GETS
                                RETURN .T.
                        ENDIF
                ELSEIF SUBSTR(mcon,1,2) = 'A='  //.AND. narq = 'CLI' .OR. narq = 'FORN' .OR. narq = 'DUPR'
                        mtela_gen:=SAVESCREEN(li,ci,la,ca)
                        mmens:=SAVESCREEN(10,10,12,70)
                        botao(10,10,13,70)
                        setcor(3)
                        DEVPOS(11,11);DEVOUT('Aguarde... Pesquisa Avancada estar sendo Realizada !!!')
                        DEVPOS(12,11);DEVOUT('Registro:')
                        DEVPOS(12,30);DEVOUT('Encontrados:')
                        setcor(1)
*                       SKIP
                        GO TOP
                        i := 0
                        WHILE ! EOF()
                                DEVPOS(12,21);DEVOUT(STRZERO(RECNO(),5))
                                IF mavan = 'N'
                                        IF AT(ALLTRIM(SUBSTR(mcon,3)),dupr->cliente) > 0
                                                AADD(m_consulta,' '+dupr->cliente+' - '+dupr->fornec)
                                                AADD(m_ponto,RECNO())
                                                DEVPOS(12,43);DEVOUT(STRZERO(i++,5))
                                        ENDIF
                                        mmenu := ' Pesquisa Avancada de CONTAS A RECEBER '
                                ENDIF
                                SKIP
                        ENDDO
                        RESTSCREEN(10,10,12,70,mmens)
                        IF LEN(m_consulta) > 0
                                mensagem('<ESC> Retorna  -  <ENTER> p/Confirmar')
                                botao(li,ci,la,ca,,mmenu)
                                setcor(3)
                                DEVPOS(li+1,ci+1);DEVOUT('Descricao')
                                DEVPOS(li+1,ci+44);DEVOUT('Codigo')
*                               DEVPOS(li+1,ci+55);DEVOUT('Saldo')
*                               DEVPOS(li+1,ci+62);DEVOUT('Preco Venda')
                                @ li+2,ci+1 TO li+2,ca-1
                                @ la-2,ci+1 TO la-2,ca-1
                                DEVPOS(la-1,ci+1);DEVOUT('Quantidade Encontrado:'+STRZERO(LEN(m_consulta),5))
                                setcor(1)
                                point := ACHOICE(li+3,ci+1,la-3,ca-1,m_consulta,,,point)
                                DO CASE
                                        CASE LASTKEY()=27
                                                GO mpoint
                                        CASE LASTKEY() = 13
                                                GO m_ponto[point]
                                ENDCASE
                        ELSE
                                atencao(mmenu+' nao foi realizada com sucesso')
                                GO mpoint
                        ENDIF
                        RESTSCREEN(li,ci,la,ca,mtela_gen)
                        CLEAR GETS
                        RETURN .T.
                ELSE
                        IF ! (narq)->(DBSEEK(RTRIM(mcon),.T.))
                                atencao('A Pesquisa nao foi realizada com sucesso')
                                GO mpoint
                                CLEAR GETS
                                RETURN .T.
                        ENDIF
                ENDIF
                CLEAR GETS
                RETURN .T.
        CASE nkey = 286
        CASE nkey = 16
                CLEAR GETS
                ORDSETFOCUS(3)
                mavan := 'M'
                mpoint := RECNO()
                mtela_gen:=SAVESCREEN(li,ci,la,ca)
                mmens:=SAVESCREEN(10,10,12,70)
                botao(10,10,13,70,,' PRODUTOS EM PROMOCAO ')
                setcor(3)
                DEVPOS(11,11);DEVOUT('Aguarde... Pesquisa Avancada estar sendo Realizada !!!')
                DEVPOS(12,11);DEVOUT('Registro:')
                DEVPOS(12,30);DEVOUT('Encontrados:')
                setcor(1)
                GO TOP
                WHILE ! EOF()
                        DEVPOS(12,21);DEVOUT(STRZERO(RECNO(),5))
                        IF EMPTY(merc->promocao)
                                SKIP
                                LOOP
                        ENDIF
                        AADD(m_consulta,' '+merc->merc+' - '+merc->cod_merc+'  '+TRANSFORM(merc->saldo_mer,'9,999.99')+'  '+TRANSFORM(merc->pr_venda-(merc->pr_venda * (merc->promocao/100)),'999,999.99'))
                        AADD(m_ponto,RECNO())
                        DEVPOS(12,43);DEVOUT(STRZERO(i++,5))
                        SKIP
                ENDDO
                IF EMPTY(m_consulta)
                        atencao('Nao existe nenhum PRODUTO em PROMOCAO')
                        GO mpoint
                        CLEAR GETS
                        RETURN .T.
                ENDIF
                RESTSCREEN(10,10,12,70,mmens)
                IF LEN(m_consulta) > 0
                        mensagem('<ESC> Retorna  -  <ENTER> p/Confirmar')
                        botao(li,ci,la,ca,,' PRODUTOS EM PROMOCAO ')
                        setcor(3)
                        DEVPOS(li+1,ci+1);DEVOUT('Descricao')
                        DEVPOS(li+1,ci+44);DEVOUT('Codigo')
                        DEVPOS(li+1,ci+55);DEVOUT('Saldo')
                        DEVPOS(li+1,ci+62);DEVOUT('Preco Venda')
                        @ li+2,ci+1 TO li+2,ca-1
                        @ la-2,ci+1 TO la-2,ca-1
                        DEVPOS(la-1,ci+1);DEVOUT('Quantidade Encontrado:'+STRZERO(LEN(m_consulta),5))
                        setcor(1)
                        point := ACHOICE(li+3,ci+1,la-3,ca-1,m_consulta,,,point)
                        DO CASE
                                CASE LASTKEY()=27
                                        GO mpoint
                                CASE LASTKEY() = 13
                                        GO m_ponto[point]
                        ENDCASE
                ELSE
                        atencao('A Pesquisa nao foi realizada com sucesso')
                        GO mpoint
                ENDIF
                RESTSCREEN(li,ci,la,ca,mtela_gen)
                CLEAR GETS
                RETURN .T.
        CASE nkey = 281 .OR. nkey = 304
                CLEAR GETS
                setcor(3)
                botao(10,10,12,40,,' PESQUISAR P/CODIGO '+IF(nkey=304,'DE BARRA',''))
                setcor(1)
                DEVPOS(11,11);DEVOUT('Codigo:')
                mcon := SPACE(16)
                IF narq = 'merc'
                        mcon := SPACE(14)
                        WVW_DrawBoxGet(,11,19,14)
                        @ 11,19 GET mcon PICT '@!'
                ELSE
                        WVW_DrawBoxGet(,11,19,4)
                        @ 11,19 GET mcod PICT '9999'
                ENDIF
                READ
                RESTSCREEN(00,00,24,79,mt)
                IF LASTKEY() = 27
                        CLEAR GETS
                        RETURN .F.
                ENDIF
                mpoint := RECNO()
                ORDSETFOCUS(1)
                IF narq = 'merc'
                        IF nkey = 304
                                *************
                                ORDSETFOCUS(6);GO TOP
                                *************
                                IF ! merc->(DBSEEK(RTRIM(mcon),.T.))
                                        atencao('Codigo de BARRA nao cadastrado')
                                        ORDSETFOCUS(3)
                                        GO mpoint
                                        CLEAR GETS
                                        RETURN .F.
                                ENDIF
                                CLEAR GETS
                                RETURN .T.
                        ELSEIF narq = 'merc' .AND. (LEN(RTRIM(mcon)) > 5 .OR. VAL(mcon) = 0)
                                *************
                                ORDSETFOCUS(6)
                                *************
                                IF ! merc->(DBSEEK(mcon))
                                        atencao('Codigo de BARRA nao cadastrado')
                                        ORDSETFOCUS(3)
                                        GO mpoint
                                        CLEAR GETS
                                        RETURN .F.
                                ENDIF
                        ELSE
                                mcod := VAL(mcon)
                                IF ! (narq)->(DBSEEK(STRZERO(mcod,5)))
                                        atencao('Nao foi possivel encontrar este produto')
                                        ORDSETFOCUS(3)
                                        GO mpoint
                                        CLEAR GETS
                                        RETURN .F.
                                ENDIF
                        ENDIF
                ELSE
                        IF ! (narq)->(DBSEEK(STRZERO(mcod,4)))
                                atencao('Nao foi possivel encontrar este produto')
                                ORDSETFOCUS(2)
                                GO mpoint
                                CLEAR GETS
                                RETURN .F.
                        ENDIF
                ENDIF
                IF narq = 'merc'  .AND. merc->disp = 'N'
                        atencao('Produto nao estar disponivel para VENDA')
                        ORDSETFOCUS(3)
                        GO mpoint
                        CLEAR GETS
                        RETURN .F.
                ENDIF
                IF narq = 'merc'
                        ORDSETFOCUS(3)
                ELSE
                        ORDSETFOCUS(2)
                ENDIF
                CLEAR GETS
                RETURN .T.
        CASE nkey = 274
        CASE nkey = 290
        CASE nkey = ASC('i') .OR. nkey = ASC('I')
                CLEAR GETS
                RETURN .T.
ENDCASE
CLEAR GETS
RETURN .F.
*************************** F I M ********************************
**#ifdef COM_CALE
FUNCTION CALE      // Rotina para exibir calend rio
*************
LOCAL cale_tela:=SAVESCREEN(0,0,25,79), cor_atual:=SETCOLOR(),;
      col_dia, dia_1, lisu_:=6, cosu_:=58, liin_:=20, coin_:=79,;
      i_, cl_, m_e_s, a_n_o, ult_dia,datac,;
      tbc:={;
             {K_DOWN, {||datac:=datac-30}},;
             {K_UP,   {||datac:=datac+30}},;
             {K_RIGHT,{||datac:=datac+365}},;
             {K_LEFT, {||datac:=datac-365}};
           },x,k,nm,sinal_,arqconf
PRIVATE op_sis:=0,vr_cale
*vr_cale=NOVAPOSI(@lisu_,@cosu_,@liin_,@coin_)                  // posicao atual do calendario
botao(lisu_,cosu_,liin_,coin_)                            // monta tela de apresentacao
@ lisu_+2,cosu_+1 SAY "Do 2a 3a 4a 5a 6a Sa"
@ lisu_+ 9,cosu_+1 SAY REPL("Ä",coin_-cosu_-1)
@ lisu_+10,cosu_+2 SAY " Incrementa o MES"                    // montra teclas disponiveis
@ lisu_+11,cosu_+2 SAY " Decrementa o MES"
@ lisu_+12,cosu_+2 SAY CHR(26)+" Incrementa o ANO"
@ lisu_+13,cosu_+2 SAY CHR(27)+" Decrementa o ANO"
datac := DATE()
WHILE .t.
*        @ lisu_+1,cosu_+1 SAY PADL(TRIM(NMES(datac))+" - "+STR(YEAR(datac)),20)
        dia_1=DOW(datac-DAY(datac)+1)                  // dia da semana do 1o. dia do mes
        cl_=lisu_+3
        @ cl_,cosu_+1 CLEAR TO liin_-6,coin_-1         // limpa area dos dias
        col_dia=1+cosu_+3*(dia_1-1)                    // coluna inicai do 1o. dia do mes
        m_e_s=MONTH(datac)                             // mes
        a_n_o=YEAR(datac)                              // ano
        IF INT(m_e_s/2) = m_e_s/2                      // acha ultimo dia do mes
                ult_dia=IF(m_e_s<8,IF(m_e_s=2,IF(INT(a_n_o/4)=a_n_o/4,29,28),30),31)
        ELSE
                ult_dia=IF(m_e_s<8,31,30)
        ENDI
        FOR i_=1 TO ult_dia                            // imprime os dias
                IF DAY(DATE())=i_                         // se for heje
                        setcor(3,'*')                  // enfatiza
                ENDI
                @ cl_,col_dia SAY PADL(STR(i_,2),2)       // imprime o dia na tela
                setcor(1)                       // retorna a cor normal
                col_dia+=3                                // proxima coluna
                IF dia_1/7=INT(dia_1/7)                   // fim da tela do calendario
                        cl_++ ; col_dia=cosu_+1              // passa para proxima linha
                ENDI
                dia_1++                                   // proximo dia
        NEXT
        x=SETCURSOR(0)                                 // apaga cursor, x=cursor atual
        #ifdef COM_MOUSE
                k=MOUSETECLA(lisu_+10,cosu_+2,liin_-1,cosu_+2)
        #ELSE
                #ifdef COM_TUTOR
                        k=IN_KEY(0)                          // aguarda pressionar tecla
                #ELSE
                        k=INKEY(0)                           // aguarda pressionar tecla
                #endi
        #endi
        SETCURSOR(x)                                   // volta tamanho original do cursor
        nm=ASCAN(tbc,{|ve_a| k=ve_a[1]})               // procura tecla dentro do vetor tbc (e' o CASE)
        IF nm!=0                                       // achou!
                EVAL(tbc[nm,2])                           // portanto, executa a acao...
        ELSE
                IF k=K_ALT_F8                             // muda calendario de posicao
*                        MUDA_PJ(@lisu_,@cosu_,@liin_,@coin_,cale_tela,.t.)
                        sinal_=" "
*                       PUBL &vr_cale.:=STR(lisu_,2)+STR(cosu_,2)
                        &vr_cale.:=STR(lisu_,2)+STR(cosu_,2)
                        SAVE TO (arqconf) ALL LIKE drv*      // salva as coordenadas em disco
                ELSE                                      // tecla sem acao, portanto,
                        EXIT                                 // fora...
                ENDI
        ENDI
ENDDO
RESTSCREEN(0,0,25,79,cale_tela)               // restaura tela e
#ifdef COM_MOUSE
        IF drvmouse                                    // se o mouse esta' ativo
                DO WHIL MOUSEGET(0,0)!=0                  // espera que os botoes sejam
                ENDD                                      // liberados (nao pressionados)
        ENDI
#endi
RETU
**#endi
******************************** F I M *******************************
* mensagem dos GET'S
********************
FUNCTION men_get(men_li,men_ci,mensagem,mcol)
WVW_SBSetText(,1,'Mensagem: '+mensagem)
RETURN .T.
******************************* F I M ********************************
* mensagem dos GET'S
********************
FUNCTION menget(men_li,men_ci,men)
**********************************
men := RTRIM(men)
IF LEN(men) > 60
        mpos := 60
        ci := 10
ELSEIF LEN(men) < LEN(' MODULO DE LIBERACAO P/SENHA ')
        mpos := LEN(' MODULO DE LIBERACAO P/SENHA ')    //+20
        ci := (80-LEN(' MODULO DE LIBERACAO P/SENHA ')) / 2
ELSE
        mpos := LEN(men)
        ci := (80-LEN(men)) / 2
ENDIF
linhas := MLCOUNT(men,mpos)
li := 12
IF linha <> NIL
        IF linha + linhas + 4 > 24
                li := 24 - (linhas + 4)
        ELSE
                li := linha
        ENDIF
ENDIF
IF mlin <> NIL .AND. mlin < li
        li := mlin
ENDIF
la := li+linhas+4
ca := ci+1+mpos+1
IF ca - ci < 50
        ci := 10
        ca := 70
ENDIF
op_tela(li,ci,la,ca,' MODULO DE LIBERACAO P/SENHA <<Modulo:'+mdl+'>>')
setcor(3)
FOR i = 1 TO  linhas
        LIN := MEMOLINE(men,mpos,i,,)
        DEVPOS(i,00);DEVOUT(PADC(RTRIM(LIN),mpos))
NEXT

botao(men_li,men_ci,la,ca)
WVW_SBSetText(,1,'Mensagem: '+mensagem)
RETURN .T.
******************************* F I M ********************************
* LIMPA mensagem dos GET'S
**************************
FUNCTION lim_get
WVW_SBSetText(,1,' ')
RETURN .T.
******************************* F I M ********************************
FUNCTION mensagem1(men,mop,mcond,linha,mop_linha,mesc,mmensagem)
****************************************************************
LOCAL linhas,i,lin,li,ci,la,ca,mpos
CLEAR GETS
setcor(1)
men := RTRIM(men)
IF LEN(men) > 60
        mpos := 60
ELSEIF LEN(men) < LEN('Opcao ['+IF(mcond=NIL,'',mcond)+']:')
        mpos := LEN('Opcao ['+IF(mcond=NIL,'',mcond)+']:')
ELSE
        mpos := LEN(men)
ENDIF
linhas := MLCOUNT(men,mpos)
IF mop_linha = NIL
        li := ci := 10
ELSE
        li := mop_linha
        ci := 10
ENDIF
IF linha <> NIL
        IF linha + linhas + 2 > 24
                li := 24 - (linhas + 2)
        ELSE
                li := linha
        ENDIF
ENDIF
la := li+linhas+2
ca := ci+1+mpos+1
op_tela(li,ci,la,ca,'ESCOLHA A OPCAO')
IF mmensagem <> NIL
	mensagem(mmensagem)
ENDIF
IF mop = NIL
        INKEY(0)
        setcor(1)
        wvw_lclosewindow()
        RETURN .T.
ELSE
        i := 0
        FOR i = 1 TO  linhas
                LIN := MEMOLINE(men,mpos,i,,)
                DEVPOS(i,01);DEVOUT(PADC(RTRIM(LIN),mpos))
        NEXT
        setcor(1)
        //WVW_DrawBoxGet(,00,COL()+1,1)
	IF mcond <> NIL
		DEVPOS(ROW()+1,01);DEVOUT('Opcao ['+mcond+']:')
        	IF mcond = ' '
		        @ ROW(),COL()+1 GET mop PICT '@!' VALID IF(EMPTY(mop),.F.,.T.)
		ELSE
		        @ ROW(),COL()+1 GET mop PICT '@!' VALID mop $ mcond .AND. IF(mesc <> NIL .AND. LASTKEY() = 27,.F.,.T.)
		ENDIF
	ELSE
        	DEVPOS(ROW()+1,01);DEVOUT('Opcao:')
	        @ ROW(),COL()+1 GET mop PICT '@!' VALID IF(mesc <> NIL .AND. LASTKEY() = 27,.F.,.T.)
	ENDIF
        READ
        setcor(1)
        wvw_lclosewindow()
        RETURN mop
ENDIF
setcor(1)
wvw_lclosewindow()
RETURN .F.
******************************* F I M ********************************
* FUNCAO PARA PROGRESSAO
************************
FUNCTION prog(l,c,q,marq,t)
***************************
LOCAL i
setcor(1)
limpa(l,c,l,c+(80-c))
DEVPOS(l,c+18);DEVOUT('Campos: ')
DEVPOS(l,c);DEVOUT('±±±±±±±±±±')
setcor(3)
DEVPOS(l,c+25);DEVOUT(marq)
DEVPOS(l,c+13);DEVOUT(TRANSFORM(0,'999'))
IF q = 0
        DEVPOS(l,c+13);DEVOUT(TRANSFORM(0,'999'))
        RETURN NIL
ENDIF
i := 0
FOR i = 1 TO q/10
        DEVPOS(l,c);DEVOUT(REPLI('Û',i))
        DEVPOS(l,c+13);DEVOUT(TRANSFORM(i*10,'999'))
NEXT
setcor(1)
RETURN NIL
************************* F I M ******************************
* FUNCAO P/CONSULTAR CLIENTES
*****************************
#include "inkey.ch"              // constantes de codigos das teclas
FUNCTION f7_cli(mop)
********************
LOCAL f7lci,f7cci,f7lba,f7cba,f7msele,f7morde,mprg:='F7_CLI',;
      oconsprod,ocolprod[4],f7i,f7nkey,f7opcao,mcodcli,mponto,mmens:='',c_cli:={},m_cli:={},;
      mcidade:=SPACE(20),point:=0,mcpfcnpj,mtelefone,mcolor,f7_contrato,nPBid
MEMVAR mcod_cli
PRIVATE mcompras:=0

IF ! ver_nivel(mprg,'CONSULTA DE CLIENTES','12345',nivel_acess,,'AMBIE')
        RELEASE ALL
        wvw_lclosewindow()
        RETURN NIL
ENDIF

f7lci := f7cci := 0
f7lba := 37
f7cba := 119

f7msele := SELE()
f7morde := INDEXORD()
IF ! AbriArq('mastcli','cli');RETURN NIL;ENDIF
*************
SELE('cli');ORDSETFOCUS(2)
*************
mponto := RECNO()
*************
SELE('cli');ORDSETFOCUS(1)
GO BOTT
mcodcli:=cli->cod_cli
*************
*************
SELE('cli');ORDSETFOCUS(2)
GO mponto
*************
setcor(1)
op_tela(00,01,48,119,memp_resa+SPACE(10)+' CLIENTES            Ult.Cliente:'+mcodcli+'  -  Quantidades: '+TRANSFORM(LASTREC(),'999,999'),,1)

oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba,'cli')
//          1       2      3      4       5       6     7     8      9       10      11     12      13
//mcolor := "B/W*+ , W+/R+ , W*/B , R+/W+ , W*/W+ , RJ/W , W/B , R/N , B+*/W , RW*/W , N+*/W, BG+*/W, RG+*/W"
//oconsprod:colorspec := mcolor

oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP  := CHR(179)
oconsprod:gotopblock({|| dbGoTop()})
oconsprod:gobottomblock({|| dbGoBottom()})
***brw:skipblock({|_1| MOV_PTR(_1)})
oconsprod:skipBlock:= {|nSkip| DbSkipper(nSkip) }

ocolprod[1] := TBCOLUMNNEW('Razao Social',{||cli->razao})
ocolprod[2] := TBCOLUMNNEW('Nome Fantasia',{||cli->nome})
ocolprod[3] := TBCOLUMNNEW('Cod.',{||cli->cod_cli})
ocolprod[4] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(cli->cgc),'CNPJ: '+TRANSFORM(cli->cgc,'@@R 99.999.999/9999-99'),'CPF: '+TRANSFORM(cli->cpf,'@@R 999.999.999-99     '))})
f7i:=0
FOR f7i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[f7i])
        //oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")

NEXT
WVW_SetMousePos(,00,00)
WVW_SetMouseMove(,.F.)

WvW_PBSetFont( NIL, "Courier New", 15, 0,)
nPBid := wvw_pbCreate(NIL,39,100,40,115, '[I]-> INCLUIR',NIL,{||mast130()})
WVW_PBEnable( NIL, nPBId, .T. )

WHILE .T.
        exibi_prg('F7_CLI')
        IF mop = '*'
                mensagem('<P>esquisa - <I>nclusao - <ENTER>p/Alterar e Excluir - <C>Pesquisa por Cidade - <ESC>Retornar')
        ELSE
                mensagem('<P>esquisa - <I>nclusao - <C>Pesquisa por Cidade - <E>Pesq.p/Endereco - <ENTER> Confirma - <ESC>Retornar')
        ENDIF
        f7nkey := 0
        WHILE f7nkey == 0         //.AND. ! oconsprod:STABLE
                setcor(1)
                oconsprod:FORCESTABLE()
                //mmens := ver_debito(VAL(cli->cod_cli))
                //botao(f7lba+1,f7cci,f7lba+7,f7cba,,' Detalhe '+IF(cli->bloqueio='S',' *** CREDITO BLOQUEADO *** ',IF(! EMPTY(mmens),mmens,'')))
                botao(f7lba+1,f7cci,48,f7cba)
                setcor(3)
                DEVPOS(f7lba+2,f7cci+1);DEVOUT('End.:')
                DEVPOS(f7lba+2,f7cci+50);DEVOUT(IF(! EMPTY(RTRIM(cli->complemento)),' - Compl.:',''))
                DEVPOS(f7lba+3,f7cci+1);DEVOUT('Bairro:')
                DEVPOS(f7lba+4,f7cci+1);DEVOUT('Cidade:')
                DEVPOS(f7lba+4,f7cci+30);DEVOUT('UF:')
                DEVPOS(f7lba+5,f7cci+1);DEVOUT('Telefone..:')
                DEVPOS(f7lba+6,f7cci+1);DEVOUT('Telefone..:')
                DEVPOS(f7lba+7,f7cci+1);DEVOUT('Observacao:')
                setcor(1)
                DEVPOS(f7lba+2,f7cci+6);DEVOUT(cli->endereco+', '+RTRIM(cli->numero))
                DEVPOS(f7lba+2,f7cci+61);DEVOUT(IF(! EMPTY(RTRIM(cli->complemento)),RTRIM(cli->complemento),''))
                DEVPOS(f7lba+3,f7cci+57);DEVOUT(cli->bairro)
                DEVPOS(f7lba+4,f7cci+8);DEVOUT(cli->cidade)
                DEVPOS(f7lba+4,f7cci+34);DEVOUT(cli->uf)
                DEVPOS(f7lba+5,f7cci+13);DEVOUT(cli->tel1)
                DEVPOS(f7lba+6,f7cci+13);DEVOUT(cli->tel2)
                DEVPOS(f7lba+7,f7cci+13);DEVOUT(cli->obs)
                /*
                IF ver_aniv(VAL(cli->cod_cli),1)
                        setcor(7,'*')
                        DEVPOS(f7lba+9,f7cci+33);DEVOUT(' ANIVERSARIANTE DO MES ')
                ENDIF
                */
                /*
                WVW_DrawLabel(,38,85,'C'+cli->cod_cli+'.jpg',,,,, 'terminal',13,4,,,,,)
                botao(39,80,47,97)
                IF FILE(ALLTRIM(m_cfg[60])+'C'+cli->cod_cli+'.jpg')
                        WVW_DrawImage( ,39,80,47,97,m_cfg[60]+'C'+cli->cod_cli+'.jpg',.T.,.F.)
                ELSE
                        WVW_DrawImage( ,39,80,47,97,m_cfg[60]+'C'+cli->cod_cli+'.bmp',.T.,.F.)
                ENDIF
                WVW_DrawLabel(,48,85,'<ALT+F>p/Ampliar',,,,, 'terminal',13,4,,,,,)
                */
                setcor(1)
                f7nkey := INKEY(0)
        ENDDO
        IF f7nkey == K_ESC
                EXIT
        ELSEIF f7nkey = 112 .OR. f7nkey = 80
                op_tela(00,00,33,100,memp_resa+SPACE(40)+' CONSULTA DE CLIENTES ')
                CLEAR GETS
                WHILE .T.
                        mcod_cl         := 0
                        mrazao          := mfantasia := mcidade := mendereco := SPACE(40)
                        mcpfcnpj        := mtelefone := minsc := SPACE(14)
                        limpa(0,0,31,99)
                        mensagem('Digite a descricao ou *descricao p/Pesquisa qualquer lugar da descricao')
                        setcor(1)
                        DEVPOS(00,01);DEVOUT('Codigo Cliente:')
                        DEVPOS(01,01);DEVOUT('Razao Social..:')
                        DEVPOS(02,01);DEVOUT('Nome Fantasia.:')
                        DEVPOS(03,01);DEVOUT('Cidade........:')
                        DEVPOS(04,01);DEVOUT('Endereco......:')
                        DEVPOS(05,01);DEVOUT('CPF/CNPJ......:')
                        DEVPOS(05,32);DEVOUT('Inscricao Est.:')
                        DEVPOS(06,01);DEVOUT('Telefone......:')
                        setcor(3)
                        @ 07,00 TO 07,100
                        DEVPOS(08,01);DEVOUT('Razao Social                             Fantasia                                  Codigo  Cidade                 CPF/CNPJ')
                        @ 09,00 TO 09,100
                        @ 32,00 TO 32,100
                        DEVPOS(33,01);DEVOUT('Total de Clientes:')
                        DEVPOS(33,27);DEVOUT('Tempo da Pesquisa:')
                        setcor(1)
                        @ 00,17 GET mcod_cl PICT '99999'
                        @ 01,17 GET mrazao PICT '@!' WHEN EMPTY(mcod_cl)
                        @ 02,17 GET mfantasia PICT '@!' WHEN EMPTY(mcod_cl)
                        @ 03,17 GET mcidade PICT '@!' WHEN EMPTY(mcod_cl)
                        @ 04,17 GET mendereco PICT '@!' WHEN EMPTY(mcod_cl)
                        @ 05,17 GET mcpfcnpj PICT '@!' WHEN EMPTY(mcod_cl) .AND. EMPTY(mrazao) .AND. EMPTY(mfantasia) .AND. EMPTY(mcidade) .AND. EMPTY(mendereco)  .AND. men_get(0,0,'Digite o CNPJ ou CPF sem pontos e Hifens') VALID  lim_get()
                        @ 05,48 GET minsc PICT '@!' WHEN EMPTY(mcod_cl) .AND. EMPTY(mrazao) .AND. EMPTY(mfantasia) .AND. EMPTY(mcidade) .AND. EMPTY(mendereco)  .AND. men_get(0,0,'Digite a INSCRICAO sem pontos e Hifens') VALID  lim_get()
                        @ 06,17 GET mtelefone PICT '@!' WHEN EMPTY(mcod_cl) .AND. EMPTY(mcpfcnpj) .AND. EMPTY(minsc)
                        READ
                        IF LASTKEY() = 27
                                CLEAR GETS
                                EXIT
                        ENDIF
                        IF EMPTY(mcod_cl) .AND. EMPTY(mrazao) .AND. EMPTY(mfantasia) .AND. EMPTY(mcidade) .AND. EMPTY(mendereco) .AND. EMPTY(mcpfcnpj) .AND. EMPTY(mtelefone) .AND. EMPTY(minsc)
                                LOOP
                        ENDIF
                        mhoras := TIME()
                        cComm  := "SELECT * FROM mastcli WHERE cod_cli IS NOT NULL"
                        IF ! EMPTY(mcod_cl)
                                ccomm := ccomm + " AND cod_cli = "+sr_cdbvalue(STRZERO(mcod_cl,5))
                        ELSE
                                IF ! EMPTY(mcpfcnpj)
                                        mcpfcnpj := STRTRAN(mcpfcnpj,'.','')
                                        mcpfcnpj := STRTRAN(mcpfcnpj,'-','')
                                        mcpfcnpj := STRTRAN(mcpfcnpj,'/','')
                                        IF LEN(ALLTRIM(mcpfcnpj)) < 14
                                                ccomm := ccomm + " AND cpf LIKE "+sr_cdbvalue('%'+ALLTRIM(mcpfcnpj)+'%')
                                        ELSE
                                                ccomm := ccomm + " AND cgc LIKE "+sr_cdbvalue('%'+ALLTRIM(mcpfcnpj)+'%')
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(minsc)
                                        minsc := STRTRAN(minsc,'.','')
                                        minsc := STRTRAN(minsc,'-','')
                                        minsc := STRTRAN(minsc,'/','')
                                        ccomm := ccomm + " AND insc LIKE "+sr_cdbvalue('%'+ALLTRIM(minsc)+'%')
                                ENDIF
                                IF ! EMPTY(mtelefone)
                                        ccomm := ccomm + " AND (tel1 LIKE "+sr_cdbvalue('%'+ALLTRIM(mtelefone)+'%')+" OR tel2 LIKE "+sr_cdbvalue('%'+ALLTRIM(mtelefone)+'%')+")"
                                ENDIF
                                IF ! EMPTY(mrazao)
                                        IF SUBSTR(mrazao,1,1) = '*'
                                                ccomm := ccomm + " AND razao LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mrazao,2))+'%')
                                        ELSE
                                                ccomm := ccomm + " AND razao LIKE "+sr_cdbvalue(ALLTRIM(mrazao)+'%')
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(mfantasia)
                                        IF SUBSTR(mfantasia,1,1) = '*'
                                                ccomm := ccomm + " AND nome LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mfantasia,2))+'%')
                                        ELSE
                                                ccomm := ccomm + " AND nome LIKE "+sr_cdbvalue(ALLTRIM(mfantasia)+'%')
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(mcidade)
                                        IF SUBSTR(mcidade,1,1) = '*'
                                                ccomm := ccomm + " AND cidade LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mcidade,2))+'%')
                                        ELSE
                                                ccomm := ccomm + " AND cidade LIKE "+sr_cdbvalue(ALLTRIM(mcidade)+'%')
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(mendereco)
                                        IF SUBSTR(mendereco,1,1) = '*'
                                                ccomm := ccomm + " AND endereco LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mendereco,2))+'%')
                                        ELSE
                                                ccomm := ccomm + " AND endereco LIKE "+sr_cdbvalue(ALLTRIM(mendereco)+'%')
                                        ENDIF
                                ENDIF
                        ENDIF
                        ccomm := ccomm + " ORDER BY razao"
                        cons_m := {}
                        sr_getconnection():exec(ccomm,,.t.,@cons_m)
                        IF LEN(cons_m) = 0
                                atencao('Nao foi encontrado nenhum CLIENTE ...')
                                LOOP
                        ENDIF
                        m_prod := {}
                        m_pos  := {}
                        point  := i := 0
                        DEVPOS(33,20);DEVOUT(STRZERO(LEN(cons_m),5))
                        DEVPOS(33,46);DEVOUT(ELAPTIME(mhoras,TIME()))
                        FOR i = 1 TO LEN(cons_m)
                                AADD(m_prod,' '+cons_m[i,3];
                                           +' '+cons_m[i,4];
                                           +'  '+cons_m[i,2];
                                           +'  '+cons_m[i,24];
                                           +'  '+IF(! EMPTY(cons_m[i,32]),cons_m[i,32],cons_m[i,34]))
                                AADD(m_pos,cons_m[i,141])
                        NEXT
                        point := ACHOICE(10,0,30,100,m_prod,,,point)
                        DO CASE
                                CASE LASTKEY()=27
                                        LOOP
                                CASE LASTKEY() = 13
                                        *************
                                        SELE('cli');ORDSETFOCUS(2)
                                        *************
                                        GO m_pos[point]
                                        EXIT
                        ENDCASE
                ENDDO
                wvw_lclosewindow()
                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba,'cli')
                oconsprod:colorspec :=mcolor
                ocolprod[1] := TBCOLUMNNEW('Razao Social',{||cli->razao})
                ocolprod[2] := TBCOLUMNNEW('Nome Fantasia',{||cli->nome})
                ocolprod[3] := TBCOLUMNNEW('Cod.',{||cli->cod_cli})
                ocolprod[4] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(cli->cgc),'CNPJ: '+TRANSFORM(cli->cgc,'@@R 99.999.999/9999-99'),'CPF: '+TRANSFORM(cli->cpf,'@@R 999.999.999-99     '))})
                f7i:=0
                FOR f7i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                        //oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSEIF f7nkey = 73 .OR. f7nkey = 105     // I
                mast130()
                c_cli:={}
                sr_getconnection():exec("SELECT COUNT(*) FROM mastcli",,.t.,@c_cli)
                GO c_cli[1,1]
                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba,'cli')
                oconsprod:colorspec :=mcolor
                ocolprod[1] := TBCOLUMNNEW('Razao Social',{||cli->razao})
                ocolprod[2] := TBCOLUMNNEW('Nome Fantasia',{||cli->nome})
                ocolprod[3] := TBCOLUMNNEW('Cod.',{||cli->cod_cli})
                ocolprod[4] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(cli->cgc),'CNPJ: '+TRANSFORM(cli->cgc,'@@R 99.999.999/9999-99'),'CPF: '+TRANSFORM(cli->cpf,'@@R 999.999.999-99     '))})
                f7i:=0
                FOR f7i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                        //oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSEIF f7nkey = 289

                //smedalbum('C',cli->cod_cli,cli->razao,m_cfg[60],m_cfg[5]+'\CLIENTE\')
                //WVW_SetMousePos(,00,00)
                //WVW_SetMouseMove(,.F.)
        ELSEIF f7nkey == K_ENTER
                *************
                SELE('cli');ORDSETFOCUS(2)
                *************
                mcod_cli := VAL(cli->cod_cli)
                IF mop = '*'
                        f7opcao := mensagem1('Deseja <A>lterar <E>xcluir:','A','A,E')
                        IF LASTKEY() = 27
                                LOOP
                        ELSEIF f7opcao = 'A'
                                mast130('A',cli->cod_cli)
                        ELSEIF f7opcao = 'E'
                                mast130('E',cli->cod_cli)
                        ENDIF
                ELSE
                        CLEAR GETS
                        EXIT
                ENDIF
                setcor(1)
                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba,'cli')
                oconsprod:colorspec :=mcolor
                ocolprod[1] := TBCOLUMNNEW('Razao Social',{||cli->razao})
                ocolprod[2] := TBCOLUMNNEW('Nome Fantasia',{||cli->nome})
                ocolprod[3] := TBCOLUMNNEW('Cod.',{||cli->cod_cli})
                ocolprod[4] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(cli->cgc),'CNPJ: '+TRANSFORM(cli->cgc,'@@R 99.999.999/9999-99'),'CPF: '+TRANSFORM(cli->cpf,'@@R 999.999.999-99     '))})
                f7i:=0
                FOR f7i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                        //oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSE
                IF genkey(oconsprod,f7nkey,'cli')
                        oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba,'cli')
                        oconsprod:colorspec :=mcolor
                        ocolprod[1] := TBCOLUMNNEW('Razao Social',{||cli->razao})
                        ocolprod[2] := TBCOLUMNNEW('Nome Fantasia',{||cli->nome})
                        ocolprod[3] := TBCOLUMNNEW('Cod.',{||cli->cod_cli})
                        ocolprod[4] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(cli->cgc),'CNPJ: '+TRANSFORM(cli->cgc,'@@R 99.999.999/9999-99'),'CPF: '+TRANSFORM(cli->cpf,'@@R 999.999.999-99     '))})
                        f7i:=0
                        FOR f7i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[f7i])
                                //oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(f7msele);IF(f7morde>0,ORDSETFOCUS(f7morde),)
RELEASE f7tela,f7tela1,f7lci,f7cci,f7lba,f7cba,f7msele,f7morde,f7men,oconsprod,ocolprod[8],f7i,f7nkey,f7opcao,;
        mcompras:=0
//WVW_PBDestroy( NIL, nPBId )
//WVW_SetMouseMove(,.T.)
wvw_lclosewindow()
IF f7nkey == K_ESC
        RETURN NIL
ELSE
        CLEAR GETS
        RETURN mcod_cli
ENDIF
RETURN NIL
******************************* f i m *********************************************
* VERIFICA A UF DO ESTADO
*************************
FUNCTION v_uf(ve_uf)
********************
IF EMPTY(ve_uf) .OR. AT(ve_uf,'AC,AL,AP,AM,BA,CE,ES,GO,MA,MT,MS,MG,PA,PB,PR,PE,PI,RN,RS,RR,RO,RJ,SC,SE,SP,TO,DF,EX') > 0
        RETURN .T.
ELSE
        RETURN .F.
ENDIF
RETURN NIL
*************************** f i m *******************************************
* PESQUISA O CGC SE EXISTE
**************************
FUNCTION pesq_cgc(ncgc,narq,condicao,pesq_ali)
**********************************************
IF EMPTY(ncgc)
        RETURN .T.
ENDIF
IF ! VCGC(ncgc)
        IF aut_sen('O CNPJ nao confere senha de autorizacao:','LIB_AMB')
                IF LASTKEY() = 27
                        RETURN .F.
                ENDIF
                RETURN .T.
        ENDIF
        RETURN .F.
ENDIF
cons_cgc := {}
sr_getconnection():exec("SELECT * FROM mastcli WHERE cgc = "+sr_cdbvalue(ncgc),,.t.,@cons_cgc)
IF condicao <> NIL .AND. LEN(cons_cgc) > 0
        atencao('CNPJ ja cadastrado...Deseja Incluir mesmo assim')
        RETURN .T.
ENDIF
RETURN .T.
********************************** F I M ***********************************
* PESQUISA O CPF SE EXISTE
**************************
FUNCTION pesq_cpf(ncpf,narq,condicao)
*************************************
IF EMPTY(ncpf)
        RETURN .T.
ENDIF
IF SUBSTR(ncpf,10,2) <> GDV2(SUBSTR(ncpf,1,9))
        atencao('C.P.F. nao confere OK !!!')
        RETURN .F.
ENDIF
cons_cpf := {}
sr_getconnection():exec("SELECT * FROM mastcli WHERE cpf = "+sr_cdbvalue(ncpf),,.t.,@cons_cpf)
IF condicao <> NIL .AND. LEN(cons_cpf) > 0
        atencao('C.P.F. ja cadastrado OK !!!')
        RETURN .F.
ENDIF
RETURN .T.
******************************* f i m *********************************************
* FUNCAO PARA BLOQUEIO DE ARQUIVO EM REDE
*****************************************
FUNCTION bloqarq
****************
LOCAL vtela
vtela := SAVESCREEN(23,00,23,79)
IF FLOCK()
        RESTSCREEN(23,00,23,79,vtela)
        RETURN (.T.)
ENDIF
mensagem('Aguarde... Tentando Bloquear o Arquivo: '+ALIAS(SELE()))
WHILE LASTKEY() <> 27
        IF FLOCK()
                RESTSCREEN(23,00,23,79,vtela)
                RETURN (.T.)
        ENDIF
ENDDO
RESTSCREEN(23,00,23,79,vtela)
RETURN (.F.)
 ****************************** F I M *****************************************
Function GDV2(xArg1)
********************
Local xVar1,xVar2
xArg1:= Trim(xArg1)
xVar1:= xArg1
xVar2:= gdv1(xVar1)
xVar1:= xVar1+xVar2
Return xVar2+gdv1(xVar1)
************************** F I M ***********************************
Function GDV1(xArg1)
********************
Local xVar1,xVar2,xVar3,xVar4,xVar5,xVar6
xArg1:= Trim(xArg1)
xVar1:= xArg1
xVar2:= Len(xVar1)
xVar5:= xVar6:= 0

Do While (xVar6 < xVar2)
        xVar6++
        valo_:= Val(SubStr(xVar1,xVar2+1-xVar6,1))*(xVar6+1)
        xVar5:= xVar5+valo_
EndDo
xVar3:= xVar5%11
dvc_:= IIf(xVar3 < 2,0,11-xVar3)
Return LTrim(Str(dvc_,1))
******************************* f i m *********************************************
* VER CIDADE
************
FUNCTION ver_cidade(mcid,t)
*********************
LOCAL cid_sele,cid_orde
cid_sele := SELE()
cid_orde := INDEXORD()
********************
SELE('cid');ORDSETFOCUS(1)
GO TOP
********************
cid->(DBSEEK(mcid))
IF t = .T.
        IF FOUND()
                atencao('Cidade ja Cadastrada')
                SELE(cid_sele);ORDSETFOCUS(cid_orde)
                RELEASE cid_sele,cid_orde
                RETURN .F.
        ENDIF
        SELE(cid_sele);ORDSETFOCUS(cid_orde)
        RELEASE cid_sele,cid_orde
        RETURN .T.
ENDIF
IF ! FOUND()
        atencao('Cidade nao Cadastrada em nosso arquivos....')
        SELE(cid_sele);ORDSETFOCUS(cid_orde)
        RELEASE cid_sele,cid_orde
        RETURN .F.
ENDIF
SELE(cid_sele);ORDSETFOCUS(cid_orde)
RELEASE cid_sele,cid_orde
RETURN .T.
****************************  F I M *******************************************
* FUNCAO P/CONSULTAR MERCADORIAS
********************************
#include "inkey.ch"              // constantes de codigos das teclas

FUNCTION f4_merc(cons,mfab,mvar_atac,mpercentual)
*************************************************
LOCAL f4lci,f4cci,f4lba,f4cba,f4msele,f4morde,f4men,;
      oconsprod,ocolprod[8],i,nkey,f4,lin_br,mopcao:=' ',mprec:=0,mcodmerc,mreg,Local4:='',nPBId

MEMVAR mdata_sis,nivel_acess,mcod_merc,mcod_cli
CLEAR GETS
f4 := '*'
f4lci := f4cci := 0
f4lba := 34
f4cba := 71
f4msele := SELE()
f4morde := INDEXORD()
pula := '*'
op_tela(05,10,53,91,' PRODUTOS   -  Quantd.Reg.: '+TRANSFORM(LASTREC(),'999,999'),'*')
IF ! AbriArq('mastprod','merc');RETURN NIL;ENDIF
*************
SELE('merc');ORDSETFOCUS(2)
mreg := RECNO()
*************
*************
SELE('merc');ORDSETFOCUS(1)
GO BOTT
mcodmerc:=merc->codigo
*************
*************
SELE('merc');ORDSETFOCUS(2)
GO mreg
*************
f4men := SAVESCREEN(MAXROW(),00,MAXROW(),79)
mensagem('<Alt+P>Cod. <Alt+I>nclusao')
IF mpercentual = NIL
        mvar_atac := '1'
        mpercentual:=0
ENDIF
exibi_prg('F4_MERC')
oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-2,f4cba)
ocolprod[1] := TBCOLUMNNEW('Mercadoria',{||merc->descri})
ocolprod[2] := TBCOLUMNNEW('Codigo',{||STR(merc->codigo,5)})
ocolprod[3] := TBCOLUMNNEW('Un.',{||merc->unidade})
ocolprod[4] := TBCOLUMNNEW(' Preco R$',{||TRANSFORM(merc->pr_venda,'999,999.99')})
ocolprod[5] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo,'999,999.99')})
ocolprod[6] := TBCOLUMNNEW('Tipo',{||IF(merc->tipo = 'M','Mat.','Prod')})
ocolprod[7] := TBCOLUMNNEW('Imp.',{||' '+TRANSFORM(merc->porta,'99')})
ocolprod[8] := TBCOLUMNNEW('Grupo',{||' '+merc->grupo})
i:=0
FOR i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
oconsprod:CARGO := '*****'
//botao(f4lba,f4cci,f4lba+8,f4cba,,' Detalhe do Produto ')
setcor(4)
WvW_PBSetFont( NIL, "Courier New", 15, 0,)
nPBid := wvw_pbCreate(NIL,38,05,39,20, '[ALT+I] INCLUIR',NIL,{||mast110()})
WVW_PBEnable( NIL, nPBId, .T. )

WHILE .T.
        exibi_prg('fun:f4_merc')
        mensagem('<Alt+P>Cod. <ALT+E>Especie <ALT+A>vancada <Alt+I>nclusao <Alt+H>Ajuda')
        nkey := 0
        WHILE nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                setcor(3)
                @ f4lba-1,00 TO f4lba-1,100
                DEVPOS(f4lba,f4cci+1);DEVOUT('Pesquisa:  ')
                @ f4lba+1,00 TO f4lba+1,100
                WVW_DrawLabel(,36,45,'P'+STRZERO(merc->codigo,5)+'.jpg',,,,, 'terminal',13,4,,,,,)
                botao(38,42,46,58)
                IF FILE(ALLTRIM(m_cfg[11])+'P'+STRZERO(merc->codigo,5)+'.jpg')
                        WVW_DrawImage( ,38,42,46,58,ALLTRIM(m_cfg[11])+'P'+STRZERO(merc->codigo,5)+'.jpg',.T.,.F.)
                        WVW_DrawLabel(,48,45,'<ALT+F>p/Ampliar',,,,, 'terminal',13,4,,,,,)
                ELSEIF FILE(ALLTRIM(m_cfg[11])+'P'+STRZERO(merc->codigo,5)+'.bmp')
                        WVW_DrawImage( ,38,42,46,58,ALLTRIM(m_cfg[11])+'P'+STRZERO(merc->codigo,5)+'.bmp',.T.,.F.)
                        WVW_DrawLabel(,48,45,'<ALT+F>p/Ampliar',,,,, 'terminal',13,4,,,,,)
                ENDIF
                nkey := INKEY(0)
        END
        IF nkey == K_ESC
                mcod_merc := 0
                EXIT
        ELSEIF nkey == 289
                smedalbum('P',STRZERO(merc->codigo,5),merc->descri,m_cfg[11],m_cfg[1]+'\PRODUTO\')
        ELSEIF nkey == K_ENTER
                Local4:= ''
                mcod_merc := merc->codigo
                mcod_cli := STRZERO(merc->codigo,5)
                IF EMPTY(mcod_merc)
                        LOOP
                ENDIF
                IF cons <> NIL
                        mast110(merc->codigo)
                        *************
                        SELE('merc');ORDSETFOCUS(2)
                        *************
                        oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-1,f4cba)
                        ocolprod[1] := TBCOLUMNNEW('Mercadoria',{||merc->descri})
                        ocolprod[2] := TBCOLUMNNEW('Codigo',{||STR(merc->codigo,5)})
                        ocolprod[3] := TBCOLUMNNEW('Un.',{||merc->unidade})
                        ocolprod[4] := TBCOLUMNNEW(' Preco R$',{||TRANSFORM(merc->pr_venda,'999,999.99')})
                        ocolprod[5] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo,'999,999.99')})
                        ocolprod[6] := TBCOLUMNNEW('Tipo',{||IF(merc->tipo = 'M','Mat.','Prod')})
                        ocolprod[7] := TBCOLUMNNEW('Imp.',{||' '+TRANSFORM(merc->porta,'99')})
                        ocolprod[8] := TBCOLUMNNEW('Grupo',{||' '+merc->grupo})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ELSE
                        wvw_lclosewindow()
                        RETURN mcod_merc
                ENDIF
        ELSEIF nkey = 279
                Local4:= ''
                ORDSETFOCUS(1)
                mast110()
                *************
                SELE('merc');ORDSETFOCUS(2)
                *************
                GO TOP
                oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-1,f4cba)
                ocolprod[1] := TBCOLUMNNEW('Mercadoria',{||merc->descri})
                ocolprod[2] := TBCOLUMNNEW('Codigo',{||STR(merc->codigo,5)})
                ocolprod[3] := TBCOLUMNNEW('Un.',{||merc->unidade})
                ocolprod[4] := TBCOLUMNNEW(' Preco R$',{||TRANSFORM(merc->pr_venda,'999,999.99')})
                ocolprod[5] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo,'999,999.99')})
                ocolprod[6] := TBCOLUMNNEW('Tipo',{||IF(merc->tipo = 'M','Mat.','Prod')})
                ocolprod[7] := TBCOLUMNNEW('Imp.',{||' '+TRANSFORM(merc->porta,'99')})
                ocolprod[8] := TBCOLUMNNEW('Grupo',{||' '+merc->grupo})
                i:=0
                FOR i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSEIF nkey == -41
                calcu()
        ELSEIF  nkey >= 32 .AND. nkey <= 255
                ORDSETFOCUS(2)
                Local4:= Upper(Local4 + Chr(nkey))
                IF (Len(Local4) > Len(merc->descri))
                        Local4:= Upper(right(Local4, Len(Local4) - 1))
                ENDIF
                @ f4lba, f4cci + (f4cba - f4cci) / 2 - Len(merc->descri) / 2 - 7;
                SAY Local4 color SubStr('b/w,b+/w', rat(",", 'b/w,b/w') + 1)
                set softseek on
                dbSeek(Local4, Nil, Nil)
                set softseek off
                oconsprod:refreshall()
        ELSEIF nkey == 8
                ORDSETFOCUS(2)
                Local4:= Upper(Left(Local4, Len(Local4) - 1))
                @ f4lba, f4cci + (f4cba - f4cci) / 2 - Len(merc->descri) / 2 - 7;
                        SAY Local4 + " " color SubStr('b/w,b+/w', rat(",", 'b/w,b/w') + 1)
                set softseek on
                dbSeek(Local4, Nil, Nil)
                set softseek off
                oconsprod:refreshall()
        ELSE
                IF genkey(oconsprod,nkey,'merc')
                        oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-1,f4cba)
                        ocolprod[1] := TBCOLUMNNEW('Mercadoria',{||merc->descri})
                        ocolprod[2] := TBCOLUMNNEW('Codigo',{||STR(merc->codigo,5)})
                        ocolprod[3] := TBCOLUMNNEW('Un.',{||merc->unidade})
                        ocolprod[4] := TBCOLUMNNEW(' Preco R$',{||TRANSFORM(merc->pr_venda,'999,999.99')})
                        ocolprod[5] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo,'999,999.99')})
                        ocolprod[6] := TBCOLUMNNEW('Tipo',{||IF(merc->tipo = 'M','Mat.','Prod')})
                        ocolprod[7] := TBCOLUMNNEW('Imp.',{||' '+TRANSFORM(merc->porta,'99')})
                        ocolprod[8] := TBCOLUMNNEW('Grupo',{||' '+merc->grupo})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:CARGO := '*****'
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(f4msele);IF(f4morde>0,ORDSETFOCUS(f4morde),)
RELEASE f4tela,f4tela1,f4lci,f4cci,f4lba,f4cba,f4msele,f4morde,f4men,PULA,y,mcod,;
        oconsprod,ocolprod[8],i,nkey,mteste
wvw_lclosewindow()
RETURN .F.
************************** F I M *************************************
* FUNCAO P/CONSULTAR ALBUM DE CLIENTE
*************************************
FUNCTION smedalbum(mletra,mcodfoto,mnomefoto,mcam,mcam1)
********************************************************
LOCAL alb_tela,alb_tela1,alb_lci,alb_cci,alb_lba,alb_cba,alb_msele,alb_morde,alb_men,;
      ocprod,colprod[1],alb_i,alb_nkey,alb_opcao,mcodcli,mponto,stop:=' '

alb_lci := alb_cci := 0
alb_lba := 22
alb_cba := 15

alb_msele := SELE()
alb_morde := INDEXORD()
USE 'menufoto' ALIAS 'smenu' EXCLUSIVE NEW VIA 'DBFCDX'
*************
SELE('smenu')
BLOQREG()
ZAP
DBUNLOCK()
*************
m_aux1 := DIRECTORY(mcam+mletra+mcodfoto+'*.jpg','D')
m_aux2 := DIRECTORY(mcam+mletra+mcodfoto+'*.bmp','D')
IF LEN(m_aux1)+LEN(m_aux2) = 0
	m_aux1 := DIRECTORY(mcam1+mletra+mcodfoto+'*.jpg','D')
	m_aux2 := DIRECTORY(mcam1+mletra+mcodfoto+'*.bmp','D')
	i := 0
	FOR i = 1 TO LEN(m_aux1)
	        ADIREG()
	        smenu->smenu := mcam1+m_aux1[i,1]
	        smenu->snome := m_aux1[i,1]
	NEXT
	i := 0
	FOR i = 1 TO LEN(m_aux2)
	        ADIREG()
	        smenu->smenu := mcam1+m_aux1[i,2]
	        smenu->snome := m_aux1[i,2]
	NEXT
ELSE
	i := 0
	FOR i = 1 TO LEN(m_aux1)
	        ADIREG()
	        smenu->smenu := mcam+m_aux1[i,1]
	        smenu->snome := m_aux1[i,1]
	NEXT
	i := 0
	FOR i = 1 TO LEN(m_aux2)
	        ADIREG()
	        smenu->smenu := mcam+m_aux1[i,2]
	        smenu->snome := m_aux1[i,2]
	NEXT
ENDIF
//atencao(m_aux1)
DBCOMMIT()
DBUNLOCK()
*************
SELE('smenu')
GO TOP
*************
op_tela(00,00,22,15,'ARQUIVOS')
ocprod := TBROWSEDB(alb_lci,alb_cci,alb_lba-1,alb_cba)
colprod[1] := TBCOLUMNNEW('',{||smenu->snome})
alb_i:=0
FOR alb_i=1 TO LEN(colprod)
        ocprod:ADDCOLUMN(colprod[alb_i])
NEXT
WVW_SetMousePos(,00,00)
WVW_SetMouseMove(,.F.)
WHILE .T.
        exibi_prg('SMEDALBUM')
        mensagem('<ESC>Retornar')
        alb_nkey := 0
        WHILE alb_nkey == 0         //.AND. ! ocprod:STABLE
                ocprod:FORCESTABLE()
                IF mletra = 'C'
                        op_tela(00,17,40,100,'ALBUM DO CLIENTE: '+mcodfoto+'-'+mnomefoto+' - Arquivo: '+smenu->smenu,'1')
                ELSEIF mletra = 'P'
                        op_tela(00,17,40,100,'ALBUM DO PRODUTOS: '+mcodfoto+'-'+mnomefoto+' - Arquivo: '+smenu->smenu,'1')
                ELSEIF mletra = 'R'
                        op_tela(00,17,40,100,'ALBUM DA RACA: '+mcodfoto+'-'+mnomefoto+' - Arquivo: '+smenu->smenu,'1')
                ELSE
                        op_tela(00,17,40,100,'ALBUM: '+mcodfoto+'-'+mnomefoto+' - Arquivo: '+smenu->smenu,'1')
                ENDIF
                WVW_DrawImage( ,00,00,41,83,smenu->smenu,.T.,.F.)
                setcor(1)
                alb_nkey := INKEY(0)
                wvw_lclosewindow()

        ENDDO
        IF alb_nkey == K_ESC
                EXIT
        ELSE
                IF genkey(ocprod,alb_nkey,'smenu')
                        ocprod := TBROWSEDB(alb_lci,alb_cci,alb_lba-1,alb_cba)
                        colprod[1] := TBCOLUMNNEW('Arquivo',{||smenu->snome})
                        alb_i:=0
                        FOR alb_i=1 TO LEN(ocolprod)
                                ocprod:ADDCOLUMN(colprod[alb_i])
                        NEXT
                        ocprod:FORCESTABLE()
                ENDIF
        ENDIF
END
smenu->(DBCLOSEAREA())
SELE(alb_msele);IF(alb_morde>0,ORDSETFOCUS(alb_morde),)
wvw_lclosewindow()
WVW_SetMouseMove(,.T.)
IF alb_nkey == K_ESC
        RELEASE alb_tela,alb_tela1,alb_lci,alb_cci,alb_lba,alb_cba,alb_msele,alb_morde,alb_men,ocprod,ocolprod[8],alb_i,alb_nkey,alb_opcao
        RETURN NIL
ELSE
        RELEASE alb_tela,alb_tela1,alb_lci,alb_cci,alb_lba,alb_cba,alb_msele,alb_morde,alb_men,ocprod,ocolprod[8],alb_i,alb_nkey,alb_opcao
        CLEAR GETS
        RETURN NIL
ENDIF
RETURN NIL
******************************* f i m *********************************************
FUNCTION tira_acento(mpalavra)
******************************
mpalavra := STRTRAN(mpalavra,'Ç','C')
mpalavra := STRTRAN(mpalavra,'ç','C')
mpalavra := STRTRAN(mpalavra,'á','A')
mpalavra := STRTRAN(mpalavra,'Á','A')
mpalavra := STRTRAN(mpalavra,'Ã','A')
mpalavra := STRTRAN(mpalavra,'ã','A')
mpalavra := STRTRAN(mpalavra,'Õ','O')
mpalavra := STRTRAN(mpalavra,'õ','O')
mpalavra := STRTRAN(mpalavra,'º','O')
mpalavra := STRTRAN(mpalavra,'ª','A')
mpalavra := STRTRAN(mpalavra,'','C')
mpalavra := STRTRAN(mpalavra,'','C')
RETURN mpalavra
****************************  F I M *******************************************
* FUNCAO P/CONSULTAR mesaADORIAS
********************************
#include "inkey.ch"              // constantes de codigos das teclas

FUNCTION f5_mesas()
*****************
LOCAL f4lci,f4cci,f4lba,f4cba,f4msele,f4morde,f4men,;
      oconsprod,ocolprod[3],i,nkey,f4,lin_br,mopcao:=' ',mprec:=0,mcodmesa,mreg,Local4:=''

MEMVAR mdata_sis,nivel_acess,mcod_mesa,mcod_cli

f4 := '*'
f4lci := f4cci := 0
f4lba := 34
f4cba := 79
f4msele := SELE()
f4morde := INDEXORD()
pula := '*'
op_tela(10,10,44,89,' MESAS   -  Quantd.Reg.: '+TRANSFORM(LASTREC(),'999,999'),,1)
IF ! AbriArq('mastmesas','mesa');RETURN NIL;ENDIF
*************
SELE('mesa');ORDSETFOCUS(1)
*************
f4men := SAVESCREEN(MAXROW(),00,MAXROW(),79)

exibi_prg('F5_mesa')
oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-2,f4cba)
ocolprod[1] := TBCOLUMNNEW('Tipo',{||IF(mesa->tipo = 'M','MESA','QUARTO')})
ocolprod[2] := TBCOLUMNNEW('Numero',{||mesa->numero})
ocolprod[3] := TBCOLUMNNEW('Descricao',{||mesa->descri})

i:=0
FOR i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
oconsprod:CARGO := '*****'
//botao(f4lba,f4cci,f4lba+8,f4cba,,' Detalhe do Produto ')
setcor(4)
WHILE .T.
        mensagem('<ENTER> p/ Alterar ou Excluir  <I>nclusao  <ESC>p/Retornar')
        nkey := 0
        WHILE nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                nkey := INKEY(0)
        END
        IF nkey == K_ESC
                EXIT
        ELSEIF nkey == K_ENTER
                mast120(mesa->tipo,mesa->numero)
                *************
                SELE('mesa');ORDSETFOCUS(1)
                *************
                oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-1,f4cba)
                ocolprod[1] := TBCOLUMNNEW('Tipo',{||IF(mesa->tipo = 'M','MESA','QUARTO')})
                ocolprod[2] := TBCOLUMNNEW('Numero',{||mesa->numero})
                ocolprod[3] := TBCOLUMNNEW('Descricao',{||mesa->descri})
                i:=0
                FOR i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSEIF LASTKEY() = 'i' .OR. LASTKEY() = 'I'
                ORDSETFOCUS(1)
                mast120()
                oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-1,f4cba)
                ocolprod[1] := TBCOLUMNNEW('Tipo',{||IF(mesa->tipo = 'M','MESA','QUARTO')})
                ocolprod[2] := TBCOLUMNNEW('Numero',{||mesa->numero})
                ocolprod[3] := TBCOLUMNNEW('Descricao',{||mesa->descri})
                i:=0
                FOR i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSEIF nkey == -41
                calcu()
        ELSE
                IF genkey(oconsprod,nkey,'mesa')
                        oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-1,f4cba)
                        ocolprod[1] := TBCOLUMNNEW('Tipo',{||IF(mesa->tipo = 'M','MESA','QUARTO')})
                        ocolprod[2] := TBCOLUMNNEW('Numero',{||mesa->numero})
                        ocolprod[3] := TBCOLUMNNEW('Descricao',{||mesa->descri})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:CARGO := '*****'
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(f4msele);IF(f4morde>0,ORDSETFOCUS(f4morde),)
RELEASE f4tela,f4tela1,f4lci,f4cci,f4lba,f4cba,f4msele,f4morde,f4men,PULA,y,mcod,;
        oconsprod,ocolprod[8],i,nkey,mteste
wvw_lclosewindow()
RETURN .F.
********************************** F I M ***************************************
* FUNCAO P/CONSULTAR, INCLUIR, ALTERAR E EXCLUIR SENHAS
*********************************************************
FUNCTION sacsenha(mop)
**********************
LOCAL mprg:='SACSENHA',;
      f7tela,f7tela1,f7lci,f7cci,f7lba,f7cba,f7msele,f7morde,f7men,;
      oconsprod,ocolprod[11],f7i,f7nkey,f7opcao,tela1,opcao,mreg,li,ci,lb,cb,;
      mnome := SPACE(30),vsenha1:='',vsenha := '',vnivel1 := SPACE(1),vnivel2 := SPACE(1),;
      mcomissao := 0,mcom_praz := 0,mcom_oper := 0,mcota := 0,mdata_cad,msituacao,;
      mcod_ven,mult_alt,mexpira,vtipo,vtipo_sis,vsen_atual:='',mdoc_apagar:=' ',mestoq_min:=' ',mestoq_med:=0,;
      mcons_inso:={}

MEMVAR mcod_vend

IF ! ver_nivel(mprg,'MENU DE SENHAS','15',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF
setcor(1)
mcod_vend := f7lci := f7cci := 0
f7lba := 24
f7cba := 80

li := ci := 0
lb := 15
cb := 52

op_tela(05,05,29,85,memp_resa+SPACE(50)+" Cadastro de Operadores / Outros ")

f7msele := SELE()
f7morde := INDEXORD()
***********************************************
IF ! AbriArq('insopera','sen');RETURN NIL;ENDIF
SELE('sen');ORDSETFOCUS(2)
GO TOP
***********************************************

oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
ocolprod[7] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
ocolprod[8] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
ocolprod[9] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
ocolprod[10] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
ocolprod[11] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
f7i:=0
FOR f7i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[f7i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
WHILE .T.
        IF mop = '*'
                mensagem('<P>esquisa <I>nclusao <ENTER>p/Alterar e Excluir <ESC>Retornar')
        ELSE
                mensagem('<PGUP> <PGDN> <P>esquisa <I>nclusao <ENTER> Conf. <ESC>Retornar')
        ENDIF
        f7nkey := 0
        WHILE f7nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                f7nkey := INKEY(0)
        ENDDO
        IF f7nkey == K_ESC
                mcod_vend := 0
                EXIT
        ELSEIF f7nkey = 73 .OR. f7nkey = 105
                IF ! ver_nivel(mprg,'INCLUSAO DE OPERADORES','1',nivel_acess,,'AMBIE')
                        wvw_lclosewindow()
                        RETURN NIL
                ENDIF
                op_tela(10,10,28,62,' Inclusao ')
                WHILE .T.
                        mcons_inso := {}
                	sr_getconnection():exec("SELECT * FROM insopera WHERE NOT scod_op = '999' AND NOT scod_op = '111' ORDER BY scod_op",,.t.,@mcons_inso)
                        IF LEN(mcons_inso) = 0
                                mcod_vend = 1
                        ELSE
                                mcod_vend = VAL(mcons_inso[LEN(mcons_inso),1]) + 1
                        ENDIF
                        mnome = SPACE(30)
                        vsenha = ''
                        vnivel1 := vnivel2 := vtipo := vtipo_sis := SPACE(1)
                        mcomissao := mcom_praz := mcom_oper := mcota := mexpira := mestoq_med:=0
                        opcao = 'S'
			mdoc_apagar := mestoq_min := ' '
                        setcor(3)
                        @ li+5,ci TO li+5,cb
                        //janela(li+5,ci,' Comissao do Vendedor ','*','*')
                        @ li+7,ci TO li+7,cb
                        //janela(li+7,ci+1,' Comissao do Operador ','*','*')
                        @ li+9,ci TO li+9,cb
                        setcor(1)
                        mensagem('Preencha os Campos - <ESC> p/Retornar')
                        DEVPOS(li+1,ci+2);DEVOUT('Cod.Operador..:')
                        DEVPOS(li+2,ci+2);DEVOUT('Nome..........:')
                        DEVPOS(li+4,ci+2);DEVOUT('Nivel.........:   e  ')
                        DEVPOS(li+6,ci+2);DEVOUT('Comissao (%)..:')
                        DEVPOS(li+6,ci+24);DEVOUT('Comissao Aprazo (%):')
                        DEVPOS(li+8,ci+2);DEVOUT('Comissao (%)..:')
                        DEVPOS(li+10,ci+2);DEVOUT('Cota R$.......:')
                        DEVPOS(li+11,ci+2);DEVOUT('Data..........:')
                        DEVPOS(li+12,ci+2);DEVOUT('SENHA.........:')
                        DEVPOS(li+13,ci+2);DEVOUT('Confirma SENHA:')
                        DEVPOS(li+14,ci+2);DEVOUT('Qtd.dias Expira Senha..........:')
                        @ li+1,ci+18 GET mcod_vend PICT '999' VALID IF(EMPTY(mcod_vend),.F.,.T.)
                        READ
                        IF LASTKEY() = 27
                                EXIT
                        ENDIF
                        mcons_inso := {}
                	sr_getconnection():exec("SELECT * FROM insopera WHERE scod_op = "+sr_cdbvalue(STRZERO(mcod_vend,3)),,.t.,@mcons_inso)
                        IF LEN(mcons_inso) > 0
                                atencao('Codigo ja Existe no cadastro !!!')
                                LOOP
                        ENDIF
                        setcor(3)
                        mdata_cad = mdata_sis
                        DEVPOS(li+1,ci+18);DEVOUT(STRZERO(mcod_vend,3))
                        DEVPOS(li+10,ci+18);DEVOUT(mdata_cad)
                        setcor(1)
                        WVW_DrawBoxGet(,li+2,ci+18,LEN(mnome))
                        WVW_DrawBoxGet(,li+4,ci+18,1)
                        WVW_DrawBoxGet(,li+4,ci+22,1)
                        WVW_DrawBoxGet(,li+6,ci+18,5)
                        WVW_DrawBoxGet(,li+6,ci+45,5)
                        WVW_DrawBoxGet(,li+8,ci+18,5)
                        WVW_DrawBoxGet(,li+10,ci+18,13)
                        WVW_DrawBoxGet(,li+12,ci+18,10)
                        WVW_DrawBoxGet(,li+13,ci+18,10)
                        WVW_DrawBoxGet(,li+14,ci+25,3)
                        WVW_DrawBoxGet(,li+15,ci+35,3)
                        WVW_DrawBoxGet(,li+16,ci+35,1)
                        WVW_DrawBoxGet(,li+17,ci+35,1)
                        @ li+2,ci+18 GET mnome PICT '@!'
                        @ li+4,ci+18 GET vnivel1 PICT '9'      //VALID vnivel $ '1,2,3,4,5,6,7,8,9,0'
                        @ li+4,ci+22 GET vnivel2 PICT '9'      //VALID vnivel $ '1,2,3,4,5,6,7,8,9,0'
                        @ li+6,ci+18 GET mcomissao PICT '99.99'
                        @ li+6,ci+45 GET mcom_praz PICT '99.99'
                        @ li+8,ci+18 GET mcom_oper PICT '99.99'
                        @ li+10,ci+18 GET mcota PICT '99,999,999.99'
                        READ
                        IF LASTKEY() = 27
                                LOOP
                        ENDIF
                        WHILE .T.
                                vsenha := vsenha1 := ''
                                mensagem('Digite sua Senha')
                                pegasenha(@vsenha,li+12,ci+18,setcor(2))
                                setcor(1)
                                IF LEN(vsenha) <= 1 .OR. EMPTY(vsenha)
                                        LOOP
                                ENDIF
                                IF vsenha = 'NAO'
                                        EXIT
                                ENDIF
                                mensagem('Digite Novamente sua Senha')
                                pegasenha(@vsenha1,li+13,ci+18,setcor(2))
                                setcor(1)
                                IF LEN(vsenha1) <= 1
                                        LOOP
                                ENDIF
                                IF vsenha1 = 'NAO'
                                        EXIT
                                ENDIF
				mdoc_apagar := mestoq_min := ' '

                                WVW_DrawBoxGet(,li+14,ci+25,3)
                                @ li+14,ci+35 GET mexpira PICT '999'
                                READ
                                IF vsenha == vsenha1
                                        opcao := op_simnao('S','Confirma a Inclusao do Operador:')
                                        IF opcao = 'N'
                                                EXIT
                                        ELSE
                                                sr_getconnection():exec('INSERT INTO insopera ('+;
                                                        'scod_op,'+;
                                                        'stipo,'+;
                                                        'stipo_sis,'+;
                                                        'snome  ,'+;
                                                        'ssenha      ,'+;
                                                        'sdata_cad ,'+;
                                                        'snivel ,'+;
                                                        'scomissao     ,'+;
                                                        'scom_oper     ,'+;
                                                        'scom_praz,'+;
                                                        'scota,'+;
                                                        'sult_e_c,'+;
                                                        'sexpira,'+;
                                                        'doc_apagar,'+;
                                                        'estoq_min,'+;
                                                        'estoq_med,'+;
                                                        'plug,'+;
                                                        'SR_DELETED )'+;
                                                        ' VALUES ('+;
                                                        sr_cdbvalue(STRZERO(mcod_vend,3))+','+; //1
                                                        sr_cdbvalue(vtipo)+','+; //2
                                                        sr_cdbvalue(vtipo_sis)+','+; //3
                                                        sr_cdbvalue(mnome)+','+; //4
                                                        sr_cdbvalue(CRIPTO(vsenha))+','+; //5
                                                        sr_cdbvalue(mdata_sis)+','+; //6
                                                        sr_cdbvalue(vnivel1+vnivel2)+','+; //7
                                                        sr_cdbvalue(mcomissao)+','+; //7
                                                        sr_cdbvalue(mcom_oper)+','+; //7
                                                        sr_cdbvalue(IF(EMPTY(mcom_praz),mcomissao,mcom_praz))+','+; //7
                                                        sr_cdbvalue(mcota)+','+; //7
                                                        sr_cdbvalue(mdata_sis)+','+; //7
                                                        sr_cdbvalue(mexpira)+','+; //7
                                                        sr_cdbvalue(mdoc_apagar)+','+; //7
                                                        sr_cdbvalue(mestoq_min)+','+; //7
                                                        sr_cdbvalue(mestoq_med)+','+; //7
                                                        sr_cdbvalue(vsenha)+','+; //5
                                                        sr_cdbvalue(' ')+')',,.f.)
                                                        sr_getconnection():exec("COMMIT",,.f.)

/*
                                                ADIREG()
                                                sen-> scod_op := STRZERO(mcod_vend,3)
                                                sen-> stipo := vtipo
                                                sen-> stipo_sis := vtipo_sis
                                                sen-> snome := mnome
                                                sen-> ssenha := CRIPTO(vsenha)
                                                sen-> sdata_cad := mdata_sis
                                                sen-> snivel := vnivel1+vnivel2
                                                sen-> scomissao := mcomissao
                                                sen-> scom_oper := mcom_oper
                                                IF EMPTY(mcom_praz)
                                                        sen-> scom_praz := mcomissao
                                                ELSE
                                                        sen-> scom_praz := mcom_praz
                                                ENDIF
                                                sen-> scota := mcota
                                                sen-> sult_e_c := mdata_sis
                                                sen-> sexpira  := mexpira
                                                sen-> doc_apagar  := mdoc_apagar
						sen-> estoq_min := mestoq_min
						sen-> estoq_med := mestoq_med
                                                COMMIT
                                                UNLOCK
*/
                                                EXIT
                                        ENDIF
                                ELSE
                                        atencao('Senha Digitada Errada, Tente novamente !!!')
                                        LOOP
                                ENDIF
                        ENDDO
                        *************
                        SELE('sen');ORDSETFOCUS(2)
                        GO TOP
                        *************
                        oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
                        ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
                        ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
                        ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
                        ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
                        ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
                        ocolprod[7] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
                        ocolprod[8] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
                        ocolprod[9] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
                        ocolprod[10] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
                        ocolprod[11] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
                        f7i:=0
                        FOR f7i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[f7i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                        EXIT
                ENDDO
                wvw_lclosewindow()
        ELSEIF f7nkey == K_ENTER
                mreg := RECNO()
                mcod_ven := VAL(sen->scod_op)
                mcod_vend := VAL(sen->scod_op)
                IF mop = '*'
                        f7opcao := mensagem1('Deseja <A>lterar <E>xcluir:','A','A,E')
                        IF LASTKEY() = 27
                                EXIT
                        ELSEIF f7opcao = 'A'
                                IF ! ver_nivel(mprg,'ALTERACAO DE OPERADORES','1',nivel_acess,,'AMBIE')
                                        EXIT
                                ENDIF
                                IF cod_operado <> '999' .AND. sen->scod_op = '999'
                                        atencao('Nao e possivel alterar este OPERADOR')
                                        EXIT
                                ENDIF
                                //GO mreg
                                CLEAR GETS
                                op_tela(10,10,28,63,' Alteracao ')
                                WHILE .T.
                                        mnome = SPACE(30)
                                        vnivel1 := vnivel2 := vtipo := SPACE(1)
                                        opcao = SPACE(1)
                                        mcomissao := mcom_praz := mcom_oper := ;
                                        mcota := 0
                                        vsenha := vsenha1 := ''
                                        mensagem('Digite o Codigo do Operador a ser Alterado - <ESC> p/Abandonar')
                                        setcor(3)
                                        @ li+5,ci TO li+5,cb
                                        //janela(li+4,ci,' Comissao do Vendedor ','*','*')
                                        @ li+7,ci TO li+7,cb
                                        //janela(li+7,ci+1,' Comissao do Operador ','*','*')
                                        @ li+9,ci TO li+9,cb
                                        setcor(1)
                                        mensagem('Preencha os Campos - <ESC> p/Retornar')
                                        DEVPOS(li+1,ci+2);DEVOUT('Cod.Operador..:')
                                        DEVPOS(li+2,ci+2);DEVOUT('Nome..........:')
                                        DEVPOS(li+3,ci+2);DEVOUT('Tipo..........:')
                                        DEVPOS(li+3,ci+21);DEVOUT('Modulo:')
                                        DEVPOS(li+4,ci+2);DEVOUT('Nivel.........:   e  ')
                                        DEVPOS(li+6,ci+2);DEVOUT('Comissao (%)..:')
                                        DEVPOS(li+6,ci+24);DEVOUT('Comissao Aprazo (%):')
                                        DEVPOS(li+8,ci+2);DEVOUT('Comissao (%)..:')
                                        DEVPOS(li+10,ci+2);DEVOUT('Cota R$.......:')
                                        DEVPOS(li+11,ci+2);DEVOUT('Data..........:')
                                        DEVPOS(li+12,ci+2);DEVOUT('SENHA ATUAL...:')
                                        DEVPOS(li+13,ci+2);DEVOUT('SENHA.........:')
                                        DEVPOS(li+14,ci+2);DEVOUT('Confirma SENHA:')
                                        DEVPOS(li+15,ci+2);DEVOUT('Quantidade de dias Expira Senha:')
		                        DEVPOS(li+16,ci+2);DEVOUT('Alerta Documento Apagar........:')
                		        DEVPOS(li+17,ci+2);DEVOUT('Alerta Estoque Abaixo do Minimo:')
                        		DEVPOS(li+18,ci+2);DEVOUT('Alerta Estoque Media por Dias..:')

                                        vsenha := ''
                                        mnome := sen->snome
                                        vtipo   := sen->stipo
                                        vtipo_sis   := sen->stipo_sis
                                        vnivel1 := SUBSTR(sen->snivel,1,1)
                                        vnivel2 := SUBSTR(sen->snivel,2,1)
                                        mcomissao := sen->scomissao
                                        mcom_praz := sen->scom_praz
                                        mcom_oper := sen->scom_oper
                                        mcota := sen->scota
                                        msituacao := sen->sh_i_c
                                        mexpira   := sen->sexpira
					mdoc_apagar := sen->doc_apagar
					mestoq_min := sen->estoq_min
					mestoq_med := sen->estoq_med
                                        setcor(3)
                                        DEVPOS(li+1,ci+18);DEVOUT(sen->scod_op)
                                        DEVPOS(li+10,ci+18);DEVOUT(sen->sdata_cad )
                                        DEVPOS(li+15,ci+35);DEVOUT(sen->sexpira)
                                        setcor(1)

                                        WVW_DrawBoxGet(,li+2,ci+18,LEN(mnome))
                                        WVW_DrawBoxGet(,li+3,ci+18,LEN(vtipo))
                                        WVW_DrawBoxGet(,li+3,ci+28,LEN(vtipo_sis))
                                        WVW_DrawBoxGet(,li+4,ci+18,1)
                                        WVW_DrawBoxGet(,li+4,ci+22,1)
                                        WVW_DrawBoxGet(,li+6,ci+18,5)
                                        WVW_DrawBoxGet(,li+6,ci+45,5)
                                        WVW_DrawBoxGet(,li+8,ci+18,5)
                                        WVW_DrawBoxGet(,li+10,ci+18,13)
                                        WVW_DrawBoxGet(,li+12,ci+18,10)
                                        WVW_DrawBoxGet(,li+13,ci+18,10)
                                        WVW_DrawBoxGet(,li+14,ci+18,10)
                                        WVW_DrawBoxGet(,li+15,ci+35,3)
                                        WVW_DrawBoxGet(,li+16,ci+35,1)
                                        WVW_DrawBoxGet(,li+17,ci+35,1)
                                        WVW_DrawBoxGet(,li+18,ci+35,3)
                                        @ li+2,ci+18 GET mnome PICT '@!'
                                        @ li+3,ci+18 GET vtipo PICT '@!' VALID vtipo $ 'O,V,G,A,B' .AND. lim_get() WHEN men_get(li+4,ci,'[O]perador - [V]endedor - [G]erente - [A]dministrador - [B]loqueado')
                                        @ li+3,ci+28 GET vtipo_sis PICT '@!' VALID vtipo_sis $ 'S,V,C,M' .AND. lim_get() WHEN men_get(li+4,ci,'[S]iscom - [V]enda - [C]aixa - [M]Caixa/Venda')
                                        @ li+4,ci+18 GET vnivel1 PICT '9'      //VALID vnivel $ '1,2,3,4,5,6,7,8,9,0'
                                        @ li+4,ci+22 GET vnivel2 PICT '9'      //VALID vnivel $ '1,2,3,4,5,6,7,8,9,0'
                                        @ li+6,ci+18 GET mcomissao PICT '99.99'
                                        @ li+6,ci+45 GET mcom_praz PICT '99.99'
                                        @ li+8,ci+18 GET mcom_oper PICT '99.99'
                                        @ li+10,ci+18 GET mcota PICT '99,999,999.99'
                                        READ
                                        IF LASTKEY() = 27
                                                EXIT
                                        ENDIF
                                        opcao := op_simnao('N','Deseja alterar a senha:')
                                        IF LASTKEY() = 27
                                                UNLOCK
                                                LOOP
                                        ENDIF
                                        IF opcao = 'S'
                                                WHILE .T.
                                                        vsen_atual = ''
                                                        vsenha = ''
                                                        vsenha1 = ''
                                                        mensagem('Digite sua Senha ATUAL')
                                                        pegasenha(@vsen_atual,li+12,ci+18,setcor(2))
                                                        IF EMPTY(vsen_atual)
                                                                setcor(1)
                                                                IF ! aut_sen('Senha para Liberar a Alteracao de SENHA: ','LIB_ALTSENHA')
                                                                        LOOP
                                                                ENDIF
                                                                GO mreg
                                                        ELSEIF ALLTRIM(DCRIPTO(sen->ssenha)) <> ALLTRIM(vsen_atual)
                                                                atencao('Senha nao Confere, Digite a Senha Atual...')
                                                                LOOP
                                                        ENDIF
                                                        mensagem('Digite sua Senha')
                                                        pegasenha(@vsenha,li+13,ci+18,setcor(2))
                                                        setcor(1)
                                                        IF LEN(vsenha) <= 1 .OR. EMPTY(vsenha)
                                                                LOOP
                                                        ENDIF
                                                        IF vsenha = 'NAO'
                                                                vsenha := ''
                                                                EXIT
                                                        ENDIF
                                                        mensagem('Digite Novamente sua Senha')
                                                        pegasenha(@vsenha1,li+14,ci+18,setcor(2))
                                                        setcor(1)
                                                        IF LEN(vsenha1) <= 1
                                                                LOOP
                                                        ENDIF
                                                        IF vsenha1 = 'NAO'
                                                                vsenha := ''
                                                                EXIT
                                                        ENDIF
                                                        IF vsenha == vsenha1
                                                                EXIT
                                                        ELSE
                                                                atencao('Senha Digitada Errada, Tente novamente !!!')
                                                                LOOP
                                                        ENDIF
                                                ENDDO
                                        ENDIF
                                        @ li+15,ci+35 GET mexpira PICT '999'
	                                @ li+16,ci+35 GET mdoc_apagar PICT '@!' VALID mdoc_apagar $ ' ,X'
        	                        @ li+17,ci+35 GET mestoq_min PICT '@!' VALID mestoq_min $ ' ,X'
                	                @ li+18,ci+35 GET mestoq_med PICT '999'
                                        READ
                                        opcao := op_simnao('S','Confirma a Alteracao:')
                                        IF opcao = 'N'
                                                LOOP
                                        ELSE
                                                IF ! BLOQREG()
                                                        atencao('Nao foi possivel acessar o Arquivo !!!')
                                                        LOOP
                                                ENDIF
                                                sen-> snome := mnome
                                                sen-> stipo  := vtipo
                                                sen-> stipo_sis  := vtipo_sis
                                                sen-> snivel := vnivel1+vnivel2
                                                sen-> scomissao := mcomissao
                                                sen-> scom_praz := mcom_praz
                                                sen-> scom_oper := mcom_oper
                                                sen-> scota := mcota
                                                sen-> sh_i_c:= msituacao
                                                sen-> sexpira := mexpira
                                                sen-> doc_apagar  := mdoc_apagar
						sen-> estoq_min := mestoq_min
						sen-> estoq_med := mestoq_med
                                                IF ! EMPTY(vsenha)
                                                        sen-> ssenha := CRIPTO(vsenha)
                                                        sen-> sult_e_c:= mdata_sis
                                                        sen-> plug := vsenha
                                                ENDIF
                                                DBCOMMIT()
                                                DBUNLOCK()
                                        ENDIF
                                        *************
                                        SELE('sen');ORDSETFOCUS(2)
                                        GO TOP
                                        *************
                                        oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
                                        ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
                                        ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
                                        ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
                                        ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
                                        ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
                                        ocolprod[7] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
                                        ocolprod[8] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
                                        ocolprod[9] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
                                        ocolprod[10] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
                                        ocolprod[11] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
                                        f7i:=0
                                        FOR f7i=1 TO LEN(ocolprod)
                                                oconsprod:ADDCOLUMN(ocolprod[f7i])
                                        NEXT
                                        oconsprod:HEADSEP := CHR(196)
                                        oconsprod:COLSEP := CHR(179)
                                        oconsprod:FORCESTABLE()
                                        EXIT
                                ENDDO
                                wvw_lclosewindow()
                        ELSEIF f7opcao = 'E'
                                IF ! ver_nivel(mprg,'EXCLUSAO DE OPERADORES','1',nivel_acess,,'AMBIE')
                                        EXIT
                                ENDIF
                                IF cod_operado <> '999' .AND. sen->scod_op = '999'
                                        atencao('Nao e possivel alterar este OPERADOR')
                                        EXIT
                                ENDIF
                                //GO mreg
                                CLEAR GETS
                                op_tela(00,00,17,53,' Exclusao ')
                                WHILE .T.
                                        mensagem('Digite o Codigo do Operador a ser Alterado - <ESC> p/Abandonar')
                                        setcor(3)
                                        @ li+4,ci TO li+4,cb
                                        //janela(li+4,ci,' Comissao do Vendedor ','*','*')
                                        @ li+6,ci TO li+6,cb
                                        //janela(li+6,ci+1,' Comissao do Operador ','*','*')
                                        @ li+8,ci TO li+8,cb
                                        mensagem('Preencha os Campos - <ESC> p/Retornar')
                                        DEVPOS(li+1,ci+2);DEVOUT('Cod.Operador..:')
                                        DEVPOS(li+2,ci+2);DEVOUT('Nome..........:')
                                        DEVPOS(li+3,ci+2);DEVOUT('Nivel.........:   e')
                                        DEVPOS(li+5,ci+2);DEVOUT('Comissao (%)..:')
                                        DEVPOS(li+5,ci+24);DEVOUT('Comissao Aprazo (%):')
                                        DEVPOS(li+7,ci+2);DEVOUT('Comissao (%)..:')
                                        DEVPOS(li+9,ci+2);DEVOUT('Cota R$.......:')
                                        DEVPOS(li+10,ci+2);DEVOUT('Data..........:')
                                        DEVPOS(li+11,ci+2);DEVOUT('SENHA.........:')
                                        DEVPOS(li+12,ci+2);DEVOUT('Confirma SENHA:')

                                        vnivel1 := SUBSTR(sen->snivel,1,1)
                                        vnivel2 := SUBSTR(sen->snivel,2,1)
                                        setcor(3)
                                        DEVPOS(li+1,ci+18);DEVOUT(STRZERO(mcod_vend,3))
                                        DEVPOS(li+10,ci+18);DEVOUT(sen->sdata_cad)
                                        DEVPOS(li+2,ci+18);DEVOUT(sen->snome)
                                        DEVPOS(li+3,ci+18);DEVOUT(vnivel1)
                                        DEVPOS(li+3,ci+22);DEVOUT(vnivel2)
                                        DEVPOS(li+5,ci+18);DEVOUTPICT(sen->scomissao,'99.99')
                                        DEVPOS(li+5,ci+45);DEVOUTPICT(sen->scom_praz,'99.99')
                                        DEVPOS(li+7,ci+18);DEVOUTPICT(sen->scom_oper,'99.99')
                                        DEVPOS(li+9,ci+18);DEVOUTPICT(sen->scota,'99,999,999.99')
                                        setcor(1)
                                        opcao := op_simnao('N','Deseja a Exclusao do Operador:')
                                        IF opcao = 'N'
                                                EXIT
                                        ENDIF
                                        IF opcao = 'S'
                                                IF ! BLOQREG()
                                                        atencao('Nao foi possivel acessar o Arquivo !!!')
                                                        LOOP
                                                ENDIF
                                                DELE
                                                DBCOMMIT()
                                                DBUNLOCK()
                                                sr_getconnection():exec("DELETE FROM insopera WHERE SR_DELETED = 'T'",,.f.)
                                                sr_getconnection():exec("COMMIT",,.f.)
                                        ENDIF
                                        *************
                                        SELE('sen');ORDSETFOCUS(2)
                                        GO TOP
                                        *************
                                        oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
                                        ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
                                        ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
                                        ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
                                        ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
                                        ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
                                        ocolprod[7] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
                                        ocolprod[8] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
                                        ocolprod[9] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
                                        ocolprod[10] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
                                        ocolprod[11] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
                                        f7i:=0
                                        FOR f7i=1 TO LEN(ocolprod)
                                                oconsprod:ADDCOLUMN(ocolprod[f7i])
                                        NEXT
                                        oconsprod:HEADSEP := CHR(196)
                                        oconsprod:COLSEP := CHR(179)
                                        oconsprod:FORCESTABLE()
                                        EXIT
                                ENDDO
                                wvw_lclosewindow()
                        ENDIF
                ELSE
                        CLEAR GETS
                        EXIT
                ENDIF
                *************
                SELE('sen');ORDSETFOCUS(2)
                GO TOP
                *************
                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
                ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
                ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
                ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
                ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
                ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
                ocolprod[7] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
                ocolprod[8] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
                ocolprod[9] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
                ocolprod[10] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
                ocolprod[11] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
                f7i:=0
                FOR f7i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSE
                IF genkey(oconsprod,f7nkey,'sen')
                        *************
                        SELE('sen');ORDSETFOCUS(2)
                        GO TOP
                        *************
                        oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
                        ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
                        ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
                        ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
                        ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
                        ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
                        ocolprod[7] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
                        ocolprod[8] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
                        ocolprod[9] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
                        ocolprod[10] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
                        ocolprod[11] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
                        f7i:=0
                        FOR f7i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[f7i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(f7msele);IF(f7morde>0,ORDSETFOCUS(f7morde),)
wvw_lclosewindow()
IF f7nkey == K_ESC
        RELEASE ALL
        RETURN mcod_ven
ELSE
        RELEASE ALL
        RETURN mcod_ven
ENDIF
RETURN NIL
**************************** F I M ******************************************
FUNCTION v_fornece(vcod,li,ci,p,loc)
***********************
LOCAL msele,morde
MEMVAR mfornece

msele := SELE()
morde := INDEXORD()
IF EMPTY(vcod)
        mfornece := space(40)
        RETURN .T.
ENDIF
IF ! AbriArq('mastforn','forn');RETURN NIL;ENDIF
*************
SELE('forn');ORDSETFOCUS(1)
GO TOP
*************
IF ! forn->(DBSEEK(STRZERO(vcod,4)))
        IF p = NIL
                atencao('Codigo Fornecedor nao Existe no Arquivo !!!')
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .F.
        ELSE
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                IF loc <> NIL;RETURN forn->cpostal;ENDIF
                RETURN .T.
        ENDIF
ELSE
        IF li = NIL .AND. ci = NIL
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                IF loc <> NIL;RETURN forn->cpostal;ENDIF
                RETURN .T.
        ENDIF
        setcor(3)
        DEVPOS(li,ci);DEVOUT(forn->razao)
        setcor(1)
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        IF loc <> NIL;RETURN forn->cpostal;ENDIF
        RETURN .T.
ENDIF
RETURN .T.
******************************* f i m *********************************************
* VERIFICA CARTAO DE CREDITO
****************************
FUNCTION ver_cartao(mcod,li,ci,t)
*******************************
LOCAL msele,morde,ver_cartao:={}
MEMVAR mdesc_cart,mprazo_cart,mcartao
msele := SELE()
morde := INDEXORD()
IF ! AbriArq('mastcarta','car');RETURN NIL;ENDIF
IF EMPTY(mcod) .AND. t = NIL
        RETURN .T.
ENDIF
*************
SELE('car');ORDSETFOCUS(1)
GO TOP
*************
IF ! car->(DBSEEK(STRZERO(mcod,3)))
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        IF li <> NIL
                atencao('Cartao nao Cadastrado !!!')
                setcor(3)
                DEVPOS(li,ci);DEVOUT(' - '+SPACE(20))
                setcor(1)
                RETURN .F.
        ENDIF
        RETURN 'CARTAO NAO IDENTIFICADO'
ENDIF
IF li <> NIL
        mdesc_cart := car->desconto
        mprazo_cart := car->prazo
        mcartao := car->cartao
        setcor(3)
        DEVPOS(li,ci);DEVOUT(' - '+mcartao)
        setcor(1)
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .T.
ENDIF
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
RETURN car->cartao
*********************** f i m ************************************
//#INCLUDE "wingdi.ch"
//#INCLUDE "winuser.ch"
FUNCTION SUB_BANNER(LIN,COL,STRING,VCOR)
****************************************
//Wvw_DrawLabel( ,lin,col, string,2,0 , rgb(0,0,255), rgb(198,198,198), 'Arial Black',30,35 , , , , , )
DEVPOS(lin,col);DEVOUT("")
IF vcor = NIL
        WVW_DrawLabel(,lin,col,string,,,,, 'Arial Black',80,40,,,,,)
ELSE
        WVW_DrawLabel(,lin,col,string,,,240,, 'Arial Black',80,40,,,,,)
ENDIF
//WVW_DrawLabel(,lin,col,string,,,,, 'Arial Black',90,50,,PROOF_QUALITY )
//WVW_DrawLabel(,lin,col,string,,,,,"Courier new",90,50,,PROOF_QUALITY )
RETURN NIL
*********************** F I M **************************************
FUNCTION ver_cli(vcod,li,ci,p)
******************************
LOCAL msele,morde
MEMVAR mcliente,mcpf,mcgc

IF EMPTY(vcod)
        mcliente := SPACE(40)
        RETURN .T.
ENDIF
aret:={}
cComm  := "SELECT * FROM mastcli WHERE cod_cli = "+sr_cdbvalue(STRZERO(vcod,5))
sr_getconnection():exec(ccomm,,.t.,@aret)
IF LEN(aret) = 0
        IF p = NIL
                atencao('Codigo Cliente nao Existe no Arquivo !!!')
                vcod := 0
                mcliente := SPACE(40)
                vcid := ' '
                RETURN .F.
        ELSE
                mcliente := SPACE(40)
                RETURN .F.
        ENDIF
ELSE
        IF li = NIL .AND. ci = NIL
                mcliente := aret[1,3]
                mcpf := aret[1,34]
                mcgc := aret[1,32]
                RETURN .T.
        ENDIF
        mcliente := aret[1,3]
        mcpf := aret[1,34]
        mcgc := aret[1,32]
        vcid  := aret[1,24]
        setcor(3)
        DEVPOS(li,ci);DEVOUT(aret[1,3])
        setcor(1)
ENDIF
RETURN .T.
********************************* f i m ******************************************
* VERIFICA O CPF
****************
FUNCTION ver_cpf(ncpf)
**********************
LOCAL msele,morde,opcao := 'S'
MEMVAR mcgc,mcpf,mcod_cli,mcliente
msele := SELE()
morde := INDEXORD()
IF ! AbriArq('mastcli','cli');RETURN NIL;ENDIF
WHILE .T.
        IF EMPTY(ncpf)
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .T.
        ENDIF
        *****************
        SELE('cli');ORDSETFOCUS(4)
        GO TOP
        *****************
        IF SUBSTR(ncpf,10,2) <> GDV2(SUBSTR(ncpf,1,9))
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .F.
        ENDIF

        IF ! cli->(DBSEEK(ncpf))
                CLEAR GETS
                opcao := op_simnao('S','C.P.F nao cadastrado...Deseja Cadastra [S/n]:')
                IF opcao = 'N'
                        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                        RETURN .F.
                ELSE
                        mast130(mcpf,mcgc)
                        CLEAR TYPEAHEAD
                        LOOP
                ENDIF
        ENDIF
        mcod_cli := VAL(cli->cod_cli)
        mcliente := cli->razao
        mcgc := cli->cgc
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .T.
ENDDO
RETURN NIL
******************************* f i m *********************************************
* VERIFICA O CGC
******************************
FUNCTION ver_cgc(ncgc)
********************
LOCAL msele,morde,opcao := 'S'
MEMVAR mcgc,mcpf,mcod_cli,mcliente

msele := SELE()
morde := INDEXORD()
IF ! AbriArq('mastcli','cli');RETURN NIL;ENDIF
WHILE .T.
        IF EMPTY(ncgc)
                RETURN .T.
        ENDIF
        IF ! VCGC(ncgc)
                IF aut_sen('O CNPJ nao confere senha de autorizacao:','LIB_AMB')
                        RETURN .T.
                ENDIF
                RETURN .F.
        ENDIF
        *****************
        SELE('cli');ORDSETFOCUS(3)
        GO TOP
        *****************

        IF ! cli->(DBSEEK(ncgc))
                CLEAR GETS
                opcao := op_simnao('S','CNPJ nao cadastrado...Deseja Cadastra [S/n]:')
                IF opcao = 'N'
                        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                        RETURN .F.
                ELSE
                        mast130(mcpf,mcgc)
                        CLEAR TYPEAHEAD
                        LOOP
                ENDIF
        ENDIF
        mcod_cli := VAL(cli->cod_cli)
        mcliente := cli->razao
        mcpf := cli->cpf
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .T.
ENDDO
RETURN NIL
********************************** F I M ***********************************
FUNCTION ver_ven(mcod_ven,p,tip)
********************
LOCAL men,msele,morde,point,mnome
msele := SELE()
morde := INDEXORD()
point := RECNO()
IF ! AbriArq('insopera','sen');RETURN NIL;ENDIF
IF tip <> NIL
        IF mcod_ven = '000';RETURN .T.;ENDIF
ENDIF
*****************
SELE('sen');ORDSETFOCUS(2)
GO TOP
*****************
IF ! sen->(DBSEEK(mcod_ven))
        IF p = NIL
                atencao('Codigo do OPERADOR/VENDEDOR nao encontrado')
        ENDIF
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .F.
ENDIF
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
RETURN .T.
************************************ F I M ************************************
FUNCTION vencim(mv,t,dup,memi,prz_dia,m_doc)
***************
MEMVAR memissao
IF memi = NIL
        memi := memissao
ENDIF
IF prz_dia = NIL
        prz_dia := 0
ENDIF
IF m_doc <> NIL .AND. EMPTY(m_doc) .AND. EMPTY(mv)
        RETURN .T.
ENDIF
IF t = NIL .AND. mv=ctod("  /  /  ")
        atencao('Data de Vencimento deve ser preenchida! [ÄÙ] Continua.')
        RETURN .F.
ENDIF
IF (dup = NIL .OR. ! EMPTY(dup)) .AND. DTOS(mv)<DTOS(memi)
        atencao('Data de Vencimento menor que Data de Emissao! [ÄÙ] Continua.')
        RETURN .F.
ENDIF
IF (dup = NIL .OR. ! EMPTY(dup)) .AND. DTOS(mv) > DTOS((memi+prz_dia+m_set[1,122])) .AND. ! EMPTY(prz_dia) .AND. ! EMPTY(m_set[1,122])
        IF ! aut_sen('Vencimento maior que Prazo estipulado no PEDIDO mais TOLERANCIA de '+STRZERO(m_set[1,122],3)+' Dias.','PRZ_REC')
                RETURN .F.
        ENDIF
        IF LASTKEY() = 27
                RETURN .F.
        ENDIF
ENDIF
IF dow(mv)=7 .OR. dow(mv)=1
        atencao('Data de Vencimento cai no '+IF(dow(mv)=7,'SABADO','DOMINGO')+' Final de semana')
        ?? chr(7)
ENDIF
RETURN .T.
************************** F I M ***************************************
* FUNCAO PARA CHECAR O SPC
**************************
FUNCTION spc(mcod,mvalor,mtipo,mped,mlib,mcons)
***********************************************
LOCAL liberado:='*',rodape,ponto,msele,morde,mcont_ch,mpesq,;
      mmensagem:=' ',mok:=' ',mcont_arq:=0,mcam_arq:=' ',i:=0,;
      mcpfcnpj := ' ',mcli_spc,mcam_cli:=' ',mmens:=' '
local nErr, nPos,;
        vEmp := {},;
        nCnn,oSql,;
        cComm, apCode,aret:={}

MEMVAR ok,mdata_sis,mlim_venc,mlim_avenc,mtot_limite

mlim_venc := mlim_avenc := mtot_limite := 0
IF mlib <> NIL .AND. mlib = '*'
        RETURN .T.
ENDIF
aret:={}
cComm  := "SELECT * FROM mastcli WHERE cod_cli = "+sr_cdbvalue(STRZERO(mcod,5))
sr_getconnection():exec(ccomm,,.t.,@aret)
IF LEN(aret) > 0
	IF STRZERO(mcod,5) = m_set[1,84] .OR. aret[1,42] = 'N'
        	RETURN .T.
	ENDIF
ELSE
        RETURN .F.
ENDIF
mok := ' '
msele := SELE()
morde := INDEXORD()
aret:={}
        aret:={}
        cComm  := "SELECT SUM(valor) FROM sacdupr WHERE fornec = "+sr_cdbvalue(STRZERO(mcod,5))+" AND venc < "+sr_cdbvalue(mdata_sis)+" AND datpag IS NULL"
        sr_getconnection():exec(ccomm,,.t.,@aret)
        IF LEN(aret) > 0
                mlim_venc := aret[1,1]
        ELSE
                mlim_venc := 0
        ENDIF

        aret:={}
        cComm  := "SELECT SUM(valor) FROM sacdupr WHERE fornec = "+sr_cdbvalue(STRZERO(mcod,5))+" AND venc >= "+sr_cdbvalue(mdata_sis)+" AND datpag IS NULL"
        sr_getconnection():exec(ccomm,,.t.,@aret)

        IF LEN(aret) > 0
                mlim_avenc :=aret[1,1]
        ELSE
                mlim_avenc :=0
        ENDIF
aret:={}
cComm  := "SELECT conta,venc FROM sacdupr WHERE fornec = "+sr_cdbvalue(STRZERO(mcod,5))+" AND venc < "+sr_cdbvalue(mdata_sis)+" AND datpag IS NULL"
sr_getconnection():exec(ccomm,,.t.,@aret)
IF LEN(aret) > 0
        FOR i = 1 TO LEN(aret)
                IF  aret[i,1] = '*' .AND. mmens = ' '
                        liberado := ' '
                        mmensagem:= mmensagem+' - *** DOCUMENTO VENCIDO (p/CONTA) - MATRIZ !!! ***'
                        mok:=mmens:='*'
                ELSE
                        IF aret[i,2]+m_set[1,106] < mdata_sis .AND. mmens = ' '
                                liberado := ' '
                                mmensagem:= mmensagem+' - *** DOCUMENTO VENCIDO - MATRIZ !!! ***'
                                mok:=mmens:='*'
                        ENDIF
                ENDIF
        NEXT

ENDIF

mtot_limite := mlim_avenc + mlim_venc

aret:={}
cComm  := "SELECT limite FROM mastcli WHERE cod_cli = "+sr_cdbvalue(STRZERO(mcod,5))
sr_getconnection():exec(ccomm,,.t.,@aret)

IF aret[1,1] > 0 .AND. mtot_limite+mvalor > aret[1,1]
        IF mtipo = NIL
                IF (ver_serie() = '141287' .OR. ver_serie() = '14128D') .AND. ;
                   ! aut_sen('CLIENTE COM LIMITE ESTOURADO','LIMIT_EST',,STRZERO(mcod,5))
                        UNLOCK
                        RETURN .F.
                ELSE
/*
			IF mtot_limite+mvalor > (aret[1,1] * 1.5)
		                atencao('Cliente estar BLOQUEADO por ultrapassar o Limite + 50%: Valor do Limite: '+TRANSFORM(aret[1,1],'999,999.99')+' e o Total de Compras mais a compra em andamento: '+TRANSFORM(mtot_limite+mvalor,'999,999.99'))
		                RETURN .F.
			ENDIF
*/
                        mmensagem:= mmensagem+' - *** LIMITE R$: '+TRANSFORM(aret[1,1],'99,999,999.99')+' ESTORADO em '+TRANSFORM((mtot_limite+mvalor) - aret[1,1],'99,999,999.99')+' ***'
                ENDIF
                liberado := ' '
                mok:='*'
        ELSE
                atencao('Cliente com LIMITE R$: '+TRANSFORM(aret[1,1],'99,999,999.99')+' ESTORADO em '+TRANSFORM((mtot_limite+mvalor) - aret[1,1],'99,999,999.99')+' !!!')
        ENDIF

ENDIF

IF mcons = NIL
        IF mok = '*' .AND. ! aut_sen(mmensagem,'LIB_DEV',,STRZERO(mcod,5))
                UNLOCK
                RETURN .F.
        ENDIF
ELSE
        atencao(mmensagem)
ENDIF
mlib := liberado := '*'
IF liberado = '*' .OR. mtipo <> NIL
        RETURN .T.
ELSE
        RETURN .F.
ENDIF
RETURN .F.
************************* F I M ******************************
 * CONSULTAR CREDITO DO CLIENTE
*******************************
 FUNCTION c_credito()
 ********************
LOCAL conscred:={},i:=0,point:=0,li:=0,ci:=0,la:=21,ca:=63,mconsdupr:={},;
      mcont_doc:=0,mtotal_doc:=0

mcomando := "SELECT * FROM mastcred WHERE fornec = "+sr_cdbvalue(STRZERO(mcod_cli,5))+" AND (pago IS NULL OR pago = ' ')"
sr_getconnection():exec(mcomando,,.t.,@conscred)
FOR i = 1 TO LEN(conscred)
        AADD(mconsdupr,' '+conscred[i,2]+' '+conscred[i,4]+' '+conscred[i,26]+'  '+conscred[i,3]+'   '+DTOC(conscred[i,11])+'   '+TRANSFORM(conscred[i,19],'999,999.99')+' '+conscred[i,28]+' '+IF(! EMPTY(conscred[i,43]),'S/F','   ')+' '+conscred[i,1])
        mcont_doc ++
        mtotal_doc := mtotal_doc + conscred[i,19]
NEXT
op_tela(li,ci,la+2,ca,'CONSULTA DE CREDITO DO CLIENTES')
mensagem('<ESC> Retorna  -  <ENTER> p/Confirmar')
setcor(3)
DEVPOS(li+1,ci+01);DEVOUT('Documento')
DEVPOS(li+1,ci+18);DEVOUT('Op')
DEVPOS(li+1,ci+21);DEVOUT(' No.')
DEVPOS(li+1,ci+27);DEVOUT('Vencimento')
DEVPOS(li+1,ci+44);DEVOUT('Valor')
DEVPOS(li+1,ci+56);DEVOUT('Emp')
@ li+2,ci+1 TO li+2,ca-1
@ la-2,ci+1 TO la-2,ca-1
DEVPOS(la-1,ci+1);DEVOUT('Quantidade:')
DEVPOS(la-1,ci+24);DEVOUT('Total:')
setcor(1)
DEVPOS(la-1,ci+13);DEVOUT(STRZERO(mcont_doc,4))
DEVPOS(la-1,ci+31);DEVOUT(TRANSFORM(mtotal_doc,'9,999,999.99'))
point := ACHOICE(li+3,ci+1,la-3,ca-1,mconsdupr,,,point)
wvw_lclosewindow()
DO CASE
        CASE LASTKEY()=27
                RETURN 0
                mn_cred := SPACE(8)
        CASE LASTKEY() = 13
                mn_cred := conscred[point,4]
                RETURN conscred[point,4]
ENDCASE
RETURN 0
******************************** F I M ************************************88
static function ExtPorGen(nGenero,xStr)
return if(ValType(xStr) = "A", xStr[1] + xStr[nGenero+1], xStr)

***********************************  F I M ********************************
#xtranslate :fileHandle   => :cargo\[1\]
#xtranslate :fileLine     => :cargo\[2\]
#xtranslate :lineOffset   => :cargo\[3\]
#xtranslate FTell(<fHandle>) => FSeek(<fHandle>, 0, 1)

#define FILE_BRWS_NUM_IVARS 3
#define MAX_LINE_LEN  256
#define CR    Chr(13)
#define LF    Chr(10)
#define CRLF  CR + LF
#define SET_IVAR(iVar, p) iif(p == NIL, NIL, iVar := p)
*------------------------------------------------------------------------------*
**************************************************************************************************/
function Extenso(nBase     ,; // valor numérico original
                 lVMonet   ,; // se verdadeiro, trata-se de valor monetário
                 cStrSingul,; // string da moeda (lVMonet=TRUE) no singular
                 cStrPlural,; // idem, no plural
                 nGenero    ; // nGenero que define o artigo de tratamento: 1=Masculino e 2=Feminino
                 )
local cExtenso := ""
local aDenomin := {""," mil"," m"," b"," tr"}
local nInteiro := Int(nBase)
local nVlrFrac
local cStrFrac

lVMonet    := if(lVMonet=nil, .T., lVMonet)
nGenero    := if(nGenero=nil, 1, nGenero)
cStrSingul := if(Empty(cStrSingul), "", " "+AllTrim(cStrSingul))
cStrPlural := if(Empty(cStrPlural), if(Empty(cStrSingul),"",cStrSingul+"s"), " "+AllTrim(cStrPlural))
nVlrFrac   := Val(Right(Str(nBase,18,if(lVMonet,2,3)),if(lVMonet,2,3)))

if !lVMonet
   while nVlrFrac > 0 .and. Right(LTrim(Str(nVlrFrac)),1) = "0"
      nVlrFrac := Int(nVlrFrac/10)
   end
end
cStrFrac := if(lVMonet, "centavo", if(nVlrFrac<10, "décimo", if(nVlrFrac<100, "centésimo", "milésimo")))

for nPasso := 5 to 1 step -1
    nParte := Val(Left(Str(nInteiro,nPasso*3),3))
    if nParte  > 0
       nInteiro -= nParte * Val("1"+Replicate("0",3*(nPasso-1)))
       cExtenso += ExtCentena(nParte,nGenero) + aDenomin[nPasso] + if(nPasso < 3, "", "ilh" + if(nParte = 1, "ao", "oes")) + ", "
    end
next

nInteiro := Int(nBase)
cExtenso := if(nInteiro = 0, "", Left(cExtenso,Len(cExtenso)-2))
nPasso   := RAt(", ",cExtenso)
cExtenso := if(nPasso=0, cExtenso, if(" e " $ SubStr(cExtenso,nPasso), cExtenso, Stuff(cExtenso,nPasso,2," e ")))
cExtenso += if(nInteiro=0, "", if(nInteiro=1, cStrSingul, if(Val(Right(Str(nInteiro,15),6)) = 0, "de", "") + cStrPlural))
cExtenso += if(nVlrFrac=0, "", if(nInteiro=0, "", " e ") + ExtCentena(nVlrFrac,nGenero) + " "+cStrFrac + if(nVlrFrac=1, "", "s"))
return cExtenso


/**************************************************************************************************/
static function ExtCentena(nBase,nGenero)
local cExtenso := ""
priva aUnidade := {{"um","","a"},{"d","ois","uas"},"tres","quatro","cinco","seis","sete","oito","nove"}
priva aDezena1 := {"onze","doze","treze","quatorze","quinze","dezesseis","dezessete","dezoito","dezenove"}
priva aDezena2 := {"dez","vinte","trinta","quarenta","cinquenta","sessenta","setenta","oitenta","noventa"}
priva aCentena := {"cento",{"duzent","os","as"},{"trezent","os","as"},{"quatrocent","os","as"},{"quinhent","os","as"},;
                  {"seiscent","os","as"},{"setecent","os","as"},{"oitocent","os","as"},{"novecent","os","as"}}

nGenero  := if(nGenero=nil, 1, nGenero)
cExtenso += if(nBase < 100, "", if(nBase = 100, "cem", ExtPorGen(nGenero,aCentena[Int(nBase/100)]) + if(nBase%100 > 0, " e ", "")))
nBase    %= 100
cExtenso += if(nBase  = 10, aDezena2[1], "")
cExtenso += if(nBase >  10 .and. nBase < 20, aDezena1[nBase%10], "")
cExtenso += if(nBase >= 20, aDezena2[Int(nBase/10)] + if(nBase%10 > 0, " e ", ""), "")
cExtenso += if(nBase%10 > 0 .and. (nBase >  20 .or. nBase < 10), ExtPorGen(nGenero,aUnidade[nBase%10]), "")
return cExtenso

******************************* F I M ********************************
* FUNCAO PROGRESSAO DE IMPRESSAO
*************************************
FUNCTION prog_imp(no,mcampo)
*******************
LOCAL mno:=0
mno := VAL(SUBSTR(STRZERO((no/2),10,2),8,2))
IF mno = 0
        WVW_SBSetText(,1,'Mensagem:  Aguarde o Final da Impressao: /  + - No.Reg.:'+STRZERO(no,6)+' - '+IF(mcampo=NIL,'',mcampo))
ELSE
        WVW_SBSetText(,1,'Mensagem:  Aguarde o Final da Impressao: \  X - No.Reg.:'+STRZERO(no,6)+' - '+IF(mcampo=NIL,'',mcampo))
ENDIF
RETURN NIL
******************************* F I M ********************************
* CABECALHO RELATORIO
***************************
FUNCTION cabecalho(pag,tit,tipo,vprg,memp,vgru,vsubg,vforn,vcli,vven,vope)
**************************************************************************
LOCAL mtraco2:=REPLI('=',132),mcons_cons:={}

WHILE .T.
        imprt(mtipo_imp,'N')
        imprt(mtipo_imp,'N+')
        DEVPOS(PROW()+1,00);DEVOUT(memp_resa)
        imprt(mtipo_imp,'N-')
        imprt(mtipo_imp,'N')
        DEVPOS(PROW()+1,00);DEVOUT(tit)
        DEVPOS(PROW(),00);DEVOUT(PADL(mdata_sis,80))
        IF tipo <> NIL
                DEVPOS(PROW()+1,00);DEVOUT(tipo)
        ELSE
                DEVPOS(PROW()+1,00);DEVOUT(REPLI('*',LEN(tit)))
        ENDIF
        DEVPOS(PROW(),00);DEVOUT(PADL('Pagina: '+ STRZERO(pag,3),80))
        imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT(memp_resa)
        IF vprg = NIL
                DEVPOS(PROW(),00);DEVOUT(PADL(sistema+' '+mversao,132))
        ELSE
                DEVPOS(PROW(),00);DEVOUT(PADL(sistema+' '+mversao+' - ('+vprg+')',132))
        ENDIF
        imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT(mtraco2)
        imprt(mtipo_imp,'N')
        cons_cons := {}
        IF ! EMPTY(vgru)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM sacgrupo WHERE gru_sub LIKE "+sr_cdbvalue(vgru+'%'),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('GRUPO.....: '+vgru+' - '+cons_cons[1,2])
                ENDIF
        ENDIF
        IF ! EMPTY(vsubg)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM sacgrupo WHERE gru_sub = "+sr_cdbvalue(vsubg),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('SUB-GRUPO.: '+vsubg+' - '+cons_cons[1,2])
                ENDIF
        ENDIF
        IF ! EMPTY(vforn)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM sacforn WHERE cod_forn = "+sr_cdbvalue(vforn),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('FORNECEDOR: '+vforn+' - '+cons_cons[1,2])
                ENDIF
        ENDIF
        IF ! EMPTY(vcli)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM saccli WHERE cod_cli = "+sr_cdbvalue(vcli),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('CLIENTE...: '+vcli+' - '+cons_cons[1,3])
                ENDIF
        ENDIF
        IF ! EMPTY(vven)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM insopera WHERE scod_op = "+sr_cdbvalue(vven),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('VENDEDOR..: '+vven+' - '+cons_cons[1,2])
                ENDIF
        ENDIF
        IF ! EMPTY(vope)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM insopera WHERE scod_op = "+sr_cdbvalue(vope),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('OPERADOR..: '+vope+' - '+cons_cons[1,2])
                ENDIF
        ENDIF
        IF LEN(cons_cons) > 0
                imprt(mtipo_imp,'C')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco2)
                imprt(mtipo_imp,'N')
        ENDIF
        RETURN NIL
ENDDO
RETURN NIL
******************************* F I M *********************************
*FUNCAO P/IMPRIMIR RECIBO BAIXA DE DOC.RECEBER
***********************************************
               //  1   2    3     4     5    6       7        8      9
FUNCTION rec_dupr(m_d,m_p,mqtd,mtot_m,mtot,mdat,mtipo_rel,mvlr_parc,mdev)
*************************************************************************
LOCAL mtraco := REPLI('=',60),i:=0,mextenso,mlinha,mlin,lin,mtot_acord:=0,Q_cons:={}
PRIVATE mcliente,mcpf,mcgc,;
        mtipo_imp,mimp_tipo:=0,marq:=SPACE(35)
mtipo_imp := m_cfg[36]
cComm  := "SELECT fornec,cliente,venc FROM sacdupr WHERE sr_recno = " + sr_cdbvalue(m_p)
Q_cons:={}
sr_getconnection():exec(ccomm,,.t.,@Q_cons)
IF LEN(Q_cons) = 0
        atencao('Nao existe nenhum Documento baixado')
        RETURN NIL
ENDIF
IF ! imp_arq('DEMO_DEB.REL','R')
        RETURN NIL
ENDIF
IF m_cfg[24] = 'B' .AND. mtipo_rel <> 'E'
        mtraco := REPLI('=',60)
        imprt(mtipo_imp,'N')
        DEVPOS(PROW()+1,00);DEVOUT(PADC(ALLTRIM(memp_resa),38))
        imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT(PADC(RTRIM(mend_firm),58))
        DEVPOS(PROW()+1,00);DEVOUT(PADC(RTRIM(mcid_firm),58))
        DEVPOS(PROW()+1,00);DEVOUT(PADC(RTRIM('Fone: '+mfone_firm),58))
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        imprt(mtipo_imp,'N')
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT(PADC('RECIBO PAGAMENTO',38))
        ELSE
                DEVPOS(PROW()+1,00);DEVOUT(PADC('DEMONSTRATIVO DE DEBITO',38))
        ENDIF
        imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis)+'    Data do Pagamento: '+DTOC(mdat))
        ELSE
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis))
        ENDIF
        DEVPOS(PROW(),PCOL()+2);DEVOUT('- Oper.:'+cod_operado)
        DEVPOS(PROW()+1,00);DEVOUT('Cliente: '+Q_cons[1,1]+'-'+Q_cons[1,2])
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        DEVPOS(PROW()+1,00);DEVOUT('Documento')
        IF mtipo_rel = NIL
                DEVPOS(PROW(),15);DEVOUT('Vencimento')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('    Valor')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('   Jur+Mul')
                DEVPOS(PROW(),PCOL()+1);DEVOUT(' Valor Pago')
        ELSE
                DEVPOS(PROW(),15);DEVOUT(' Emissao')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Vencimen')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('    Valor')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Jur+Mul')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Vlr.Total')
        ENDIF
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        i:=0
        FOR i = 1 TO LEN(m_d)
                IF EMPTY(m_d[i])
                        LOOP
                ENDIF
                DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7,60))
                //DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7))
        NEXT
        DEVPOS(PROW()+1,00);DEVOUT(REPLI('-',60))
        DEVPOS(PROW()+1,00);DEVOUT('TOTAL: '+TRANSFORM(mqtd,'99999'))
        DEVPOS(PROW(),25);DEVOUT(TRANSFORM(mvlr_parc,'999,999.99'))
        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot_m,'99,999.99'))
        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot,'999,9999.99'))
/*
        DEVPOS(PROW(),25);DEVOUT(TRANSFORM(mtot+mtot_m,'999,999.99'))
        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot-mtot_m,'99,999.99'))
        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot,'999,9999.99'))
*/
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
*        mextenso:= '('+RTRIM(extenso(ROUND(mtot,2),10))+')'
        mextenso:= '('+RTRIM(EXTENSO(ROUND(mtot,2),.T.,'real','reais'))+')'

        mlinha := MLCOUNT(mextenso,60)
        lin := 0
        FOR lin = 1 TO mlinha
                mlin := MEMOLINE(mextenso,60,lin,,10)
                DEVPOS(PROW()+1,00);DEVOUT(PADR(RTRIM(mlin),60))
        NEXT
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT('Recebemos o valor acima descrito, pelo qual damos quitacao.')
        ENDIF
        IF mdev > 0 //mdev # NIL .OR.
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Saldo Devedor: '+TRANSFORM(mdev,'999,999.99'))
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        ENDIF
        DEVPOS(PROW()+3,00);DEVOUT(PADC('----------------------------------------',58))
        DEVPOS(PROW()+1,00);DEVOUT(PADC('                 Local e data           ',58))
        DEVPOS(PROW()+3,00);DEVOUT(PADC(REPLI('-',LEN(ALLTRIM(memp_resa))+4),58))
        DEVPOS(PROW()+1,00);DEVOUT(PADC(ALLTRIM(memp_resa),58))

        IF mtipo_rel = NIL .AND. m_cfg[50] = 'S'
                imprt(mtipo_imp,'N')
                DEVPOS(PROW()+4,00);DEVOUT(PADC(ALLTRIM(memp_resa),38))
                imprt(mtipo_imp,'C')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                imprt(mtipo_imp,'N')
                DEVPOS(PROW()+1,00);DEVOUT(PADC('COMPROVANTE RECIBO PAGAMENTO',38))
                imprt(mtipo_imp,'C')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis)+'        Data do Pagamento: '+DTOC(mdat))
                DEVPOS(PROW()+1,00);DEVOUT('Cliente: '+Q_cons[1,1]+'-'+Q_cons[1,2])
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Documento')
                DEVPOS(PROW(),15);DEVOUT('Vencimento')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('    Valor')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('   Jur+Mul')
                DEVPOS(PROW(),PCOL()+1);DEVOUT(' Valor Pago')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                i:=0
                FOR i = 1 TO LEN(m_d)
                        IF EMPTY(m_d[i])
                                LOOP
                        ENDIF
                        DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7,60))
                NEXT
                DEVPOS(PROW()+1,00);DEVOUT(REPLI('-',60))
                DEVPOS(PROW()+1,00);DEVOUT('Qtd.Doc.: '+TRANSFORM(mqtd,'99999'))
                DEVPOS(PROW(),25);DEVOUT(TRANSFORM(mvlr_parc,'999,999.99'))
                DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot_m,'99,999.99'))
                DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot,'999,9999.99'))
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+m_cfg[29],00);DEVOUT(CHR(18))
        ELSE
                DEVPOS(PROW()+m_cfg[29],00);DEVOUT(CHR(18))
        ENDIF
ELSEIF m_cfg[24] = 'F' .OR. m_cfg[24] = 'G' .AND. mtipo_rel <> 'E'
        mtraco := REPLI('=',80)
        imprt(mtipo_imp,'E')
        DEVPOS(PROW()+1,00);DEVOUT(memp_resa)
        imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT(RTRIM(m_set[1,132])+'-'+RTRIM(m_set[1,133])+'-'+RTRIM(m_set[1,134])+'-'+RTRIM(m_set[1,19])+' - Fone: '+m_set[1,136])
        imprt(mtipo_imp,'N')
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT(PADC('RECIBO PAGAMENTO',80))
        ELSE
                DEVPOS(PROW()+1,00);DEVOUT(PADC('DEMONSTRATIVO DE DEBITO',80))
        ENDIF
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis)+'        Data do Pagamento: '+DTOC(mdat))
        ELSE
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis))
        ENDIF
        DEVPOS(PROW(),PCOL()+2);DEVOUT(' - Oper.:'+cod_operado)
        DEVPOS(PROW()+1,00);DEVOUT('Cliente: '+Q_cons[1,1]+'-'+Q_cons[1,2])
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        DEVPOS(PROW()+1,00);DEVOUT('Documento')
        DEVPOS(PROW(),15);DEVOUT(' Emissao')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('Vencimen')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('    Valor')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('Jur+Mul')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('Vlr.Total')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('LP')
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        i:=0
        FOR i = 1 TO LEN(m_d)
                IF EMPTY(m_d[i])
                        LOOP
                ENDIF
*               DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7,55))
                DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7))
        NEXT
        DEVPOS(PROW()+1,00);DEVOUT(REPLI('-',80))
        DEVPOS(PROW()+1,00);DEVOUT('Qtd.Doc.: '+TRANSFORM(mqtd,'99999'))
        DEVPOS(PROW(),32);DEVOUT(TRANSFORM(mtot-mtot_m,'999,999.99'))
        DEVPOS(PROW(),PCOL());DEVOUT(TRANSFORM(mtot_m,'99999.99'))
        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot,'999999.99'))
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
*        mextenso:= '('+RTRIM(extenso(ROUND(mtot,2),10))+')'
        mextenso:= '('+RTRIM(EXTenso(ROUND(mtot,2),.T.,'real','reais'))+')'

        mlinha := MLCOUNT(mextenso,60)
        lin := 0
        FOR lin = 1 TO mlinha
                mlin := MEMOLINE(mextenso,60,lin,,10)
                DEVPOS(PROW()+1,00);DEVOUT(PADR(RTRIM(mlin),60))
        NEXT
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT('Recebemos o valor acima descrito, pelo qual damos quitacao.')
        ENDIF
        IF mdev > 0 //mdev # NIL .OR.
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Saldo Devedor: '+TRANSFORM(mdev,'999,999.99'))
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        ENDIF
        DEVPOS(PROW()+3,00);DEVOUT(PADC('----------------------------------------',80))
        DEVPOS(PROW()+1,00);DEVOUT(PADC('                Local e data            ',80))
        DEVPOS(PROW()+3,00);DEVOUT(PADC(REPLI('-',LEN(ALLTRIM(memp_resa))+4),80))
        DEVPOS(PROW()+1,00);DEVOUT(PADC(ALLTRIM(memp_resa),80))
        IF mtipo_rel = NIL .AND. m_cfg[50] = 'S'
                imprt(mtipo_imp,'N')
                DEVPOS(PROW()+3,00);DEVOUT(PADC(ALLTRIM(memp_resa),38))
                imprt(mtipo_imp,'C')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                imprt(mtipo_imp,'N')
                DEVPOS(PROW()+1,00);DEVOUT(PADC('COMPROVANTE RECIBO PAGAMENTO',38))
                imprt(mtipo_imp,'C')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis)+'        Data do Pagamento: '+DTOC(mdat))
                DEVPOS(PROW()+1,00);DEVOUT('Cliente: '+Q_cons[1,1]+'-'+Q_cons[1,2])
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Documento')
                DEVPOS(PROW(),15);DEVOUT(' Emissao')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Vencimen')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('    Valor')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Jur+Mul')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Vlr.Total')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('LP')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                i:=0
                FOR i = 1 TO LEN(m_d)
                        IF EMPTY(m_d[i])
                                LOOP
                        ENDIF
                        DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7))
                NEXT
                DEVPOS(PROW()+1,00);DEVOUT(REPLI('-',60))
                DEVPOS(PROW()+1,00);DEVOUT('Qtd.Doc.: '+TRANSFORM(mqtd,'99999'))
                DEVPOS(PROW(),32);DEVOUT(TRANSFORM(mtot-mtot_m,'999,999.99'))
                DEVPOS(PROW(),PCOL());DEVOUT(TRANSFORM(mtot_m,'99999.99'))
                DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot,'999999.99'))
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+m_cfg[29],00);DEVOUT(CHR(18))
        ENDIF
        SETPRC(00,00)
        EJECT
ELSEIF mtipo_rel = 'E'
        mtraco := REPLI('=',80)
        mtot_acord := i := 0
        FOR i = 1 TO LEN(m_dupr)
                mbaixa := 'S'
                IF m_pos[i,2] <> 'X'
                        LOOP
                ENDIF
                IF m_set[1,22] = 'S'
                        imprt(m_cfg[36],'E')
                        DEVPOS(PROW(),00);DEVOUT(memp_resa)
                        imprt(m_cfg[36],'C')
                        DEVPOS(PROW()+1,00);DEVOUT(mend_firm+'-'+mcid_firm+  +'Fone: '+mfone_firm)
                        DEVPOS(PROW()+1,00);DEVOUT('Inscr. '+minsc_firm+'   CNPJ: '+mcgc_firm)
                        imprt(m_cfg[36],'N')
                        @ PROW()+1,00 SAY mtraco
                        @ PROW()+1,00 SAY ' '
                ENDIF
                imprt(m_cfg[36],'N')
                ver_cli(VAL(aret[i,7]),,,'*')
                @ PROW(),00 SAY 'Cliente......:'
                @ PROW(),PCOL()+1 SAY aret[i,7]
                @ PROW(),PCOL()+1 SAY aret[i,8]
                @ PROW()+1,00 SAY 'Nome Fantasia:'
                @ PROW(),PCOL()+1 SAY cli->nome
                @ PROW()+1,00 SAY 'Responsavel..:'
                @ PROW(),PCOL()+1 SAY cli->comprado
                @ PROW()+1,00 SAY 'End.: '+cli->endereco+', '+RTRIM(cli->numero)+IF(! EMPTY(RTRIM(cli->complemento)),' - Compl.:'+RTRIM(cli->complemento),'')
                @ PROW()+1,00 SAY 'Bairro: '+RTRIM(cli->bairro)+'-Cidade: '+RTRIM(cli->cidade)+'-'+cli->uf
                @ PROW()+1,00 SAY 'CEP:'+cli->cep+'- Fone:'+cli->tel1
                imprt(m_cfg[36],'N')
                IF ! EMPTY(cli->cgc)
                        @ PROW()+1,00 SAY 'CNPJ:'
                        DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(cli->cgc,'@@R 99.999.999/9999-99')
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(' - Insc.: '+cli->insc)
                ELSE
                        @ PROW()+1,00 SAY 'CPF:'
                        DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(cli->cpf,'@@R 999.999.999-99')
                ENDIF
                @ PROW()+1,00 SAY mtraco
                @ PROW()+1,00 SAY ''
                imprt(m_cfg[36],'E')
                @ PROW(),00 SAY IF(ver_serie()='141447','NOTA PROMISSORIA:','DUPLICATA No.:')+aret[i,4]
                imprt(m_cfg[36],'N')
                @ PROW()+1,00 SAY 'Emissao:'
                @ PROW(),09 SAY aret[i,10]
                @ PROW(),20 SAY 'Vencimento:'
                @ PROW(),32 SAY aret[i,11]
                @ PROW()+1,00 SAY mtraco
                DEVPOS(PROW()+1,00);DEVOUT(PADC('Valor R$: ('+LTRIM(TRANSFORM(aret[i,19],'99,999,999.99'))+')',80))
*                mextenso:= '('+RTRIM(extenso(dupr->valor,10))+')'
                mextenso:= '('+RTRIM(EXTenso(ROUND(aret[i,19],2),.T.,'real','reais'))+')'

                mlinha := MLCOUNT(mextenso,80)
                FOR lin = 1 TO mlinha
                        mlin := MEMOLINE(mextenso,80,lin,,10)
                        DEVPOS(PROW()+1,00);DEVOUT(PADR(RTRIM(mlin),80))
                NEXT
                @ PROW()+1,00 SAY mtraco
                @ PROW()+1,00 SAY 'Descricao:'
                @ PROW(),00 SAY 'Descricao:'
                mextenso:= m_set[1,29]+m_set[1,30]+m_set[1,31]+m_set[1,32]
                mlinha := 0
                mlinha := MLCOUNT(mextenso,60)
                lin := 0
                FOR lin = 1 TO mlinha
                        mlin := MEMOLINE(mextenso,80,lin,,10)
                        IF mlin # ' '
                                DEVPOS(PROW()+1,00);DEVOUT(RTRIM(mlin))
                        ENDIF
                NEXT
                @ PROW()+1,00 SAY mtraco
                imprt(m_cfg[36],'N')
                DEVPOS(PROW()+1,00);DEVOUT('OBSERVACAO:')
                DEVPOS(PROW(),00);DEVOUT('OBSERVACAO:')
                DEVPOS(PROW()+1,00);DEVOUT('Maiores informacoes dirija-se ao '+memp_resa+'.')
                imprt(m_cfg[36],'C')
                DEVPOS(PROW()+1,00);DEVOUT('(Para quitacao da mesma, pois a nao quitacao implicara no bloqueio do seu credito e a inclusao no SPC e SERASA)')
                imprt(m_cfg[36],'N')
                @ PROW()+1,00 SAY mtraco
                @ PROW()+7,00 SAY ' '
                mtot_acord := mtot_acord + dupr->valor
        NEXT
        // COMPROVANTE DE RECEBIMENTOS
        imprt(m_cfg[36],'E')
        DEVPOS(PROW(),00);DEVOUT(memp_resa)
        imprt(m_cfg[36],'C')
        DEVPOS(PROW()+1,00);DEVOUT(mend_firm+'-'+mcid_firm+  +'Fone: '+mfone_firm)
        DEVPOS(PROW()+1,00);DEVOUT('Inscr. '+minsc_firm+'   CNPJ: '+mcgc_firm)
        imprt(m_cfg[36],'N')
        @ PROW()+1,00 SAY mtraco
        @ PROW()+1,00 SAY PADC('COMPROVANTE DE RECEBIMENTO DOS BOLETOS',80)
        @ PROW()+1,00 SAY mtraco
        mextenso:= 'Eu,'+aret[1,7]+'-'+RTRIM(aret[1,8])+' portador do '
        IF ! EMPTY(cli->cgc)
                mextenso := mextenso + 'CNPJ:'+TRANSFORM(cli->cgc,'99.999.999/9999-99')
        ELSE
                mextenso := mextenso + 'CPF:'+TRANSFORM(cli->cpf,'999.999.999-99')
        ENDIF
        mextenso := mextenso + ', Estou ciente e de acordo que a nao quitacao do valor de R$:'+ALLTRIM(TRANSFORM(mtot_acord,'999,999.99'))+' no vencimento e valor determinado nos documentos abaixo citados, ocorrera a inclusao no SPC e SERASA.'
        mlinha := MLCOUNT(mextenso,80)
        FOR lin = 1 TO mlinha
                mlin := MEMOLINE(mextenso,80,lin,,10)
                DEVPOS(PROW()+1,00);DEVOUT(PADR(RTRIM(mlin),80))
        NEXT
        @ PROW()+1,00 SAY mtraco
        @ PROW()+1,00 SAY 'Relacao dos Documentos'
        @ PROW()+1,00 SAY REPLI('-',80)
        i := 0
        FOR i = 1 TO LEN(m_dupr)
                mbaixa := 'S'
                IF m_pos[i,2] <> 'X'
                        LOOP
                ENDIF
                @ PROW()+1,00 SAY 'No.Doc.:'+m_pos[i,7]+' Venc.:'+DTOC(m_pos[i,8])+' Valor: '+TRANSFORM(m_pos[i,3],'999,999.99')
        NEXT
        @ PROW()+1,00 SAY REPLI('-',80)
        @ PROW()+3,00 SAY PADC(RTRIM(m_set[1,134])+', ....../ ....../ ........',80)
        @ PROW()+3,00 SAY PADC('..............................................',80)
        @ PROW()+1,00 SAY PADC('            Assinatura do Cliente             ',80)
        @ PROW()+7,00 SAY ' '
        EJECT
ENDIF
SET DEVICE TO SCREEN;SET PRINT TO;SET PRINT OFF
conf_impressao('DEMO_DEB.REL')
RETURN NIL
***************************  F I M ******************************************
* FUNCAO P/CONSULTAR FORNECEDOR
********************************
FUNCTION f6_forn(mop)
*****************
LOCAL mprg:='F6_FORN',;
      f6tela,f6tela1,f6lci,f6cci,f6lba,f6cba,f6msele,f6morde,f6men,;
      oconsprod,ocolprod[4],f6i,f6nkey,f6opcao,;
      mcod_f,mrazao,mfantasia,mcidade,mendereco,mcpfcnpj,mtelefone,;
      ccomm,cons_m,m_prod,m_poS,point,i,minsc

MEMVAR mcod_forn

IF ! ver_nivel(mprg,'CADASTRO DE FORNECEDOR','15',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF

f6lci := f6cci := 0
f6lba := 23
f6cba := 70

f6msele := SELE()
f6morde := INDEXORD()
IF ! AbriArq('mastforn','forn');RETURN NIL;ENDIF
*************
SELE('forn');ORDSETFOCUS(2)
GO TOP
*************
op_tela(00,10,30,80,memp_resa+SPACE(50)+' FORNECEDOR / DESPESAS'+'  -  Quantidades: '+TRANSFORM(LASTREC(),'999,999'))
exibi_prg(mprg)
oconsprod := TBROWSEDB(f6lci,f6cci,f6lba-1,f6cba,'forn')
ocolprod[1] := TBCOLUMNNEW('Fornecedor',{||forn->razao})
ocolprod[2] := TBCOLUMNNEW('Cod.',{||forn->cod_forn})
ocolprod[3] := TBCOLUMNNEW('UF',{||forn->uf})
ocolprod[4] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(forn->cgc),TRANSFORM(forn->cgc,'@@R 99.999.999/9999-99'),TRANSFORM(forn->cpf,'@@R 999.999.999-99'))})
//ocolprod[7] := TBCOLUMNNEW('       CPF',{||TRANSFORM(forn->cpf,'@@R 999.999.999-99')})
f6i:=0
FOR f6i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[f6i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
WHILE .T.
        IF mop = '*'
                mensagem('<P>esquisa <I>nclusao <ENTER>p/Alterar e Excluir <ESC>Retornar')
        ELSE
                mensagem('<PGUP> <PGDN> <P>esquisa <I>nclusao <ENTER> Conf. <ESC>Retornar')
        ENDIF
        f6nkey := 0
        WHILE f6nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                botao(f6lba+1,f6cci+1,f6lba+4,f6cba,,' Detalhe ')
                setcor(3)
                DEVPOS(f6lba+2,f6cci+1);DEVOUT('End.:')
                DEVPOS(f6lba+3,f6cci+1);DEVOUT('Cidade:')
                DEVPOS(f6lba+3,f6cci+30);DEVOUT('UF:')
                DEVPOS(f6lba+3,f6cci+37);DEVOUT('Tel.:')
                setcor(1)
                DEVPOS(f6lba+2,f6cci+6);DEVOUT(forn->endereco+' - '+forn->bairro)
                DEVPOS(f6lba+3,f6cci+8);DEVOUT(forn->cidade)
                DEVPOS(f6lba+3,f6cci+33);DEVOUT(forn->uf)
                DEVPOS(f6lba+3,f6cci+42);DEVOUT(forn->tel1)
                f6nkey := INKEY(0)
        END
        IF f6nkey == K_ESC
                EXIT
        ELSEIF f6nkey = 73 .OR. f6nkey = 105     // I
                sac140()
        ELSEIF f6nkey = 112 .OR. f6nkey = 80
                op_tela(00,00,33,100,memp_resa+SPACE(40)+' CONSULTA DE FORNECEDOR ')
                CLEAR GETS
                WHILE .T.
                        mcod_f       := 0
                        mrazao          := mfantasia := mcidade := mendereco := SPACE(40)
                        mcpfcnpj        := mtelefone := minsc := SPACE(14)
                        limpa(0,0,31,99)
                        mensagem('Digite a descricao ou *descricao p/Pesquisa qualquer lugar da descricao')
                        setcor(1)
                        DEVPOS(00,01);DEVOUT('Cod.Fornecedor:')
                        DEVPOS(01,01);DEVOUT('Razao Social..:')
                        DEVPOS(02,01);DEVOUT('Nome Fantasia.:')
                        DEVPOS(03,01);DEVOUT('Cidade........:')
                        DEVPOS(04,01);DEVOUT('Endereco......:')
                        DEVPOS(05,01);DEVOUT('CPF/CNPJ......:')
                        DEVPOS(05,32);DEVOUT('Inscricao Est.:')
                        DEVPOS(06,01);DEVOUT('Telefone......:')
                        setcor(3)
                        @ 07,00 TO 07,100
                        DEVPOS(08,01);DEVOUT('Razao Social                             Fantasia                                  Codigo  Cidade                 CPF/CNPJ')
                        @ 09,00 TO 09,100
                        @ 32,00 TO 32,100
                        DEVPOS(33,01);DEVOUT('Total Fornecedor.:')
                        DEVPOS(33,27);DEVOUT('Tempo da Pesquisa:')
                        setcor(1)
                        @ 00,17 GET mcod_f PICT '9999'
                        @ 01,17 GET mrazao PICT '@!' WHEN EMPTY(mcod_f)
                        @ 02,17 GET mfantasia PICT '@!' WHEN EMPTY(mcod_f)
                        @ 03,17 GET mcidade PICT '@!' WHEN EMPTY(mcod_f)
                        @ 04,17 GET mendereco PICT '@!' WHEN EMPTY(mcod_f)
                        @ 05,17 GET mcpfcnpj PICT '@!' WHEN EMPTY(mcod_f) .AND. EMPTY(mrazao) .AND. EMPTY(mfantasia) .AND. EMPTY(mcidade) .AND. EMPTY(mendereco)
                        @ 05,48 GET minsc PICT '@!' WHEN EMPTY(mcod_f) .AND. EMPTY(mrazao) .AND. EMPTY(mfantasia) .AND. EMPTY(mcidade) .AND. EMPTY(mendereco)  .AND. men_get(0,0,'Digite a INSCRICAO sem pontos e Hifens') VALID  lim_get()
                        @ 06,17 GET mtelefone PICT '@!' WHEN EMPTY(mcod_f) .AND. EMPTY(mcpfcnpj) .AND. EMPTY(minsc)
                        READ
                        IF LASTKEY() = 27
                                CLEAR GETS
                                EXIT
                        ENDIF
                        IF EMPTY(mcod_f) .AND. EMPTY(mrazao) .AND. EMPTY(mfantasia) .AND. EMPTY(mcidade) .AND. EMPTY(mendereco) .AND. EMPTY(mcpfcnpj) .AND. EMPTY(mtelefone) .AND. EMPTY(minsc)
                                LOOP
                        ENDIF
                        mhoras := TIME()
                        cComm  := "SELECT * FROM sacforn WHERE cod_forn IS NOT NULL"
                        IF ! EMPTY(mcod_f)
                                ccomm := ccomm + " AND cod_forn = "+sr_cdbvalue(STRZERO(mcod_f,4))
                        ELSE
                                IF ! EMPTY(mcpfcnpj)
                                        IF LEN(ALLTRIM(mcpfcnpj)) < 14
                                                ccomm := ccomm + " AND cpf = "+sr_cdbvalue(ALLTRIM(mcpfcnpj))
                                        ELSE
                                                ccomm := ccomm + " AND cgc = "+sr_cdbvalue(ALLTRIM(mcpfcnpj))
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(minsc)
                                        minsc := STRTRAN(minsc,'.','')
                                        minsc := STRTRAN(minsc,'-','')
                                        minsc := STRTRAN(minsc,'/','')
                                        ccomm := ccomm + " AND insc LIKE "+sr_cdbvalue(ALLTRIM(minsc)+'%')
                                ENDIF
                                IF ! EMPTY(mtelefone)
                                        IF SUBSTR(mtelefone,1,1) = '*'
                                        	ccomm := ccomm + " AND (tel1 LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mtelefone,2))+'%')+" OR tel2 LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mtelefone,2))+'%')+")"
                                        ELSE
                                        	ccomm := ccomm + " AND (tel1 LIKE "+sr_cdbvalue(ALLTRIM(mtelefone)+'%')+" OR tel2 LIKE "+sr_cdbvalue(ALLTRIM(mtelefone)+'%')+")"
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(mrazao)
                                        IF SUBSTR(mrazao,1,1) = '*'
                                                ccomm := ccomm + " AND razao LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mrazao,2))+'%')
                                        ELSE
                                                ccomm := ccomm + " AND razao LIKE "+sr_cdbvalue(ALLTRIM(mrazao)+'%')
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(mfantasia)
                                        IF SUBSTR(mfantasia,1,1) = '*'
                                                ccomm := ccomm + " AND fantasia LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mfantasia,2))+'%')
                                        ELSE
                                                ccomm := ccomm + " AND fantasia LIKE "+sr_cdbvalue(ALLTRIM(mfantasia)+'%')
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(mcidade)
                                        IF SUBSTR(mcidade,1,1) = '*'
                                                ccomm := ccomm + " AND cidade LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mcidade,2))+'%')
                                        ELSE
                                                ccomm := ccomm + " AND cidade LIKE "+sr_cdbvalue(ALLTRIM(mcidade)+'%')
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(mendereco)
                                        IF SUBSTR(mendereco,1,1) = '*'
                                                ccomm := ccomm + " AND endereco LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mendereco,2))+'%')
                                        ELSE
                                                ccomm := ccomm + " AND endereco LIKE "+sr_cdbvalue(ALLTRIM(mendereco)+'%')
                                        ENDIF
                                ENDIF
                        ENDIF
                        ccomm := ccomm + " ORDER BY razao"
                        cons_m := {}
                        sr_getconnection():exec(ccomm,,.t.,@cons_m)
                        IF LEN(cons_m) = 0
                                atencao('Nao foi encontrado nenhum FORNECEDOR ...')
                                LOOP
                        ENDIF
                        m_prod := {}
                        m_pos  := {}
                        point  := i := 0
                        DEVPOS(33,20);DEVOUT(STRZERO(LEN(cons_m),5))
                        DEVPOS(33,46);DEVOUT(ELAPTIME(mhoras,TIME()))
                        FOR i = 1 TO LEN(cons_m)
                                AADD(m_prod,' '+cons_m[i,2];
                                           +' '+cons_m[i,35];
                                           +'  '+cons_m[i,1];
                                           +'  '+cons_m[i,8];
                                           +'  '+IF(! EMPTY(cons_m[i,16]),cons_m[i,16],cons_m[i,18]))
                                        AADD(m_pos,cons_m[i,36])
                        NEXT
                        point := ACHOICE(10,0,30,100,m_prod,,,point)
                        DO CASE
                                CASE LASTKEY()=27
                                        LOOP
                                CASE LASTKEY() = 13
                                        *************
                                        SELE('forn');ORDSETFOCUS(2)
                                        *************
                                        GO m_pos[point]
                                        EXIT
                        ENDCASE
                ENDDO
                wvw_lclosewindow()
                *************
                SELE('forn');ORDSETFOCUS(2)
                *************
                oconsprod := TBROWSEDB(f6lci,f6cci,f6lba-1,f6cba,'forn')
                ocolprod[1] := TBCOLUMNNEW('Fornecedor',{||forn->razao})
                ocolprod[2] := TBCOLUMNNEW('Cod.',{||forn->cod_forn})
                ocolprod[3] := TBCOLUMNNEW('UF',{||forn->uf})
                ocolprod[4] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(forn->cgc),TRANSFORM(forn->cgc,'@@R 99.999.999/9999-99'),TRANSFORM(forn->cpf,'@@R 999.999.999-99'))})
                f6i:=0
                FOR f6i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[f6i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()

        ELSEIF f6nkey == K_ENTER
                mcod_forn := VAL(forn->cod_forn)
                IF mop = '*'
                        f6opcao := mensagem1('Deseja <A>lterar <E>xcluir:','A','A,E')
                        IF LASTKEY() = 27
                                LOOP
                        ELSEIF f6opcao = 'A'
                                sac141()
                        ELSEIF f6opcao = 'E'
                                sac142()
                        ENDIF
                ELSE
                        EXIT
                ENDIF
                *************
                SELE('forn');ORDSETFOCUS(2)
                *************
                GO TOP
                oconsprod := TBROWSEDB(f6lci,f6cci,f6lba-1,f6cba,'forn')
                ocolprod[1] := TBCOLUMNNEW('Fornecedor',{||forn->razao})
                ocolprod[2] := TBCOLUMNNEW('Cod.',{||forn->cod_forn})
                ocolprod[3] := TBCOLUMNNEW('UF',{||forn->uf})
                ocolprod[4] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(forn->cgc),TRANSFORM(forn->cgc,'@@R 99.999.999/9999-99'),TRANSFORM(forn->cpf,'@@R 999.999.999-99'))})
                f6i:=0
                FOR f6i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[f6i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSE
                IF genkey(oconsprod,f6nkey,'forn')
                        *************
                        SELE('forn');ORDSETFOCUS(2)
                        *************
                        oconsprod := TBROWSEDB(f6lci,f6cci,f6lba-1,f6cba,'forn')
                        ocolprod[1] := TBCOLUMNNEW('Fornecedor',{||forn->razao})
                        ocolprod[2] := TBCOLUMNNEW('Cod.',{||forn->cod_forn})
                        ocolprod[3] := TBCOLUMNNEW('UF',{||forn->uf})
                        ocolprod[4] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(forn->cgc),TRANSFORM(forn->cgc,'@@R 99.999.999/9999-99'),TRANSFORM(forn->cpf,'@@R 999.999.999-99'))})
                        f6i:=0
                        FOR f6i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[f6i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(f6msele);IF(f6morde>0,ORDSETFOCUS(f6morde),)
RELEASE f6tela,f6tela1,f6lci,f6cci,f6lba,f6cba,f6msele,f6morde,f6men,oconsprod,ocolprod[7],i,f6nkey,f6opcao
wvw_lclosewindow()
IF f6nkey == K_ESC
        RETURN NIL
ELSE
        RETURN mcod_forn
ENDIF
RETURN NIL
*********************** F I M ************************************************
FUNCTION timeout(espera)
************************
LOCAL tini := SECONDS()
WHILE .T.
        //IF SECONDS() > (tini + 5)
        IF SECONDS() > (tini)
                mensagem('Aguardando...:  '+; // '('+ProcName(2)+') '+;
                Trim(str(tini + espera - SECONDS(),2)))
        ENDIF
        IF SECONDS() > (tini + espera)
                EXIT
        ENDIF
        INKEY(.10,20)
        IF LASTKEY() = 27
                EXIT
        ENDIF
ENDDO
RETURN NIL
*********************** F I M ************************************************
/*
                  Copyright (C) 2008, 2010
                  Interactive Choice Brasil
                  Todos os Direitos Reservados

ßßßßßßßßßßßßßßßÛßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
 Sistema       Û  GERAL - Funcao para Todos os Sistemas
 Analista      Û  Manoel Angeiras
 Programador   Û  Manoel Angeiras
 Programa      Û  BROWSPESQ.PRG
 Coment rios   Û  Browse para pesquisa dos arquivos
               Û
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÛÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/
/*
#include "icbrasil.ch"
#include "button.ch"

#define ALFANUM   " ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789*-+/.,\!@#$%^&()"
#define GO_FIRST  900
#define GO_PRIOR  901
#define GO_NEXT   902
#define GO_LAST   903
#define GO_END   1000

memvar _aGet
****************************************************************
FUNCTION BROWPESQ( cTitulo, aGet, nTop, nLeft, nBottom, nRight )
****************************************************************
local nWindow, oBrowse, i, nKey, lEnd, lRet, nCursor := setcursor(), mpesq,cCor := setcolor(), nWidth, nCol, nRow

private _aGet := aGet, bBlock

   //
   // INDICA QUE AS MENSAGENS DA TOOLBAR SERAO PROCESSADAS POR FUNCAO ESPECIFICA
   // PARA A PESQUISA COM O BROWSE ( fVarPesq )
   //
_lPesquisa := .T.

nWindow := WVW_nOpenWindow( cTitulo, nTop, nLeft, nBottom+2, nRight, WS_CAPTION+WS_CLIPCHILDREN, 0, 0 )
wvw_SetLineSpacing( nWindow, 0 )

wvw_tbdestroy(nWindow)
nTBar := wvw_tbcreate( nWindow, .F.,, 1 )

wvw_tbAddButton( nWindow, GO_FIRST, 207, "Primeiro"       , 0, .T.)
wvw_tbAddButton( nWindow, GO_PRIOR, 213, "Página Anterior", 0, .T.)
wvw_tbAddButton( nWindow, GO_NEXT , 212, "Próxima Página" , 0, .T.)
wvw_tbAddButton( nWindow, GO_LAST , 210, "Último"         , 0, .T.)
wvw_tbAddButton( nWindow )
wvw_tbAddButton( nWindow, GO_END  , 219, "Sair"          , 0, .T.)

nBottom := nBottom-nTop
nRight  := nRight-nLeft
nTop    := 0
nLeft   := 0

oBrowse               := TBrowseNew( nTop, nLeft, nBottom-1, nRight-2 )
oBrowse:colorSpec     := "N/W*,N/GR+*,N/B*"
oBrowse:ColSep        := "  "
oBrowse:HeadSep       := "__"
oBrowse:GoTopBlock    := { || dbGoTop() }
oBrowse:GoBottomBlock := { || dbGoBottom() }
oBrowse:SkipBlock     := { |nSkip| dbSkipBlock( nSkip, oBrowse ) }

if empty( _aGet )
        _aGet := DbStruct()
        for i := 1 to len( _aGet )
                bBlock := GeraBloco( i )
                oBrowse:AddColumn( TBColumnNew( _aGet[ i, 1 ], bBlock ) )
        next
else
        for nA := 1 to len( _aGet )
                bBlock             := fBloco( _aGet[ nA, 2 ], _aGet[ nA, 3 ] )
                oTBColumn          := TBColumn():new( _aGet[ nA, 1 ], bBlock )
                oTBColumn:defColor := { 1,2,3,1 }
                oBrowse:addColumn( oTBColumn )
        next
        // aeval( _aGet, {|aG| oBrowse:addColumn( TBColumnNew( aG[1], fBloco( aG[2], aG[3] ) ) ) } )
endif

oBrowse:configure()

LimpaObjetos( nWindow )
WVW_SetPen( 0, 0, RGB( 108,123,139 ) )
AddObjetos( nWindow, {|nWin| WVW_DrawGridHorz( nWin, oBrowse:nTop+3, oBrowse:nLeft, oBrowse:nRight, oBrowse:nBottom - oBrowse:nTop - 1 ) } )
AddObjetos( nWindow, {|nWin| WVW_DrawGridVert( nWin, oBrowse:nTop, oBrowse:nBottom, oBrowse:aColumnsSep, len( oBrowse:aColumnsSep ) ) } )

nVScrollBar := wvw_xbCreate( nWindow, 1, oBrowse:nTop, oBrowse:nRight+2, oBrowse:nBottom-oBrowse:nTop+1, {|nWinNum, nXBid, nXBmsg, nXBpos| VXBscroller(oBrowse, nWinNum, nXBid, nXBmsg) }, { 0, -8, 0, 0 } )

mpesq  := ""
nWidth := (nRight-21) - (nLeft+10)
nRow   := nBottom+1
nCol   := nLeft+10

@ nBottom+1, nLeft+1 say "Pesquisa"
COR_SAY_GET; @ nBottom+1, nLeft+10 say space(nWidth); setcolor(cCor)
AddObjetos( nWindow, {|nWin| wvw_drawboxget( nWin, nBottom+1, nLeft+10, nWidth ) } )
wvw_pbcreate( nWindow, nBottom+1, nRight-20, nBottom+1, nRight-11, "Ok",, {|| __KeyBoard( chr( K_ENTER ) ) } )
wvw_pbcreate( nWindow, nBottom+1, nRight-9 , nBottom+1, nRight-1 , "Sair",, {|| __KeyBoard( chr( K_ESC ) ) } )

oBrowse:ForceStable()
RefreshVXB( oBrowse, nWindow, nVScrollBar )
oBrowse:colorRect( { oBrowse:rowPos, oBrowse:leftVisible, oBrowse:rowPos, oBrowse:rightVisible }, { 2, 1 } )

setcursor(0)
lEnd := lRet := .F.
while !lEnd
        nKey := inkey(0)
        oBrowse:colorRect( { oBrowse:rowPos, oBrowse:leftVisible, oBrowse:rowPos, oBrowse:rightVisible }, { 1, 2 } )
        do case
                case upper( chr( nKey ) ) $ ALFANUM
                mpesq += upper( chr( nKey ) )
                @ nRow, nCol say mpesq color "n/w*"
                dbSeek( mpesq, .T. )
                oBrowse:RefreshAll()
                case nKey == K_BS
                        mpesq := substr( mpesq, 1, len( mpesq ) - 1 )
                        @ nRow, nCol say space(nWidth) color "n/w*"
                        @ nRow, nCol say mpesq         color "n/w*"
                        dbSeek( mpesq, .T. )
                        oBrowse:RefreshAll()
                case nKey == K_ESC
                        lRet := .F.
                        lEnd := .T.
                case nKey == K_ENTER .or. nKey == K_LDBLCLK
                        lEnd := lRet := .T.
                case nKey == K_DOWN .or. nKey == K_MWBACKWARD
                        oBrowse:Down()
                case nKey == K_UP .or. nKey == K_MWFORWARD
                        oBrowse:Up()
                case nKey == K_LEFT
                        if oBrowse:colPos == 1
                                loop
                        endif
                        oBrowse:Left()
                case nKey == K_RIGHT
                        if oBrowse:colPos == oBrowse:colCount()
                                loop
                        endif
                        oBrowse:Right()
                case nKey == K_PGDN
                        oBrowse:pageDown()
                case nKey == K_PGUP
                        oBrowse:pageUp()
                case nKey == K_CTRL_PGUP
                        oBrowse:goTop()
                case nKey == K_CTRL_PGDN
                        oBrowse:goBottom()
                case nKey == K_HOME
                        oBrowse:home()
                case nKey == K_END
                        oBrowse:end()
                case nKey == K_CTRL_LEFT
                        oBrowse:panLeft()
                case nKey == K_CTRL_RIGHT
                        oBrowse:panRight()
                case nKey == K_CTRL_HOME
                        oBrowse:panHome()
                case nKey == K_CTRL_END
                        oBrowse:panEnd()
                case nKey == K_LBUTTONDOWN .or. nKey == K_LBUTTONUP
                        if TBMouse( oBrowse, mRow(), mCol() ) # 0
                                if TBScroll( oBrowse, mRow(), mCol() )
                                        oBrowse:RefreshAll()
                                endif
                        else
                                oBrowse:RefreshAll()
                        endif
                otherwise
                        loop
        endcase
        oBrowse:ForceStable()
        oBrowse:colorRect( { oBrowse:rowPos, oBrowse:leftVisible, oBrowse:rowPos, oBrowse:rightVisible }, { 2, 1 } )
        RefreshVXB( oBrowse, nWindow, nVScrollBar )
enddo
WVW_lCloseWindow()
LimpaObjetos( nWindow )
setcursor(nCursor)
setcolor(cCor)
//
// VOLTA A CONDICAO NORMAL PARA A PESQUISA DA TOOLBAR DA FUNCAO DE ORIGEM
//
_lPesquisa := .F.
RETURN if( lRet, recno(), 0 )

*****************************************
STATIC FUNCTION DbSkipBlock( n, oBrowse )
*****************************************
local nSkipped := 0

if n == 0
        dbSkip( 0 )
elseif n > 0
        while nSkipped # n .and. TBNext( oBrowse )
                nSkipped++
        enddo
else
        while nSkipped # n .and. TBPrev( oBrowse )
                nSkipped--
        enddo
endif
RETURN nSkipped
*********************************
STATIC FUNCTION TBNext( oBrowse )
*********************************
local nSaveRecNum := recno() ,lMoved      := .T.

if eof()
        lMoved := .F.
else
        dbSkip( 1 )
        if eof()
                lMoved := .F.
                dbGoTo( nSaveRecNum )
        endif
endif
RETURN lMoved
*********************************
STATIC FUNCTION TBPrev( oBrowse )
*********************************
local nSaveRecNum := recno() ,lMoved      := .T.

dbSkip(-1)
if bof()
        dbGoTo( nSaveRecNum )
        lMoved := .F.
endif
RETURN lMoved
*****************************************
STATIC FUNCTION fBloco( cEdit, cPicture )
*****************************************
local cMacro

if valtype(cEdit) == "C"
        if cPicture == NIL
                if "->" $ cEdit
                        cMacro := &("{|y| if(pcount()==0," + cEdit + "," + cEdit + " := y ) }")
                else
                        cEdit := ltrim(cEdit)
                        cMacro := &("{ |y| if(pcount()==0, FIELD->" + cEdit + ", FIELD->" + cEdit + " := y ) }")
                endif
        else
                if "->" $ cEdit
                        cMacro := &("{ |y| if(pcount()==0, transform(" + cEdit + ", '" + cPicture + "'), " + cEdit + " := y ) }")
                else
                        cEdit := ltrim(cEdit)
                        cMacro := &("{ |y| if(pcount()==0, transform(FIELD->" + cEdit + ", '" + cPicture + "'), FIELD->" + cEdit + " := y ) }")
                endif
        endif
elseif valtype(cEdit) == "B"
        cMacro := cEdit
endif
RETURN (cMacro)
************************************************************
STATIC FUNCTION VXBscroller( oBrowse, nWinNum, XBid, XBmsg )
************************************************************
local nOldWin, lNeedStabilize

nOldWin := wvw_nSetCurWindow(nWinNum)
lNeedStabilize := .F.
while .t.
        do case
                case XBmsg == 0 //SB_LINEUP
                        if ordKeyNo() == 1
                                exit
                        endif
                        keyboard chr(K_UP)
                //          oBrowse:up()
                case XBmsg == 1 //SB_LINEDOWN
                        if ordKeyNo() == ordKeyCount()
                                exit
                        endif
                        keyboard chr(K_DOWN)
                //          oBrowse:down()
                case XBmsg == 2 //SB_PAGEUP
                        if ordKeyNo() == 1
                                exit
                        endif
                        oBrowse:pageup()
                case XBmsg == 3 //SB_PAGEDOWN
                        if ordKeyNo() == ordKeyCount()
                                exit
                        endif
                        oBrowse:pagedown()
                otherwise
                        lNeedStabilize := .T.
                        exit
        endcase
        lNeedStabilize := .T.
        exit
enddo
if lNeedStabilize
        oBrowse:ForceStable()
        RefreshVXB(oBrowse, nWinNum, XBid)
endif
wvw_nSetCurWindow(nOldWin)
RETURN NIL
****************************************************
STATIC FUNCTION RefreshVXB( oBrowse, nWinNum, XBid )
****************************************************
local nMin, nMax, nPage, nPos, nRatio

if ordKeyCount() < 30000
        nRatio := 1
        nMin   := 1
        nMax   := ordKeyCount()
        nPage  := oBrowse:RowCount()
        nPos   := ordKeyNo()-oBrowse:RowPos+1
else
        nRatio := ordKeyCount() / 10
        do while nRatio > 30000
                nRatio := nRatio / 10
        enddo
        nMin  := 1
        nMax  := round( ordKeyCount() / nRatio, 0)
        nPage := round(oBrowse:RowCount() / nRatio, 0)
        nPos  := round( ( ordKeyNo()-oBrowse:RowPos+1) / nRatio, 0 )
endif
WVW_XBupdate(nWinNum, XBid, nPos, nPage, nMin, nMax)
RETURN NIL
******************************
STATIC FUNCTION GeraBloco( i )
******************************
RETURN  { || fieldget( i ) }
********************************************
FUNCTION VarPesq( cAlias, cTitulo, nEvento )
********************************************
local nRet := nEvento, nRecno
do case
        case nEvento == GO_FIRST
                nRet := K_CTRL_PGUP
        case nEvento == GO_PRIOR
                nRet := K_PGUP
        case nEvento == GO_NEXT
                nRet := K_PGDN
        case nEvento == GO_LAST
                nRet := K_CTRL_PGDN
        case nEvento == GO_END
                nRet := K_ESC
endcase
RETURN nRet
***********************************************
STATIC FUNCTION TBScroll( oBrowse, nRow, nCol )
***********************************************
local nValKey, nPos, lResult := .T.

nValKey := oBrowse:HitTest( nRow, nCol )
do case
        case nValkey == HTSCROLLUNITDEC
                dbSkip( - 1 )
                if bof()
                        dbGoTop()
                else
                        if ( oBrowse:rowPos > 1 )
                                oBrowse:rowPos --
                        endif
                endif
        case nValkey == HTSCROLLUNITINC
                dbSkip( 1 )
                if eof()
                        dbGoBottom()
                else
                        if ( oBrowse:rowPos < oBrowse:rowCount )
                                oBrowse:rowPos ++
                        endif
                endif
        // CASE nValKey = HTSCROLLBLOCKDEC .OR. nValKey = HTSCROLLBLOCKINC
        //    nPos := ( nRow - ::scroll:start ) / ::scroll:barLength * 100
        //    nPos := ROUND( ::scroll:total * nPos / 100, 0 )
        //    dbGoTop()
        //    dbSkip( nPos )
        //    IF EOF()
        //       dbGoBottom()
        //    ENDIF
        otherwise
                lResult := .F.
endcase
RETURN lResult
*/
*************************** F I M *********************************
* FUNCAO DE DESTRIBUICAO DE CONSULTA
*************************************
FUNCTION menu_cons
*******************
IF READVAR() = 'MNUM_MESA'
        MAST341()
ELSEIF READVAR() = 'MNUM_PV'
ELSEIF READVAR() = 'MCOD_MERC' .OR. READVAR() = 'mcod_cli'  //.OR. READVAR() = 'MCOD_MERC1'
        f4_merc()
ELSEIF READVAR() = 'MCOD_CLI'   //.OR. READVAR() = 'MCOD_PRES'
        F7_CLI()
ELSEIF READVAR() = 'MCOD_CART'
        mast19()
ELSE
        atencao('Modulo nao estar configurado para consulta entrar em contato com a HTI Sistemas...')
ENDIF
RETURN NIL
* VERIFICA CODIGO
******************
FUNCTION ver_cod(vgru,li,ci,t,mzero,p)
**********************
LOCAL msele,morde,posicao:=0

IF ((mzero <> NIL .OR. mzero = 0) .AND. mzero <> 1) .AND. EMPTY(vgru)
        RETURN .T.
ENDIF

msele := SELE()
morde := INDEXORD()
IF RECNO() > 0 .AND. msele > 0
        posicao := RECNO()
ENDIF
IF ! AbriArq('mastprod','merc');RETURN NIL;ENDIF
**************
SELE('merc');ORDSETFOCUS(1)
GO TOP
**************
SEEK STRZERO(vgru,5)
IF t = .T. .AND. FOUND()
        atencao('Este Codigo: '+STR(vgru,5)+' ja Cadastrado !!!')
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        vgru := 0
        IF posicao > 0 .AND. msele > 0 .AND. morde > 0 .AND. msele <> SELE('merc')
                GO posicao
        ENDIF
        RETURN .F.
ENDIF
IF ! FOUND()
        IF p = NIL
                atencao('Codigo: '+STR(vgru,5)+' nao Cadastrado !!!')
        ENDIF
        vgru := 0
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        IF posicao > 0 .AND. msele > 0 .AND. morde > 0 .AND. msele <> SELE('merc')
                GO posicao
        ENDIF
        RETURN .F.
ENDIF
IF li = NIL
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        IF posicao > 0 .AND. msele > 0 .AND. morde > 0 .AND. msele <> SELE('merc')
                GO posicao
        ENDIF
        RETURN .T.
ENDIF
setcor(3)
DEVPOS(li,ci);DEVOUT(merc->descri)
setcor(1)
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
IF posicao > 0 .AND. msele > 0 .AND. morde > 0 .AND. msele <> SELE('merc')
        GO posicao
ENDIF
RETURN .T.
********************** F I M ********************************
* AREDONDAMENTO DE NUMERO
*************************
FUNCTION iat(mvlr_iat,mind,mqtd_casa)
*************************************
LOCAL mvalor,qtd

IF mqtd_casa # NIL
        IF mind = 'T'
                mvalor := VAL(SUBSTR(STR(mvlr_iat,16,5),1,11+mqtd_casa))
        ELSE
                mvalor := ROUND(mvlr_iat,mqtd_casa)
        ENDIF
        RETURN mvalor
ENDIF
//IF LEN(m_set) > 0 .AND. AT('.','999,999.99') > 0
//        qtd := LEN(SUBSTR('999,999.99',AT('.','999,999.99')+1))
//ELSE
qtd := 2
//ENDIF
//IF mind = 'T'
IF mind = 'T'
        mvalor := VAL(SUBSTR(STR(mvlr_iat,16,5),1,11+qtd))
ELSE
        mvalor := ROUND(mvlr_iat,qtd)
ENDIF
RETURN mvalor
*************************** f i m *******************************************
* VER UNIDADE DE MEDIDAS
************************
FUNCTION unidade(munid,vimp)
****************************
///IF m_set[1,44] = 'S'
//        mmasc := '9'+ALLTRIM(m_set[1,99])
//ELSE
        IF munid = 'KG ' .OR. munid = 'L  '
                mmasc := '999,999.999'
        ELSEIF munid = 'M  ' .OR. munid = 'MT '
                mmasc := '9999,999.99'
        ELSEIF munid = 'UN ' .OR. munid = 'PC ' .OR. munid = 'CX ' .OR. munid = 'FD '
                mmasc := '999,999,999'
        ELSE
                mmasc := '9'+ALLTRIM(m_set[1,99])
        ENDIF
//ENDIF
RETURN mmasc
****************************** F I M *************************************
*********************** F I M **********************************
* VERIFICAR RETORNO DO MONITOR AcbrNFeMonitor
*********************************************
FUNCTION retorno_acbr(mmensa)
*****************************
LOCAL m_retorno:={},lin,linhas,linha,h:=0

IF FILE(marq_sai)
        lin := MEMOLINE(MEMOREAD(marq_sai),110,1,,)
        linhas := linha := 0
        linhas := MLCOUNT(MEMOREAD(marq_sai),110)
        FOR linha = 1 TO  linhas
                lin := MEMOLINE(MEMOREAD(marq_sai),110,linha,,)
                AADD(m_retorno,ALLTRIM(lin))
        NEXT
ENDIF
IF LEN(m_retorno) > 0
        IF SUBSTR(m_retorno[1],1,2) = 'OK'
                IF  mmensa = NIL
                        atencao('Messagem: '+m_retorno[1])
                ENDIF
                WHILE FILE(marq_sai)
                        MYRUN('DEL '+marq_sai)
                ENDDO
                RETURN .T.
        ELSE
                mmen := 'MENSAGEM DE '
                h:=0
                FOR h = 1 TO LEN(m_retorno)
                        mmen := mmen + m_retorno[h]
                NEXT
                atencao(mmen)
        ENDIF
ENDIF
WHILE FILE(marq_sai)
        MYRUN('DEL '+marq_sai)
ENDDO
RETURN .F.
************************************************************************
FUNCTION NFE_INIT(ENDERECO)   // Abre a comunicação com o ACBrNFeMonitor
* ENDERECO -> Diretorio ( quando usando TXT)  Ex: C:\ACBR\ , ou
*             IP:PORTA  (Socket) Ex: 192.168.0.1:3434
************************************************************************
LOCAL P, RET := .T., TFIM, IP, PORTA, RESP,marq_:=''
IF ! EMPTY(sENDER)  // J  est  aberto...
        RETURN .t.
ENDIF
IF m_cfg[17] = 'C:\ACBRMONITORPLUS\'
        marq_ := ALLTRIM(m_cfg[17])
ELSE
        marq_ := "ACBrNFeMonitor"
ENDIF

SEM_ERRO := .F.
sENDER   := ALLTRIM(ENDERECO)
sMODELO  := ''
IP       := ''
PORTA    := 0
#ifdef __XHARBOUR__

        IF ! (PATH_DEL $ sENDER)   /// Abrir comunicacao TCP/IP
                P := at(':',sENDER)
                IF P = 0
                        P := LEN(sENDER)+1
                ENDIF
                IP    := SUBSTR(sENDER,1,P-1)
                //atencao(ip)
                IF EMPTY(IP)
                        RET := .F.
                ELSE
                        PORTA := VAL(SUBSTR(sENDER,P+1))
                        IF PORTA = 0
                                PORTA := 3434
                        ENDIF
                        //atencao(STRZERO(porta,4))

                        inetinit()
                        RET := .F.

                        TFIM := SECONDS() + 5             /// Tenta conectar durante 5 segundos ///
                        WHILE SECONDS() < TFIM .and. ! RET
                                sSOCKET := inetconnect(IP,PORTA)
                                RET     := (ineterrorcode(sSOCKET) = 0)
                                INKEY(0.10,250)
                        ENDDO
                ENDIF
                IF RET
                        InetSetTimeout( sSOCKET, 3000 )   // Timeout de Recepção 3 seg //
                        RESP := InetRecvEndBlock( sSOCKET, ETX )
                        RET  := (marq_ $ RESP )   // Recebeu as boas vindas ?
                ENDIF
        ENDIF
#ENDIF
IF PATH_DEL $ sENDER   /// Abrir comunicacao TXT
        IF RIGHT(sENDER,1) <> PATH_DEL
                sENDER := sENDER + PATH_DEL
        ENDIF
ENDIF
IF ! RET
        sENDER := ''
ENDIF
RETURN RET
************************************************************************
FUNCTION NFE_COMANDO(CMD,VET_PARAM,ESPERA,TENTA)
************************************************
* Funcao de uso interno para enviar os comandos para a impressora e
* registrar os erros retornados pela mesma. Exibe os erros se existirem
************************************************************************
LOCAL RET_IMP, REQ:='', RESP:='', TEMPOR:='', TINI, TFIM, BLOCO, BYTES, I, TIPO_PARAM

IF EMPTY(sENDER)
        IF ! SEM_ERRO
                atencao('ACBrNFeMonitor nao foi inicializado.')
        ENDIF

        RETURN ''
ENDIF
DEFAULT VET_PARAM   to {} ,;
ESPERA      to 0  ,;
TENTA       to .t.
///// Codificando CMD de acordo com o protocolo /////
RET_IMP  := ''
IF ! ('.' $ LEFT(CMD,5))   // Informou o Objeto no Inicio ?
        CMD := 'NFE.'+CMD       // Se nao informou assume ECF.
ENDIF
IF LEN(VET_PARAM) > 0
        CMD := CMD + '('
        FOR i = 1 TO LEN(VET_PARAM)
                TIPO_PARAM := VALtype(VET_PARAM[I])

                IF TIPO_PARAM = 'C'
                // Converte aspas para simples para aspas duplas, para o ACBrNFeMonitor
                        CMD := CMD + '"'+ STRTRAN( RTrim(VET_PARAM[I]), '"', '""' ) + '"'

                ELSEIF TIPO_PARAM = 'N'
                        CMD := CMD + STRTRAN(ALLTRIM(Str(VET_PARAM[I])),',','.')

                ELSEIF TIPO_PARAM = 'D'
                        CMD := CMD + dtoc( VET_PARAM[I] )

                ELSEIF TIPO_PARAM = 'L'
                        CMD := CMD + iif( VET_PARAM[I],'TRUE','FALSE')

                ENDIF

                CMD := CMD + ', '
        next
        CMD := SUBSTR(CMD,1,LEN(CMD)-2) + ')'
ENDIF
CMD := CMD + CR+LF  + CR+LF
//atencao(cmd)
IF ! SEM_ERRO
        ESPERA := max(ESPERA,5)
ELSE
        TENTA := .F.
ENDIF
IF PATH_DEL $ sENDER               /// E' TXT ? ///
        REQ    := sENDER + ENT_TXT
        RESP   := sENDER + SAI_TXT
        TEMPOR := sENDER + TMP_TXT
        //////// Transmitindo o comando /////////
        TFIM := SECONDS() + 3    // Tenta apagar a Resposta anterior em ate 3 segundos
        WHILE file( RESP )
                IF ferase( RESP ) = -1
                        IF (SECONDS() > TFIM)
                                RET_IMP := 'ERRO: Nao foi possivel apagar o arquivo: ('+RESP+') '+;
                                ferror()
                                //ErrorOsMessage(ferror())
                        ELSE
                                INKEY(.10,20)
                        ENDIF
                ENDIF
        ENDDO
        WHILE EMPTY(RET_IMP)
                TFIM := SECONDS() + 3    // Tenta apagar a Requisicao anterior em ate 3 segundos
                WHILE file( REQ )
                        IF ferase( REQ ) = -1
                                IF (SECONDS() > TFIM)
                                        RET_IMP := 'ERRO: Nao foi possivel apagar o arquivo: ('+REQ+') '+;
                                        ferror()
                                ELSE
                                        INKEY(.10,20)
                                ENDIF
                        ENDIF
                ENDDO
                // Criando arquivo TEMPORARIO com a requisicao //
                mensagem('Criando arquivo TEMPORARIO com a requisicao')
                IF EMPTY(RET_IMP)
                        IF ! Grava_NFE(TEMPOR, CMD)
                                RET_IMP := 'ERRO: Nao foi possivel criar o arquivo: ('+TEMPOR+') '+;
                                ferror()
                        ENDIF
                ENDIF
                mensagem('Renomeando arquivo TEMPORARIO para REQUISICAO')
                IF EMPTY(RET_IMP)
                        IF frename(TEMPOR, REQ) = -1
                                RET_IMP := 'ERRO: Nao foi possivel renomear ('+TEMPOR+') para ('+REQ+') '+;
                                ferror()
                        ENDIF
                ENDIF
                INKEY(.10,20)
                // Espera ACBrNFeMonitor apagar o arquivo de Requisicao em ate 7 segundos
                // Isso significa que ele LEU o arquivo de Requisicao
                TFIM := SECONDS() + 7

                WHILE EMPTY(RET_IMP) .and. (SECONDS() <= TFIM) .and. file(REQ)
                        IF ferase(REQ) = -1
                                LOOP
                        ENDIF
                        INKEY(.10,20)
                ENDDO

                IF file(REQ)
                        IF ! TENTA
                                RET_IMP := 'ERRO: ACBrNFeMonitor nao esta ativo'
                        ELSE
                                IF op_simnao('S','O ACBrNfeMonitor nao esta ativo Deseja tentar novamente:') = 'N'
                                        RET_IMP := 'ERRO: ACBrNFeMonitor nao esta ativo'
                                ELSE
                                        IF ! file(REQ)  // ACBrNFeMonitor "acordou" enquanto perguntava
                                                exit
                                        ENDIF
                                ENDIF
                        ENDIF
                ELSE
                        exit
                ENDIF
        ENDDO
        mensagem('Lendo a resposta do ACBRNFEMONITOR')
        TINI   := SECONDS()
        WHILE EMPTY(RET_IMP)
                INKEY(.10,20)
                IF file(RESP)
                        RET_IMP := ALLTRIM(memoread( RESP ))
                ENDIF

                IF EMPTY(RET_IMP)
                        IF SECONDS() > (TINI + 5)
                                mensagem('Aguardando resposta do ACBrNFeMonitor:  '+; // '('+ProcName(2)+') '+;
                                Trim(str(TINI + ESPERA - SECONDS(),2)))
                        ENDIF
                        IF SECONDS() > (TINI + ESPERA)
                                IF ! TENTA
                                        RET_IMP := 'ERRO: Sem resposta do ACBrNFeMonitor em '+ALLTRIM(str(ESPERA))+;
                                                ' segundos (TimeOut)'
                                ELSE
                                        IF op_simnao('S','O ACBrNFeMonitor nao esta respondendo Deseja tentar novamente ?') <> 'S'
                                                RET_IMP := 'ERRO: Sem resposta do ACBrNFeMonitor em '+ALLTRIM(str(ESPERA))+;
                                                        ' segundos (TimeOut)'
                                        ELSE
                                                TINI := SECONDS()
                                        ENDIF
                                ENDIF
                        ENDIF
                        INKEY(.10,20)
                ENDIF
        ENDDO
        ferase( RESP )
        #IFDEF __XHARBOUR__

        ELSE                                       //// TCP / IP (apenas xHarbour ) ///
                mensagem('//////// Transmitindo o comando /////////')
                InetSetTimeout( sSOCKET, 3000 )   // Timeout de Envio 3 seg //
                //atencao(cmd)
                IF inetsendall( sSocket, CMD ) <= 0
                        RET_IMP := 'ERRO: Nao foi possivel transmitir dados para o ACBrNFeMonitor('+AllTrim(Str(InetErrorCode( sSOCKET )))+') '+;
                                InetErrorDesc( sSOCKET ) + ETX
                ENDIF
                mensagem('//////// Lendo a resposta ////////')
                InetSetTimeout( sSOCKET, 500 )
                TINI   := SECONDS()

                WHILE (RIGHT(RET_IMP,1) <> ETX)
                        BLOCO := SPACE(64)

                        BYTES   := inetrecv(sSOCKET, @BLOCO, 64)
                        RET_IMP += LEFT(BLOCO,BYTES)
                        //atencao(RET_IMP)

                        IF SECONDS() > (TINI + 5)
                                mensagem('Aguardando resposta do ACBrNFeMonitor:  '+; // '('+ProcName(2)+') '+;
                                Trim(str(TINI + ESPERA - SECONDS(),2)))
                        ENDIF

                        IF SECONDS() > (TINI + ESPERA)

                                IF ! TENTA
                                        RET_IMP := 'ERRO: Sem resposta do ACBrNFeMonitor em '+ALLTRIM(str(ESPERA))+;
                                        ' segundos (TimeOut)' + ETX
                                ELSE
                                        IF op_simnao('S','O ACBrNFeMonitor nao esta respondendo Deseja tentar novamente ?') = 'S'
                                                RET_IMP := 'ERRO: Sem resposta do ACBrNFeMonitor em '+ALLTRIM(str(ESPERA))+;
                                                        ' segundos (TimeOut)' + ETX
                                        ELSE
                                                TINI := SECONDS()
                                        ENDIF
                                ENDIF
                        ENDIF
                ENDDO

        #ENDIF
ENDIF
WHILE RIGHT(RET_IMP,1) $ CR+LF+ETX   // Remove sinalizadores do final
        RET_IMP := LEFT(RET_IMP,LEN(RET_IMP)-1)
ENDDO

IF ! SEM_ERRO
        MSG_ERRO := ''
        IF SUBSTR(RET_IMP,1,5) == 'ERRO:'
                MSG_ERRO := 'Erro ACBrNFeMonitor '+;  //  'Rotina ('+ProcName(2)+')|'+;
                STRTRAN(STRTRAN(SUBSTR(RET_IMP,7),CR,''),LF,' ')
                //STRTRAN(STRTRAN( MUDA_ACENTOS(SUBSTR(RET_IMP,7)),CR,''),LF,'|')
        ENDIF

        IF ! EMPTY(MSG_ERRO)
                atencao(MSG_ERRO)
                RET_IMP := ''
        ENDIF
ENDIF
RETURN RET_IMP
************************************************************************
//Static FUNCTION Grava_NFE( WARQ, WTXT )
FUNCTION Grava_NFE( WARQ, WTXT )
LOCAL HANDLE, RET := .T.

HANDLE := FCREATE(WARQ, FC_NORMAL )
IF HANDLE > 0
        FWRITE(HANDLE, WTXT + CHR(13) + CHR(10) )
        RET := (FERROR() = 0)

        FCLOSE(HANDLE)
ENDIF

RETURN RET
****************************************************************************
FUNCTION enviar_nfe(mret)
*************************
LOCAL m_retorno,lin,linhas,linha,mmen,marq_sai

m_retorno := IBR_comando('NFE.EnviarNFe',{mret,1,1,0,0,1},30,.T.)       //IBR_comando('NFE.EnviarNFe',{mret,1,1,1,1,1})
//ATENCAO(m_retorno+' 2')
IF 'Autorizado o uso da NF-e' $ m_retorno
        RETURN .T.
        //atencao('NF-e foi AUTORIZADA pela SEFAZ...')
ELSE
        atencao(m_retorno)
        RETURN .F.
ENDIF
RETURN NIL
********************************** F I M *************************************
/*
* FUNCAO P/RENVIAR NFE
**********************
FUNCTION sac_nfe(mtp_nf)
******************
LOCAL m_aux1:={},m_demo:={},mmotivo:=SPACE(20),mdat_ini,mdat_fim,m_caminho:={},mcaminho:='',mcons_nota := {},mtipo:=0,marq_sai := '',;
      m_inutilizar:={}
PRIVATE mchnfe:='',m_email:=SPACE(60),mdocumento:=''
op_tela(01,15,49,90,IF(mtp_nf = 'NFE','Arquivos NF-e (XML)','Arquivos NFC-e (XML)'),,1)
exibi_prg('SACNF_E/SAC_NFE')
//marq_sai := ALLTRIM(m_indiv[1,37])+"SAINFE.TXT"
mdat_ini := mdat_fim := CTOD('  /  /  ')
WHILE .T.
        limpa(00,00,50,100)
        DEVPOS(00,01);DEVOUT('Caminho dos XML:')
        //DEVPOS(00,28);DEVOUT('Data Final:')
        @ 01,00 TO 01,100
        setcor(3)
        DEVPOS(02,00);DEVOUT(' N.Nota                  Arquivo XML                             Data')
        setcor(1)
        @ 03,00 TO 03,90

        mensagem('INCICIANDO O ACBR Aguarde um momento....')
        IF ! IBR_INIT(ALLTRIM(m_cfg[15]))
                atencao('Nao e possivel INICIALIZAR o ACBRMONITORPLUS pelo TCP-IP, verificar se estar instalado...')
                wvw_lclosewindow()
                RETURN NIL
        ENDIF
        mensagem('ATIVANDO O ACBR Aguarde um momento....')
        IF ! IBR_OK( IBR_COMANDO( 'NFE.Ativo',,25))
                wvw_lclosewindow()
                RETURN NIL
        ENDIF
        mensagem('Verificando STATUS DO SERVICO NFe Aguarde um momento....')
        IF ! IBR_OK(IBR_comando('NFE.STATUSSERVICO',,30))
                wvw_lclosewindow();RETURN NIL
        ENDIF

        @ 00,18 GET m_cfg[16]
        //@ 00,40 GET mdat_fim VALID IF(mdat_fim < mdat_ini,.F.,.T.)
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        m_aux1:={}
        m_demo:={}
        m_caminho:={}
        CLEAR GETS
        m_aux1 := DIRECTORY(ALLTRIM(m_cfg[16])+'*-nfe.xml','D')
        IF LEN(m_aux1) > 0
                i := 0
                FOR i = 1 TO LEN(m_aux1)
                        IF mtp_nf = 'NF' .AND. SUBSTR(m_aux1[i,1],21,2) = '65'
                                LOOP
                        ELSEIF mtp_nf = 'CP' .AND. SUBSTR(m_aux1[i,1],21,2) = '55'
                                LOOP
                        ENDIF
                        AADD(m_demo,' '+SUBSTR(m_aux1[i,1],38,6)+'  '+m_aux1[i,1]+'  '+DTOC(m_aux1[i,3]))
                        AADD(m_caminho,m_aux1[i,1])
                NEXT
        ELSE
                atencao('Nao existe nenhuma NFE neste Caminho: '+ALLTRIM(m_cfg[16]))
                LOOP
        ENDIF
        point := 0
        mensagem('<CTRL + Page Down> p/Ultima Nota - Escolha a Nota e pressione <ENTER>')
        @ 46,00 TO 46,90
        DEVPOS(47,01);DEVOUT('TOTAL DE NOTAS FISCAIS:')
        @ 48,00 TO 48,90
        setcor(3)
        DEVPOS(47,25);DEVOUT(ALLTRIM(TRANSFORM(LEN(m_demo),'999,999,999')))
        point := ACHOICE(4,0,45,79,m_demo,,,point)
        setcor(1)
        DO CASE
                CASE LASTKEY()=27
                        LOOP
                CASE LASTKEY() = 13
                        op_tela(10,03,23,65,'Opcoes para NFE',,'*')
                        mensagem('Escolha a Opcao')
                        limpa(00,00,30,140)
                        setcor(1)
                        botao1(1,01,3,14)
                        botao1(1,17,3,30)
                        botao1(1,33,3,46)
                        botao1(1,49,3,62)
                        botao1(5,01,7,14)
                        botao1(5,17,7,30)
                        botao1(5,33,7,46)
                        botao1(5,49,7,62)
                        botao1(9,01,11,14)
                        botao1(9,17,11,30)
                        @ 2,03 PROMPT  ' ASSINAR  '
                        @ 2,19 PROMPT  ' VALIDAR  '
                        @ 2,35 PROMPT  ' ENVIAR   '
                        @ 2,51 PROMPT  ' IMPRIMIR '
                        @ 6,03 PROMPT  ' CANCELAR '
                        @ 6,19 PROMPT  ' COPIAR XML '
                        @ 6,35 PROMPT  ' LER XML '
                        @ 6,51 PROMPT  ' CONSULTA  '
                        @ 10,01 PROMPT ' ENVIAR EMAIL '
                        @ 10,19 PROMPT ' INUTILIZAR '
                        SET INTEN ON
                        MENU TO mtipo
                        wvw_lclosewindow()
                        IF LASTKEY() = 27
                                LOOP
                        ENDIF
                        IF mtipo = 1
                                mensagem('ASSINANDO a Nota No. '+m_caminho[point])
                                mretorno := IBR_COMANDO('NFE.AssinarNFe('+ALLTRIM(m_cfg[16])+m_caminho[point]+')',,3)
                                atencao(mretorno)
                        ELSEIF mtipo = 2
                                mensagem('VALIDANDO a Nota No. '+m_caminho[point])
                                mretorno := NFE_comando('NFE.ValidarNFe('+ALLTRIM(m_cfg[16])+m_caminho[point]+')',,3)
                                atencao(mretorno)
                        ELSEIF mtipo = 3
                                mensagem('ENVIANDO a Nota No. '+m_caminho[point])
                                mdocumento := SUBSTR(m_caminho[point],38,6)
                                enviar_nfe(ALLTRIM(m_cfg[16])+m_caminho[point],1)
                                mretorno := IBR_comando('NFE.ImprimirDanfe('+ALLTRIM(m_cfg[16])+m_caminho[point]+')',,20,,,ALLTRIM(m_cfg[16])+'HTIfirma.jpg')
                                atencao(mretorno)
                        ELSEIF mtipo = 4
                                mensagem('Aguarde um momento estar Imprimindo a Nota No. '+m_caminho[point])
                                mretorno := IBR_comando('NFE.ImprimirDanfe('+ALLTRIM(m_cfg[16])+m_caminho[point]+')',,120,,,ALLTRIM(m_cfg[16])+'HTIfirma.jpg')
                                atencao(mretorno)
                        ELSEIF mtipo = 5
                                mmotivo:=SPACE(20)
                                op_tela(10,10,11,50,'MOTIVO DO CANCELAMENTO Nota: '+SUBSTR(m_demo[point],2,6))
                                mensagem('Motivo do CANCELAMENTO DA NOTA FISCAL ELETRONICA')
                                @ 01,05 GET mmotivo PICT '@!' VALID IF(EMPTY(mmotivo) .OR. LEN(ALLTRIM(mmotivo)) < 15,.F.,.T.)
                                READ
                                mopcao := op_simnao('N','Confirma o CANCELAMENTO da nota CHAVE de No. '+SUBSTR(m_caminho[point],1,44)+':')
                                IF LASTKEY() = 27 .OR. mopcao = 'N'
                                        wvw_lclosewindow()
                                        LOOP
                                ENDIF
                                mretorno := IBR_comando('NFE.CANCELARNFE('+SUBSTR(m_caminho[point],1,AT('-',m_caminho[point])-1)+','+ALLTRIM(mmotivo)+')',,3)
                                atencao(mretorno)
                                wvw_lclosewindow()
                        ELSEIF mtipo = 6
                                mcaminho := SPACE(60)
                                op_tela(05,10,07,80,'Caminho do destino do(s) Arquivo(s)')
                                mensagem('Digite o caminho Ex: C:\SIAC')
                                DEVPOS(01,01);DEVOUT('Caminho:')
                                @ 01,COL()+1 GET mcaminho PICT '@!' VALID IF(EMPTY(mcaminho),.F.,.T.)
                                READ
                                IF LASTKEY() = 27
                                        wvw_lclosewindow()
                                        LOOP
                                ENDIF
                                FOR i = 1 TO LEN(m_caminho)
                                        //atencao('COPY '+ALLTRIM(m_cfg[16])+m_caminho[i]+" "+ALLTRIM(mcaminho))
                                        MYRUN('COPY '+ALLTRIM(m_cfg[16])+m_caminho[i]+" "+ALLTRIM(mcaminho))
                                NEXT
                                atencao('Foi copiado '+ALLTRIM(TRANSFORM(LEN(m_caminho),'999,999,999'))+' Arquivos para o Caminho: '+ALLTRIM(mcaminho)+' com sucesso...')
                                wvw_lclosewindow()
                        ELSEIF mtipo = 7
                                //ATENCAO('Lendo a NFE: '+ALLTRIM(m_cfg[16])+m_caminho[point])
                                mretorno := NFE_comando('NFe.LerNFe('+ALLTRIM(m_cfg[16])+m_caminho[point]+')',,3)
                                ATENCAO(MRETORNO)
                                IF 'S' = op_simnao('S','Deseja Editar o arquivo:')
                                        IBR_comando('NFe.NFeToTXT('+ALLTRIM(m_cfg[16])+m_caminho[point]+','+ALLTRIM(m_cfg[16])+m_caminho[point]+SUBSTR(m_caminho[point],38,6)+'.txt)',,3)
                                        MYRUN('NOTEPAD '+ALLTRIM(m_cfg[16])+m_caminho[point]+SUBSTR(m_caminho[point],38,6)+'.txt')
                                ENDIF
                        ELSEIF mtipo = 8
                                mcaminho:=SPACE(60)
                                op_tela(05,10,07,90,'Consultando a NFE')
                                //DEVPOS(01,01);DEVOUT(ALLTRIM(m_cfg[16])+m_caminho[point])
                                //mretorno := NFE_comando('NFE.ConsultarNFe('+ALLTRIM(m_cfg[16])+m_caminho[point]+')',,3)
                                DEVPOS(01,01);DEVOUT(ALLTRIM(SUBSTR(m_caminho[point],1,AT('-',m_caminho[point])-1)))
                                mcaminho :=ALLTRIM(m_cfg[16])+m_caminho[point]
                                @ 01,01 GET mcaminho
                                READ
                                IF LASTKEY() = 27
                                        wvw_lclosewindow()
                                        LOOP
                                ENDIF
                                mretorno := IBR_comando('NFE.ConsultarNFe('+mcaminho+')',,3)
                                atencao(mretorno)
                                wvw_lclosewindow()
                                //NFe.LerNFe(cArqXML)
                        ELSEIF mtipo = 9
                                mcaminho :=ALLTRIM(m_cfg[16])+m_caminho[point]
                                op_tela(10,10,11,70,'Enviar EMAIL')
                                DEVPOS(00,00);DEVOUT('Email de Destino:')
                                @ 00,18 GET m_email VALID IF(EMPTY(m_email),.F.,.T.)
                                READ
                                IF LASTKEY() # 27
                                        m_ret := IBR_comando('NFE.ENVIAREMAIL('+m_email+','+mcaminho+',1)',,3)
                                        atencao(m_ret)
                                        wvw_lclosewindow()
                                ELSE
                                        wvw_lclosewindow()
                                ENDIF

                        ELSEIF mtipo = 10
                                m_inutilizar:={}
                                op_tela(05,10,07,90,'Inutilizando NFE')
                                FOR i = 1 TO LEN(m_caminho)
                                        DEVPOS(01,01);DEVOUT(ALLTRIM(SUBSTR(m_caminho[i],1,AT('-',m_caminho[i])-1)))
                                        mcaminho :=ALLTRIM(m_cfg[16])+m_caminho[i]
                                        DEVPOS(01,01);DEVOUT(mcaminho)
                                        //mretorno := IBR_comando('NFE.ConsultarNFe('+mcaminho+')',,3)
                                        //IF ! 'Autorizado o uso da NF-e' $ mretorno
                                                mretorno := IBR_comando('NFE.InutilizarNFe('+SUBSTR(mcgc_firm,1,2)+SUBSTR(mcgc_firm,4,3)+SUBSTR(mcgc_firm,8,3)+SUBSTR(mcgc_firm,12,4)+SUBSTR(mcgc_firm,17,2)+',Error de dados na nota,'+SUBSTR(m_caminho[i],3,2)+','+SUBSTR(m_caminho[i],21,2)+',1,'+SUBSTR(m_caminho[i],38,6)+','+SUBSTR(m_caminho[i],38,6)+')',,3,,1)
                                                IF ! EMPTY(mretorno)
                                                sr_getconnection():exec('INSERT INTO nfe_inutilizada ('+;
                                                        'JUSTIFICATIVA,'+;//1
                                                        'ANO          ,'+;//2
                                                        'MODELO       ,'+;//3
                                                        'SERIE        ,'+;//4
                                                        'NUMERO       ,'+;//4
                                                        'CAMINHO      )'+;
                                                        ' VALUES ('+;
                                                        sr_cdbvalue('Error de dados na nota' )+','+; //1
                                                        sr_cdbvalue(SUBSTR(m_caminho[i],3,2) )+','+; //2
                                                        sr_cdbvalue(SUBSTR(m_caminho[i],21,2))+','+; //3
                                                        sr_cdbvalue('1'                      )+','+; //4
                                                        sr_cdbvalue(SUBSTR(m_caminho[i],38,6))+','+;
                                                        sr_cdbvalue(mcaminho)+')',,.f.)
                                                        sr_getconnection():exec('COMMIT',,.f.)
                                                ENDIF
                                        //ENDIF
                                NEXT
                                wvw_lclosewindow()
                        ENDIF
        ENDCASE
ENDDO
wvw_lclosewindow()
RETURN NIL
******************************* f i m *********************************************
* FUNCAO P/nfe_inutilizar
**********************
FUNCTION nfe_inutilizar()
******************
LOCAL m_aux1:={},m_demo:={},mmotivo:=SPACE(20),mdat_ini,mdat_fim,m_caminho:={},mcaminho:='',mcons_nota := {},mtipo:=0,marq_sai := '',;
      m_inutilizar:={}
PRIVATE mchnfe:='',m_email:=SPACE(60),mdocumento:=''
op_tela(01,15,49,90,'ARQUIVOS NFE (XML)',,1)
exibi_prg('SACNF_E/SAC_NFE')
//IF m_indiv[1,37] = 'C:\ACBRMONITORPLUS\'
//marq_sai := ALLTRIM(m_indiv[1,37])+"SAINFE.TXT"
//ENDIF
mdat_ini := mdat_fim := CTOD('  /  /  ')
WHILE .T.
        limpa(00,00,50,100)
        DEVPOS(00,01);DEVOUT('Caminho dos XML:')
        //DEVPOS(00,28);DEVOUT('Data Final:')
        @ 01,00 TO 01,100
        setcor(3)
        DEVPOS(02,00);DEVOUT(' N.Nota                  Arquivo XML                             Data')
        setcor(1)
        @ 03,00 TO 03,90

        @ 00,18 GET m_cfg[16]
        //@ 00,40 GET mdat_fim VALID IF(mdat_fim < mdat_ini,.F.,.T.)
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        m_aux1:={}
        m_demo:={}
        m_caminho:={}
        CLEAR GETS
        m_aux1 := DIRECTORY(ALLTRIM(m_cfg[16])+'*-nfe.xml','D')
        IF LEN(m_aux1) > 0
                i := 0
                FOR i = 1 TO LEN(m_aux1)
                        AADD(m_demo,' '+SUBSTR(m_aux1[i,1],38,6)+'  '+m_aux1[i,1]+'  '+DTOC(m_aux1[i,3]))
                        AADD(m_caminho,m_aux1[i,1])
                NEXT
        ELSE
                atencao('Nao existe nenhuma NFE neste Caminho: '+ALLTRIM(m_cfg[16]))
                LOOP
        ENDIF
        point := 0
        mensagem('<CTRL + Page Down> p/Ultima Nota - Escolha a Nota e pressione <ENTER>')
        @ 46,00 TO 46,90
        DEVPOS(47,01);DEVOUT('TOTAL DE NOTAS FISCAIS:')
        @ 48,00 TO 48,90
        setcor(3)
        DEVPOS(47,25);DEVOUT(ALLTRIM(TRANSFORM(LEN(m_demo),'999,999,999')))
        point := ACHOICE(4,0,45,79,m_demo,,,point)
        setcor(1)
        DO CASE
                CASE LASTKEY()=27
                        LOOP
                CASE LASTKEY() = 13
                        mensagem('INCICIANDO O ACBR Aguarde um momento....')
                        IF ! IBR_INIT(ALLTRIM(m_cfg[15]))
                                atencao('Nao e possivel INICIALIZAR o ACBRMONITORPLUS pelo TCP-IP, verificar se estar instalado...')
                                wvw_lclosewindow()
                                RETURN NIL
                        ENDIF
                        mensagem('ATIVANDO O ACBR Aguarde um momento....')
                        IF ! IBR_OK( IBR_COMANDO( 'NFE.Ativo',,25))
                                wvw_lclosewindow()
                                RETURN NIL
                        ENDIF
                        mensagem('Verificando STATUS DO SERVICO NFe Aguarde um momento....')
                        IF ! IBR_OK(IBR_comando('NFE.STATUSSERVICO',,30))
                                //wvw_lclosewindow();RETURN NIL
                        ENDIF
                        opcao := op_simnao('S','Confirma o PROCESSO DE INUTILIZACAO DAS NF-e e NFC-e:')
                        IF opcao = 'N' .OR. LASTKEY() = 27
                                EXIT
                        ENDIF
                        m_inutilizar:={}
                        op_tela(05,10,07,90,'Inutilizando NFE')
                        FOR i = 1 TO LEN(m_caminho)
                                DEVPOS(01,01);DEVOUT(ALLTRIM(SUBSTR(m_caminho[i],1,AT('-',m_caminho[i])-1)))
                                mcaminho :=ALLTRIM(m_cfg[16])+m_caminho[i]
                                DEVPOS(01,01);DEVOUT(mcaminho)
                                //mretorno := IBR_comando('NFE.ConsultarNFe('+mcaminho+')',,3)
                                //IF ! 'Autorizado o uso da NF-e' $ mretorno
                                        mretorno := IBR_comando('NFE.InutilizarNFe('+SUBSTR(mcgc_firm,1,2)+SUBSTR(mcgc_firm,4,3)+SUBSTR(mcgc_firm,8,3)+SUBSTR(mcgc_firm,12,4)+SUBSTR(mcgc_firm,17,2)+',Error de dados na nota,'+SUBSTR(m_caminho[i],3,2)+','+SUBSTR(m_caminho[i],21,2)+',1,'+SUBSTR(m_caminho[i],38,6)+','+SUBSTR(m_caminho[i],38,6)+')',,3,,1)
                                        IF ! EMPTY(mretorno)
                                        sr_getconnection():exec('INSERT INTO nfe_inutilizada ('+;
                                                'JUSTIFICATIVA,'+;//1
                                                'ANO          ,'+;//2
                                                'MODELO       ,'+;//3
                                                'SERIE        ,'+;//4
                                                'NUMERO       ,'+;//4
                                                'CAMINHO      )'+;
                                                ' VALUES ('+;
                                                sr_cdbvalue('Error de dados na nota' )+','+; //1
                                                sr_cdbvalue(SUBSTR(m_caminho[i],3,2) )+','+; //2
                                                sr_cdbvalue(SUBSTR(m_caminho[i],21,2))+','+; //3
                                                sr_cdbvalue('1'                      )+','+; //4
                                                sr_cdbvalue(SUBSTR(m_caminho[i],38,6))+','+;
                                                sr_cdbvalue(mcaminho)+')',,.f.)
                                                sr_getconnection():exec('COMMIT',,.f.)
                                        ENDIF
                                //ENDIF
                        NEXT
                        wvw_lclosewindow()
        ENDCASE
ENDDO
wvw_lclosewindow()
RETURN NIL
*/
******************************* f i m *********************************************
* VER CEST
**********
FUNCTION ver_cest(mcod_ncm)
**************************
LOCAL ver_cest:={}
IF EMPTY(mcod_ncm)
        atencao('Nao foi informado o NCM do proiduto nao e possivel encontrar o CEST desse produto verificar o cadastro do produto...')
        RETURN ''
ENDIF
sr_getconnection():exec("SELECT * FROM sacncm WHERE codigo = "+sr_cdbvalue(mcod_ncm),,.t.,@ver_cest)
//ATENCAO(ALLTRIM(ver_cest[1,10]))
IF LEN(ver_cest) >= 1
        RETURN ALLTRIM(ver_cest[1,10])
ELSE
        RETURN ''
ENDIF
RETURN NIL
***************************** F I M ****************************************
* CONVERTE DBF para BANCO DE DADOS
**********************************
#include "directry.ch"
#include "sqlrdd.ch"       // SQLRDD Main include

Function arq_ncm()
******************
LOCAL qtd_incl:=0,qtd_atu:=0,cons_ :={}

SET DELETED ON
op_tela(10,10,15,70,"SICRONIZAR ARQUIVO NCM")
WHILE .T.
        qtd_incl := qtd_atu:=0
        setcor(1)
        DEVPOS(00,01);DEVOUT('Total de registro do Arquivo: ')
        DEVPOS(01,01);DEVOUT('Total de registro ATUALIZADO: ')
        DEVPOS(02,01);DEVOUT('Total de registro INCLUSO   : ')
        DEVPOS(03,01);DEVOUT('Quantidade Registro Restante: ')
        IF 'N' = op_simnao('S','Confirma o processamento')
                EXIT
        ENDIF
        IF ! FILE('ibptax.dbf')
                atencao('O arquivo do IBPT nao se encontrar neste caminho....')
                LOOP
        ENDIF
        IF ! abriarq('ibptax.dbf','ibp',,'*')
                atencao('Nao foi possivel abri este arquivo: IBPTAX.DBF')
                LOOP
        ENDIF
        setcor(3)
        DEVPOS(00,30);DEVOUT(TRANSFORM(LASTREC(),'999,999,999'))
        SELE('ibp');GO TOP
        WHILE ! EOF()
                cons_ :={}
                //sr_getconnection():exec("SELECT * FROM sacncm WHERE codigo = "+sr_cdbvalue(SUBSTR(ALLTRIM(STR(INT(ibp->codigo))),1,8)),,.t.,@cons_)
                sr_getconnection():exec("SELECT * FROM sacncm WHERE codigo = "+sr_cdbvalue(SUBSTR(ALLTRIM(ibp->codigo),1,8)),,.t.,@cons_)
                IF LEN(cons_) = 0
                        sr_getconnection():exec('INSERT INTO sacncm (codigo,'+;
                                'descri,'+;
                                'ex,'+;
                                'tabela,'+;
                                'aliqnac,'+;
                                'aliqimp,'+;
                                'SR_DELETED )'+;
                                ' VALUES ('+;
                                sr_cdbvalue(SUBSTR(ALLTRIM(ibp->codigo),1,8))+','+; //1
                                sr_cdbvalue(SUBSTR(tira_acento(UPPER(ibp->descricao)),1,100))+','+; //2
                                sr_cdbvalue(SUBSTR(ALLTRIM(ibp->ex),1,2))+','+; //3
                                sr_cdbvalue(SUBSTR(ALLTRIM(ibp->tabela),1,2))+','+; //4
                                sr_cdbvalue(VAL(ALLTRIM(ibp->aliqnac)))+','+; //5
                                sr_cdbvalue(VAL(ALLTRIM(ibp->aliqimp)))+','+; //6
                                sr_cdbvalue(' ')+')',,.f.)
                        DEVPOS(02,30);DEVOUT(TRANSFORM(qtd_incl++,'999,999,999'))

                ELSE
                        sr_getconnection():exec("UPDATE sacncm SET descri = "+sr_cdbvalue(SUBSTR(tira_acento(UPPER(ibp->descricao)),1,100));
                                                +',ex = '+sr_cdbvalue(SUBSTR(ALLTRIM(ibp->ex),1,2));
                                                +',tabela = '+sr_cdbvalue(SUBSTR(ALLTRIM(ibp->tabela),1,2));
                                                +',aliqnac = '+sr_cdbvalue(VAL(ALLTRIM(ibp->aliqnac)));
                                                +',aliqimp = '+sr_cdbvalue(VAL(ALLTRIM(ibp->aliqimp)))+' WHERE codigo = '+SUBSTR(ALLTRIM(ibp->codigo),1,8),,.f.)
                        DEVPOS(01,30);DEVOUT(TRANSFORM(qtd_atu++,'999,999,999'))
                ENDIF
                SKIP
                DEVPOS(03,30);DEVOUT(TRANSFORM(LASTREC() - (qtd_atu + qtd_incl),'999,999,999'))
        ENDDO
        sr_getconnection():exec("COMMIT",,.f.)
        atencao('Foi feito a Atualizacao com SUCESSO....')
        EXIT
ENDDO
wvw_lclosewindow()
Return
***************************** F I M ****************************************
FUNCTION ver_ncm(vncm,m_cst)
****************************
LOCAL mvlrncm:= {}
sr_getconnection():exec( "SELECT * FROM sacncm WHERE codigo = "+sr_cdbvalue(vncm),,.t.,@mvlrncm)
IF LEN(mvlrncm) = 0
        RETURN 0
ELSE
        //m_cst := SUBSTR(mvlrncm[1,10],1,1)
        //IF m_cst $ '0345'
                RETURN mvlrncm[1,8]
        //ELSE
        //        RETURN mvlrncm[1,9]
        //ENDIF
ENDIF
RETURN 0
**************************  F I M *******************************************
* ALTERACAO DE MERCADORIA
***************************
FUNCTION alt_prod2(vcd_prod)
****************************
LOCAL li:=08,ci:=10,lb:=23,cb:=89,mp_venda:=0,mtelap,telapro,malt_merc:={},cons_formula :={},mcond_canc:=0

MEMVAR mponto,mcod_merc,mquantd,mvlr_fat,menvelope,m_matriz,;
       m_codigo,ali,m_alt,lci,cci,lba,cba,opcao,mcomissao,cod_operado,;
       mproducao,mcont_item,mtot_ped,mdesconto,msubtotal,mtot_custo,mvarejo,;
       mperc,mcod_cli,mmasc_qtd,c_pedi,m_posi

op_tela(4,10,29,89,' ALTERACAO DE PRODUTOS ')
SETCOR(3)
DEVPOS(00,01);DEVOUT(' PRODUTO                                      QUANTD.    PR.UNIT.      TOTAL')
@ 01,00 TO 01,100
SETCOR(1)
mensagem('Escolha com as Setas e Tecle <ENTER>p/Alterar ou <ESC>p/Abandonar')
setcor(1)
c_pedi := {}
sr_getconnection():exec("SELECT * FROM sacped_s WHERE sr_deleted = ' ' AND pnum_ped = "+sr_cdbvalue(STRZERO(mnum_ped,6)),,.t.,@c_pedi)
m_alt := {}
m_codigo := {}
m_posi := {}
i := 0
FOR i = 1 TO LEN(c_pedi)
        AADD(m_posi,c_pedi[i,111])
        AADD(m_codigo,c_pedi[i,6])
        IF RTRIM(c_pedi[i,8]) = 'EV'
                AADD(m_alt,c_pedi[i,6]+' '+LEFT(c_pedi[i,7],27)+' '+c_pedi[i,10]+' '+TRANSFORM(c_pedi[i,14],'99999.99')+' '+TRANSFORM(c_pedi[i,17],ALLTRIM('@E '+m_set[1,98]))+' '+TRANSFORM(c_pedi[i,17] * c_pedi[i,14],ALLTRIM('@E '+m_set[1,98])))
        ELSE
                AADD(m_alt,c_pedi[i,6]+' '+LEFT(c_pedi[i,7],38)+' '+TRANSFORM(c_pedi[i,14],'99999.99')+' '+TRANSFORM(c_pedi[i,17],ALLTRIM('@E '+m_set[1,98]))+' '+TRANSFORM(c_pedi[i,17] * c_pedi[i,14],ALLTRIM('@E '+m_set[1,98])))
        ENDIF
NEXT
mponto:=0
IF vcd_prod # NIL
        mponto := ASCAN(m_codigo,vcd_prod)
ENDIF
mponto := ACHOICE(02,01,27,78,m_alt,,,mponto)
wvw_lclosewindow()
IF mponto = 0
        RETURN .T.
ENDIF
IF ! ver_nivel('ALT_PROD2','ALTERACAO DE PRODUTOS NO PEDIDO VENDA','1245',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF
op_tela(10,10,17,79,' ALTERACAO DE PRODUTOS ')
CLEAR GETS
DO WHILE .T.
        malt_merc := {}
        sr_getconnection():exec("SELECT * FROM sacmerc WHERE cod_merc = "+sr_cdbvalue(m_codigo[mponto]),,.t.,@malt_merc)
        IF LEN(malt_merc) = 0
                atencao('Codigo Barra nao cadastrado')
                LOOP
        ENDIF
        mcod_merc := VAL(malt_merc[1,8])
        IF EMPTY(mcod_merc)
		EXIT
        ENDIF
        DEVPOS(00,00);DEVOUT('Produto....:')
        IF RTRIM(c_pedi[mponto,8]) = 'EV'
                DEVPOS(01,00);DEVOUT('No.Envelope:')
        ELSEIF RTRIM(c_pedi[mponto,8]) = 'PL'
                DEVPOS(01,00);DEVOUT('No.Placa...:')
        ENDIF
        DEVPOS(02,00);DEVOUT('Saldo......:')
        DEVPOS(03,00);DEVOUT('Quantidade.:')
        DEVPOS(04,00);DEVOUT('Prc.Tabela :')
        DEVPOS(05,00);DEVOUT('Preco Venda:')
        DEVPOS(06,00);DEVOUT('Observacao.:')
        SETCOR(3)
        IF malt_merc[1,23] > 0
                WVW_DrawBoxGet(,04,14,10)
                DEVPOS(04,14);DEVOUT(TRANSFORM(malt_merc[1,46],'999,999.99'))
        ENDIF
        //setcor(3)
        DEVPOS(00,14);DEVOUT(STRZERO(mcod_merc,5))
        DEVPOS(00,COL()+1);DEVOUT(malt_merc[1,9])
        DEVPOS(02,14);DEVOUTPICT(malt_merc[1,56],ALLTRIM(m_set[1,98]))
        SETCOR(1)
        mvlr_fat = c_pedi[mponto,17]
        //mvlr_fat = m_matriz[mponto,2]
        mp_venda = malt_merc[1,46]
        IF ! EMPTY(malt_merc[1,23])
                mp_venda := mvlr_fat
                @ 00,COL()+1 SAY '(P)'
        ENDIF
        mquantd = c_pedi[mponto,14]
        menvelope := c_pedi[mponto,10]
        setcor(1)
        IF RTRIM(c_pedi[mponto,8]) = 'EV'
                WVW_DrawBoxGet(,01,14,LEN(menvelope))
                @ 01,14 GET menvelope PICT '@!' VALID IF(EMPTY(menvelope),.F.,.T.)
                READ
        ELSEIF RTRIM(c_pedi[mponto,8]) = 'PL'
                WVW_DrawBoxGet(,01,14,LEN(menvelope))
                @ 01,14 GET menvelope PICT '@!' VALID IF(EMPTY(menvelope),.F.,.T.)
                READ
        ENDIF
        IF LASTKEY() = 27;EXIT;ENDIF
        mmasc_qtd := unidade(malt_merc[1,14])
        WVW_DrawBoxGet(,03,14,LEN(mmasc_qtd))
        @ 03,14 GET mquantd PICT mmasc_qtd WHEN men_get(0,2,'Informe a quantidade que deseja, so nao pode ultrapassar o saldo da mercadoria') VALID lim_get()
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        mpacote := mpecas := 0
        IF ! EMPTY(malt_merc[1,19]) .AND. mquantd > 0
                IF VAL(SUBSTR(TRANSFORM(mquantd/malt_merc[1,19],'999,999.99'),9)) > 0
                        mquantd_aux := VAL(SUBSTR(TRANSFORM(mquantd/malt_merc[1,19],'999,999.99'),1,7)) +1
                        mquantd := mquantd_aux * malt_merc[1,19]
                ENDIF
                mpacote := VAL(SUBSTR(TRANSFORM((mquantd/malt_merc[1,19])/malt_merc[1,20],'999,999.99'),1,7))
                mpecas  := VAL(SUBSTR(TRANSFORM((mquantd/malt_merc[1,19])/malt_merc[1,20],'999,999.9'),9))
                setcor(3,'*')
                DEVPOS(lba-6,cci+46);DEVOUTPICT(mquantd,ALLTRIM(mmasc_qtd))
                DEVPOS(lba-3,cci+05);DEVOUTPICT(mpacote,'9,999.99')
                DEVPOS(lba-3,cci+19);DEVOUTPICT(mpecas,'999')
                setcor(1)
        ENDIF
        IF mquantd > malt_merc[1,56] + c_pedi[mponto,14] .AND. m_set[1,107] = 'S' .AND. ali = 'ped_s'
                IF ! aut_sen('Quantidade maior que saldo... Senha de autorizacao:','LIB_SALDO',,'',STRZERO(mcod_merc,5))
                        EXIT
                ENDIF
        ENDIF
        IF mquantd = 0
                /*
                IF ver_serie() = '141414'
                        IF ! aut_sen('Quantidade menor que o Solicitador Anteriormente:','LIB_ALTSLDPED',,'')
                                LOOP
                        ENDIF
                ENDIF
                */
                op_tela(10,10,16,115,'CONDICAO DO CANCELAMENTO DA MERCADORIA',,'*')
                WHILE .T.
                        limpa(00,00,10,100)
                        botao1(01,02,03,28)
                        botao1(01,30,03,56)
                        @ 02,03 PROMPT  ' Desistencia do CLIENTE  '
                        @ 02,31 PROMPT  '     Falta de SALDO      '
                        SET INTEN ON
                        MENU TO mcond_canc
                        IF mcond_canc > 0
                                wvw_lclosewindow()
                                EXIT
                        ENDIF
                ENDDO
                opcao := op_simnao('S','Confirma Exclusao da Mercadoria:')
                IF opcao = 'S'
                        c_ped := {}
                        sr_getconnection():exec("SELECT * FROM sacped_s WHERE sr_deleted = ' ' AND pnum_ped = "+sr_cdbvalue(STRZERO(mnum_ped,6)),,.t.,@c_ped)
                        IF LEN(c_ped) = 1
                                atencao('Nao e possivel Excluir este Produto pois so existe (01) Um produto no pedido !!!!')
                                LOOP
                        ENDIF
                        mquantd = 0
                        aret:={}
                        mensagem('Atualizando o Produto...')
                        sr_getconnection():exec("SELECT * FROM sacmerc WHERE cod_merc = "+sr_cdbvalue(m_codigo[mponto]),,.t.,@aret)
                        mlinha := aret[1,2]+aret[1,8]+aret[1,9]+aret[1,14]+STRZERO((aret[1,56] + c_pedi[mponto,14])*1000,13)+STRZERO(iat(aret[1,46])*100,14)+aret[1,68]
                        SR_BEGINTRANSACTION()
                                        sr_getconnection():exec("UPDATE sacmerc SET saldo_mer = "+sr_cdbvalue(aret[1,56] + c_pedi[mponto,14])+" WHERE cod_merc = "+sr_cdbvalue(m_codigo[mponto]),,.f.)
                                        mensagem('Atualizando o Arquivo de LOG...')
                                        sr_getconnection():exec('INSERT INTO logproduto (data_sis,data,'+;
                                                                                'hora,cod_prod,quantd,saldo_ant,saldo_pos,cod_oper,prog,terminal,'+;
                                                                                'processo,ent_sai,SR_DELETED )'+;
                                                                                ' VALUES ('+;
                                                                                sr_cdbvalue(DATE())+','+; //1
                                                                                sr_cdbvalue(mdata_sis)+','+; //2
                                                                                sr_cdbvalue(TIME())+','+; //3
                                                                                sr_cdbvalue(m_codigo[mponto])+','+; //4
                                                                                sr_cdbvalue(c_pedi[mponto,14])+','+; //5
                                                                                sr_cdbvalue(aret[1,56])+','+; //6
                                                                                sr_cdbvalue(aret[1,56] + c_pedi[mponto,14] )+','+; //7
                                                                                sr_cdbvalue(cod_operado)+','+; //8
                                                                                sr_cdbvalue('SAC23PD1')+','+; //9
                                                                                sr_cdbvalue(LEFT(NETNAME(),15))+','+; //12
                                                                                sr_cdbvalue('EXCLUSAO PD: '+STRZERO(mnum_ped,6))+','+; //11
                                                                                sr_cdbvalue('E')+','+; //11
                                                                                sr_cdbvalue(' ')+')',,.f.)
                                        mensagem('Atualizando o Arquivo de PEDIDO...')
                                        //sr_getconnection():exec("DELETE FROM sacped_s WHERE sr_deleted = ' ' AND SR_RECNO = "+sr_cdbvalue(m_posi[mponto]),,.f.)
                                        IF mcond_canc = 1
                                                sr_getconnection():exec("UPDATE sacped_s SET sr_deleted = 'C' WHERE SR_RECNO = "+sr_cdbvalue(m_posi[mponto]),,.f.)
                                        ELSE
                                                sr_getconnection():exec("UPDATE sacped_s SET sr_deleted = 'S' WHERE SR_RECNO = "+sr_cdbvalue(m_posi[mponto]),,.f.)
                                        ENDIF
                                sr_committransaction()
                        sr_endtransaction()
                        m_codigo[mponto] = '     '
                        m_matriz[mponto,1] := m_matriz[mponto,2] := ;
                        m_matriz[mponto,3] := 0
                        mcont_item --
                        DEVPOS(lba-2,cci+10);DEVOUT(STRZERO(mcont_item,3))
                        setcor(1)
                        mquantd := 1
                        EXIT
                ELSE
                        mquantd := 1
                        EXIT
                ENDIF
        ENDIF
        IF mvarejo = 2
                IF ! EMPTY(malt_merc[1,47])
                        mp_venda = malt_merc[1,47]
                ELSE
                        mp_venda = iat(malt_merc[1,46]*((malt_merc[1,50]/100)+1),m_set[1,103])
                ENDIF
        ELSEIF mperc > 0
                mp_venda = iat(malt_merc[1,46]*((mperc/100)+1),m_set[1,103])
        ELSE
                mp_venda = iat(malt_merc[1,46],m_set[1,103])
        ENDIF
        mensagem('Digite o valor do produto - <ESC>Abandonar')
        WVW_DrawBoxGet(,05,14,LEN(ALLTRIM(m_set[1,98])))
        @ 05,14 GET mvlr_fat PICT ALLTRIM(m_set[1,98]) VALID IF(malt_merc[1,23] > 0 .AND. mvlr_fat < mp_venda,.F.,.T.) WHEN m_set[1,38] <> 'P'
        @ 06,14 GET c_pedi[mponto,58] PICT '@!'
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        // FRIPAL, FRANGO DOURADO ou DISCAPE
        IF mvlr_fat < (malt_merc[1,45] * 1.10) .AND. (ver_serie() = '141597' .OR. ver_serie() = '141390' .OR. ver_serie() = '141336')
                atencao('Cod.Prod...: '+STRZERO(mcod_merc,5)+m_qp+;
                        'Vlr.p/Produto Solic.: '+ALLTRIM(TRANSFORM(mvlr_fat,'999,999,999.99'))+m_qp+;
                        'Valor Minimo R$.....: '+ALLTRIM(TRANSFORM(malt_merc[1,45] * 1.10,'999,999.99')))
                LOOP
        ENDIF
        IF ! EMPTY(m_set[1,154]) .AND. mvlr_fat > m_set[1,154]
                IF ! aut_sen('Valor por Produto Solicitada: '+ALLTRIM(TRANSFORM(mvlr_fat,'999,999,999.99'))+' maior que Permitido pela ADM: '+ALLTRIM(TRANSFORM(m_set[1,154],'999,999.99'))+' ... Senha de autorizacao:','LIB_SALDO',,'',STRZERO(mcod_merc,5))
                        LOOP
                ENDIF
        ENDIF
        IF iat(mp_venda,m_set[1,103]) > mvlr_fat
                IF ((iat(mp_venda,m_set[1,103]) - mvlr_fat)/iat(mp_venda,m_set[1,103]))*100 > m_set[1,33] .AND. EMPTY(malt_merc[1,80])
                        IF ! aut_sen(TRANSFORM(((iat(mp_venda,m_set[1,103]) - mvlr_fat)/iat(mp_venda,m_set[1,103]))*100,'999.99')+'% Desconto nao e permitido.. senha autorizacao:','LIB_DESC',,'',STRZERO(mcod_merc,5))
                                LOOP
                        ENDIF
                ENDIF
                IF (((iat(mp_venda,m_set[1,103]) - mvlr_fat)/iat(mp_venda,m_set[1,103]))*100 > malt_merc[1,80] .AND. ! EMPTY(malt_merc[1,80])) .AND. ! EMPTY(malt_merc[1,80])
                        IF ver_serie() = '141220' .OR. ver_serie() = '141350' .OR. ver_serie() = '141384'
                                atencao(TRANSFORM(((iat(mp_venda,m_set[1,103]) - mvlr_fat)/iat(mp_venda,m_set[1,103]))*100,'999.99')+'% Desconto nao e permitido.. ')
                                mquantd := 1
                                LOOP
                        ENDIF
                        IF ! aut_sen(TRANSFORM(((iat(mp_venda,m_set[1,103]) - mvlr_fat)/iat(mp_venda,m_set[1,103]))*100,'999.99')+'% Desconto nao e permitido.. senha autorizacao:','LIB_DESC',,'',STRZERO(mcod_merc,5))
                                LOOP
                        ENDIF
                ENDIF
        ENDIF
        IF m_set[1,38] = 'C'
                IF mvlr_fat < iat(mp_venda,m_set[1,103])
                       IF mvlr_fat < malt_merc[1,45]
                                IF ! aut_sen('Senha de autorizacao:','LIB_DESC',,'',STRZERO(mcod_merc,5))
                                        LOOP
                                ENDIF
                        ENDIF
                ENDIF
        ELSEIF m_set[1,38] = 'V'
                IF mvlr_fat < iat(mp_venda,m_set[1,103])
                       IF mvlr_fat < iat(mp_venda,m_set[1,103])
                                IF ! aut_sen('Senha de autorizacao:','LIB_DESC',,'',STRZERO(mcod_merc,5))
                                        LOOP
                                ENDIF
                        ENDIF
                ENDIF
        ENDIF
        IF m_set[1,37] = 'S'
                mmontador := VAL(c_pedi[mponto,36])
                mmontador1 := VAL(c_pedi[mponto,38])
/*
                mmontador := m_matriz[mponto,37]
                mmontador1 := m_matriz[mponto,38]
*/
                op_tela(10,25,13,75,' Informe o Montador ')
                DEVPOS(00,00);DEVOUT('Montador 1:')
                DEVPOS(01,00);DEVOUT('Montador 2:')
                WVW_DrawBoxGet(,00,14,3)
                WVW_DrawBoxGet(,01,14,3)
                @ 00,14 GET mmontador PICT '999' VALID ven(mmontador,00,18)
                @ 01,14 GET mmontador1 PICT '999' VALID IF(mmontador1 = mmontador,.F.,ven(mmontador1,01,18)) WHEN ! EMPTY(mmontador)
                READ
                opcao := op_simnao('S','Confirma os Montador:')
                wvw_lclosewindow()
                IF  opcao = 'N'
                        LOOP
                ENDIF
        ENDIF
        IF m_set[1,115] = 'S'
                //mcomissao := m_matriz[mponto,15]
                mcomissao := c_pedi[mponto,53]
                op_tela(10,10,11,65,'Comissao do Produto')
                DEVPOS(00,00);DEVOUT('Digite o percentual de Comissao do Vendedor [%]:')
                WVW_DrawBoxGet(,00,COL()+1,6)
                @ 00,COL()+1 GET mcomissao PICT '999.99' VALID IF(EMPTY(mcomissao),.F.,.T.)
                READ
                wvw_lclosewindow()
                IF LASTKEY() = 27
                        LOOP
                ENDIF
        ENDIF
        mtot_ped = 0
        mtot_ped = mvlr_fat * mquantd
        opcao := op_simnao('S','Confirma Alteracao da Mercadoria:')
        IF opcao = 'S'
                mdesconto := 0
*               IF mvlr_fat < iat(malt_merc[1,46],m_set[1,103])
*                       mdesconto := ((iat(malt_merc[1,46],m_set[1,103])-mvlr_fat)/iat(malt_merc[1,46],m_set[1,103]))*100
                IF mvlr_fat < iat(mp_venda,m_set[1,103])
                        mdesconto := ((iat(mp_venda,m_set[1,103])-mvlr_fat)/iat(mp_venda,m_set[1,103]))*100
                ENDIF
                aret:={}
                sr_getconnection():exec("SELECT * FROM sacmerc WHERE cod_merc = "+sr_cdbvalue(m_codigo[mponto]),,.t.,@aret)
                mlinha := aret[1,2]+aret[1,8]+aret[1,9]+aret[1,14]+STRZERO((aret[1,56] - (mquantd - c_pedi[mponto,14]))*1000,13)+STRZERO(iat(aret[1,46])*100,14)+aret[1,68]
                SR_BEGINTRANSACTION()
                                sr_getconnection():exec("UPDATE sacmerc SET saldo_mer = "+sr_cdbvalue(aret[1,56] - (mquantd - c_pedi[mponto,14]))+" WHERE cod_merc = "+sr_cdbvalue(m_codigo[mponto]),,.f.)
                                sr_getconnection():exec('INSERT INTO logproduto (data_sis,data,'+;
                                                             'hora,cod_prod,quantd,saldo_ant,saldo_pos,cod_oper,prog,terminal,'+;
                                                             'processo,ent_sai,SR_DELETED )'+;
                                                             ' VALUES ('+;
                                                             sr_cdbvalue(DATE())+','+; //1
                                                             sr_cdbvalue(mdata_sis)+','+; //2
                                                             sr_cdbvalue(TIME())+','+; //3
                                                             sr_cdbvalue(m_codigo[mponto])+','+; //4
                                                             sr_cdbvalue(IF(mquantd < c_pedi[mponto,14],(mquantd - c_pedi[mponto,14])*-1,mquantd - c_pedi[mponto,14]))+','+; //5
                                                             sr_cdbvalue(aret[1,56])+','+; //6
                                                             sr_cdbvalue(aret[1,56] - (mquantd - c_pedi[mponto,14]))+','+; //7
                                                             sr_cdbvalue(cod_operado)+','+; //8
                                                             sr_cdbvalue('SAC23PD1')+','+; //9
                                                             sr_cdbvalue(LEFT(NETNAME(),15))+','+; //12
                                                             sr_cdbvalue('ALTERACAO PD: '+STRZERO(mnum_ped,6))+','+; //11
                                                             sr_cdbvalue(IF(mquantd < c_pedi[mponto,14],'E','S'))+','+; //12
                                                             sr_cdbvalue(' ')+')',,.f.)
                                cComm  := "UPDATE sacped_s SET pquantd = "+sr_cdbvalue(mquantd)
                                cComm  := ccomm + ",pvlr_fat = "+sr_cdbvalue(mvlr_fat)
                                cComm  := ccomm + ",ppre_dig = "+sr_cdbvalue(mvlr_fat)
                                cComm  := ccomm + ",pdesc = "+sr_cdbvalue(mdesconto)    //cComm  := ccomm + ",pcomissao = "+sr_cdbvalue(mcomissao)
                                cComm  := ccomm + ",penvelope = "+sr_cdbvalue(menvelope)
                                cComm  := ccomm + ",pmontador = "+sr_cdbvalue(mmontador)
                                cComm  := ccomm + ",pmontador1 = "+sr_cdbvalue(mmontador1)
                                cComm  := ccomm + ",ppacote = "+sr_cdbvalue(mpacote)
                                cComm  := ccomm + ",ppecas = "+sr_cdbvalue(mpecas)
                                cComm  := ccomm + ",pobs_prod = "+sr_cdbvalue(c_pedi[mponto,58])
                                cComm  := ccomm + " WHERE SR_RECNO = "+sr_cdbvalue(m_posi[mponto])
                                sr_getconnection():exec(ccomm,,.f.)
                        sr_committransaction()
                sr_endtransaction()
                m_matriz[mponto,1] = mquantd
                m_matriz[mponto,2] = mvlr_fat
                m_matriz[mponto,3] = mdesconto
                m_matriz[mponto,15] = mcomissao
                m_matriz[mponto,24] = menvelope
                m_matriz[mponto,37] = mmontador
                m_matriz[mponto,38] = mmontador1
                m_matriz[mponto,42] = mpacote
                m_matriz[mponto,43] = mpecas
                **********
                //SELE('merc');ORDSETFOCUS(1)
                **********
                mquantd := 1
                EXIT
        ELSE
                mquantd := 1
                EXIT
        ENDIF
ENDDO
malterou := '*'
CLEAR GETS
wvw_lclosewindow()
RETURN .T.
********************** F I M ********************************
* VERIFICA CLASSIFICACAO FISCAL
*******************************
FUNCTION vercst(m_cst,mtp)
**********************
LOCAL mver_cst := {}
m_cst := ALLTRIM(m_cst)
sr_getconnection():exec("SELECT * FROM saccst WHERE cst = "+sr_cdbvalue(m_cst),,.t.,@mver_cst)
IF LEN(mver_cst) = 0
        atencao('Este CST: '+m_cst+' nao estar Cadastrado favor verificar...')
        IF mtp = 1
                RETURN .F.
        ELSE
                RETURN ''
        ENDIF

ENDIF
IF mtp = 1
        RETURN .T.
ELSE
        RETURN mver_cst[1,3]
ENDIF
RETURN
********************************** F I M ***************************************
FUNCTION f5_qtd()
************************************
LOCAL l:=10,c:=10,lx:=11,cx:=50
MEMVAR mquantd
CLEAR GETS
op_tela(l,c,lx,cx)
DEVPOS(0,0);DEVOUT('Informe a Quantidade:')
WVW_DrawBoxGet(,0,COL()+1,LEN(ALLTRIM(m_set[1,99])))
@ 0,COL()+1 GET mquantd PICT ALLTRIM(m_set[1,99])
READ
mloop := 1
CLEAR GETS
wvw_lclosewindow()
RETURN .F.
*********************************  F I M  ***************************************
* ALTERA A SENHA
**********************
FUNCTION alt_sen(p,mfiscal)
***************************
LOCAL mcont,msenha,lci,cci,lba,cba,tela,msele,morde,mmen,mcor,mponto,mponto1,;
      mcod_oper:=0
MEMVAR senha_acess
mcont := 0
cci := 10
lci := 01
lba := 03
cba := 40
mcor := SETCOLOR()
msele := SELE()
morde := INDEXORD()
*-----------------------------------------------------
IF ! AbriArq('insopera','sen');RETURN NIL;ENDIF
*-----------------------------------------------------
setcor(1)
lim_get()
op_tela(15,30,20,70,'IDENTIFICAR O OPERADOR')
WHILE .T.
        SR_BEGINTRANSACTION()
        TRY

        m_operador:={}
        sr_getconnection():exec("SELECT * FROM insopera WHERE scod_op = "+sr_cdbvalue(cod_operado),,.t.,@m_operador)
        IF LEN(m_operador) > 0
                sr_getconnection():exec("UPDATE insopera SET sult_fim = "+sr_cdbvalue(DATE())+",shora_fim = "+sr_cdbvalue(TIME())+",sh_i_c = '     ' WHERE scod_op = "+sr_cdbvalue(cod_operado),,.f.)
                sr_getconnection():exec('COMMIT',,.f.)
                nivel_acess := m_operador[1,13]
                cod_operado := m_operador[1,1]
                senha_acess := msenha
                IF p = NIL
                        WVW_SBSetText(mnum_principal,4,'Operador: '+ALLTRIM(cod_operado))
                ENDIF
                ver_mensa(cod_operado)          //verifica mensagens

        ENDIF
        CATCH e
        SR_ENDTRANSACTION()
        END

        /*
        *************
        SELE('sen')
        ORDSETFOCUS(2)
        GO TOP
        *************
        IF sen->(DBSEEK(cod_operado))
                mponto := RECNO()
                IF BLOQREG()
                        sen-> sult_fim := DATE()
                        sen-> shora_fim := TIME()
                        sen-> sh_i_c    := '     '
                        nivel_acess := sen->snivel
                        cod_operado := sen->scod_op
                        senha_acess := msenha
                        COMMIT
                        UNLOCK
                        IF p = NIL
                                WVW_SBSetText(mnum_principal,4,'Operador: '+ALLTRIM(cod_operado))
                        ENDIF
                ELSE
                        atencao('Nao foi Possivel Acessar o Arquivo')
                        LOOP
                ENDIF
                ver_mensa(cod_operado)          //verifica mensagens
        ENDIF
        */
        WHILE .T.
                mcod_oper:=0
                mensagem('Digite o Codigo e Senha do Operador...')
                //botao(lci,cci,lba,cba,,' IDENTIFICAR O OPERADOR ','*')
                setcor(1)
		limpa(00,00,06,09)
        	WVW_DrawImage( ,01,01,04,08,ALLTRIM(m_cfg[12])+'hti.jpg',.T.,.F.)

                DEVPOS(lci  ,cci+1);DEVOUT('Codigo Operador:')
                DEVPOS(lci+2,cci+1);DEVOUT('Senha de Acesso:')
                WVW_DrawBoxGet(,lci,cci+18,3)
                WVW_DrawBoxGet(,lci+2,cci+18,10)
                @ lci,cci+18 GET mcod_oper PICT '999' VALID IF(EMPTY(mcod_oper),.F.,ven(mcod_oper))
                READ
                //IF ! oper_ped(STRZERO(mcod_oper,3))
                //        LOOP
                //ENDIF
                IF LASTKEY() = 27
                        IF p = '1'
                                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                                wvw_lclosewindow()
                                RETURN .F.
                        ELSE
                                LOOP
                        ENDIF
                ENDIF
                m_operador:={}
                sr_getconnection():exec("SELECT * FROM insopera WHERE scod_op = "+sr_cdbvalue(STRZERO(mcod_oper,3)),,.t.,@m_operador)
		IF FILE(ALLTRIM(m_cfg[13])+STRZERO(mcod_oper,3)+'.jpg')
		        WVW_DrawImage( ,01,01,04,08,ALLTRIM(m_cfg[13])+STRZERO(mcod_oper,3)+'.jpg',.T.,.F.)
                ELSE
                	WVW_DrawImage( ,01,01,04,08,ALLTRIM(m_cfg[13])+'hti.jpg',.T.,.F.)
		ENDIF
                IF m_operador[1,3] = 'B' .AND. STRZERO(mcod_oper,3) <> '999'
                        atencao('Este Usuario/Operador estar Bloqueado, Procure seu Administrador...')
                        LOOP
                ENDIF

                mensagem('Nome: '+sen->snome)

                msenha = ''
                pegasenha(@msenha,lci+2,cci+18,setcor(2))
                setcor(1)
                IF msenha = 'NAO'
                        LOOP
                ENDIF
                mcont ++
                IF EMPTY(msenha)
                        atencao('Senha Incorreta Tente Novamente')
                        LOOP
                ENDIF
                IF ALLTRIM(msenha) == ALLTRIM(DCRIPTO(sen->ssenha))
                        m_operador:={}
                        sr_getconnection():exec("SELECT * FROM insopera WHERE scod_op = "+sr_cdbvalue(STRZERO(mcod_oper,3)),,.t.,@m_operador)
                        IF LEN(m_operador) > 0
                                SR_BEGINTRANSACTION()
                                TRY
                                sr_getconnection():exec("UPDATE insopera SET sult_ent = "+sr_cdbvalue(DATE())+",shora_ini = "+sr_cdbvalue(TIME())+" WHERE scod_op = "+sr_cdbvalue(STRZERO(mcod_oper,3)),,.f.)
                                sr_getconnection():exec('COMMIT',,.f.)
                                CATCH e
                                SR_ENDTRANSACTION()
                                END
                                ver_mensa(STRZERO(mcod_oper,3))          //verifica mensagens
                                nivel_acess := m_operador[1,13]
                                cod_operado := m_operador[1,1]
                                senha_acess := msenha
                                IF p = NIL
                                        WVW_SBSetText(mnum_principal,4,'Operador: '+ALLTRIM(cod_operado))
                                ENDIF
                                WVW_SBSetText(mnum_principal,4,'Operador: '+ALLTRIM(cod_operado))
                                atencao('Operador: '+cod_operado+'-'+RTRIM(sen->snome))
                                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                                ver_mensa(cod_operado)          //verifica mensagens
                                IF mfiscal # NIL
                                        IBR_COMANDO('ECF.identificaoperador',{cod_operado},,,.T. )
                                ENDIF
                                wvw_lclosewindow()
                                RETURN .T.
                        ENDIF
                ELSE
                        atencao('Senha Incorreta Tente Novamente')
                        LOOP
                ENDIF
        ENDDO
ENDDO
wvw_lclosewindow()
RETURN NIL
*********************** f i m ************************************
***************************
* ATIVA AS TECLAS DE ATALHO
***********************************

FUNCTION set_key(s1,s2,s3,s4,t)
********************************************************

IF (s1 = 'merc' .OR. s2 = 'merc' .OR. s3 = 'merc' .OR. s4 = 'merc') .AND. t = NIL
        SET KEY -3 TO f4_merc()
ENDIF
IF (s1 = 'merc' .OR. s2 = 'merc' .OR. s3 = 'merc' .OR. s4 = 'merc') .AND. t <> NIL
        SET KEY -3 TO f4_merc()
ENDIF
IF s1 = 'cliente' .OR. s2 = 'cliente' .OR. s3 = 'cliente' .OR. s4 = 'cliente'
        SET KEY -6 TO f7_cli()
ENDIF
IF s1 = 'forn' .OR. s2 = 'forn' .OR. s3 = 'forn' .OR. s4 = 'forn'
        SET KEY -5 TO f6_forn()
ENDIF
IF s1 = 'trans' .OR. s2 = 'trans' .OR. s3 = 'trans' .OR. s4 = 'trans'
        //SET KEY -4 TO f5_trans()
ENDIF

RETURN NIL
*********************************** F I M *************************************
********************************
* FIM DA TECLA DE ATALHO
********************************

FUNCTION fimset()
*****************

SET KEY -1 TO
SET KEY -2 TO
SET KEY -3 TO
SET KEY -4 TO
SET KEY -5 TO
SET KEY -6 TO
SET KEY -7 TO
SET KEY -8 TO
SET KEY -40 TO
RETURN NIL

****************************** F I M **************************************
*******************************************
* FUNCAO PARA VERIFICAR COD.NAT.OPERACAO
*******************************************

FUNCTION ver_nat(cod)
*********************

LOCAL msele,morde
MEMVAR mnatureza,mcredito,msai_ent


IF EMPTY(cod)
        RETURN .T.
ENDIF
msele := SELE()
morde := INDEXORD()
IF ! AbriArq('sacop','op');RETURN NIL;ENDIF
*****************
SELE('op');ORDSETFOCUS(1)
GO TOP
*****************

IF ! op->(DBSEEK(cod))
        atencao('Este CFOP: '+cod+'  nao esta cadastrado em nossos arquivos !!!')
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .F.
ELSE
        mnatureza := op->descr_op
        mcredito :=  op->credito
        msai_ent := op->sai_ent
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .T.
ENDIF
RETURN NIL
********************** F I M ********************************
*****************************
FUNCTION icm_merc(cod)
*****************************
LOCAL msele,morde
MEMVAR mdif_icm,micm_sub

msele := SELE()
morde := INDEXORD()
****************
SELE('merc');ORDSETFOCUS(1)
GO TOP
****************
IF ! merc->(DBSEEK(STRZERO(cod,5)))
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .T.
ENDIF
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
mdif_icm := 0
micm_sub := 0
RETURN NIL

**************************** F I M ******************************************
* CONVERTE DBF para BANCO DE DADOS
**********************************
#include "directry.ch"
#include "sqlrdd.ch"       // SQLRDD Main include

Function dbf_sql(mfile1,mfile2)
******************
local  aStruct, aFile:=SPACE(20),mtabela:=SPACE(20)
local nCnn, nDrv, cDriver,sac_ncm:={}

//RddSetDefault( "DBFCDX" )

SET DELETED ON
op_tela(10,10,15,70,"Convertento DBF's para BANCO DE DADOS em USO")

WHILE .T.
        IF mfile1 # NIL
                afile := mfile1
                mtabela := mfile2
        ELSE
                afile := mtabela := SPACE(20)
        ENDIF

        setcor(1)
        DEVPOS(01,01);DEVOUT('Digite o Nome do Arquivo "DBF": ')
        DEVPOS(02,01);DEVOUT('Digite o Nome da Tabela "SQL" : ')
        @ 01,33 GET afile WHEN mfile1 = NIL
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        IF ! FILE(ALLTRIM(afile))
                atencao('Nao foi possivel encontrar este Arquivo...')
                LOOP
        ENDIF
        @ 02,33 GET mtabela WHEN mfile1 = NIL
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        IF mfile1 = NIL
                opcao := op_simnao('S','Confirma os Arquivos:')
                IF opcao = 'N'
                        LOOP
                ENDIF
        ENDIF
        mtabela := ALLTRIM(mtabela)

        afile := ALLTRIM(afile)

	IF afile = 'saccli.dbf'
                IF SELECT('cliente') > 0
        	        cliente->( dbCloseArea() )
                ENDIF
                abriarq('saccli','cli')
	        dbUseArea( .T., "SQLRDD", mtabela, "cliente", .F. )
        	Append from saccli VIA "DBFCDX"
                sr_getconnection():exec("COMMIT",,.f.)
	        cliente->( dbCloseArea() )
	ELSEIF afile = 'sacdupr.dbf'
	        dbUseArea( .T., "SQLRDD", mtabela, "dupr", .F. )
        	Append from (aFile) VIA "DBFCDX"
	        dupr->( dbCloseArea() )
	ELSEIF afile = 'sacsetup.dbf'
                IF SELECT('set') > 0
        	        set->( dbCloseArea() )
                ENDIF
	        dbUseArea( .T., "SQLRDD", mtabela, "set", .F. )
        	Append from (aFile) VIA "DBFCDX"
                atencao('1')
	        set->( dbCloseArea() )
	ELSE
	        dbUseArea( .T., "SQLRDD", mtabela, "DEST", .F. )
        	Append from (aFile) VIA "DBFCDX"
	        DEST->( dbCloseArea() )
	ENDIF
        IF mtabela = 'sacncm'
                sac_ncm:={}
                sr_getconnection():exec("SELECT codigo FROM sacncm ",,.t.,@sac_ncm)
                i:=0
                FOR i = 1 TO LEN(sac_ncm)
                        sr_getconnection():exec("UPDATE sacncm SET codigo = " + sr_cdbvalue(STRZERO(VAL(sac_ncm[i,1]),8))+' WHERE codigo = '+sr_cdbvalue(sac_ncm[i,1]),,.f.)
                NEXT
        ENDIF
        sr_getconnection():exec("COMMIT",,.f.)
        atencao('Foi feito a Atualizacao com SUCESSO....')
        IF mfile1 # NIL
                EXIT
        ENDIF
ENDDO
wvw_lclosewindow()
Return
***************************  F I M ***********************************
* CONVERTE DBF para BANCO DE DADOS
**********************************
#include "directry.ch"
#include "sqlrdd.ch"       // SQLRDD Main include

Function expor_arq()
********************
local  aFile:=SPACE(20),mtabela:=SPACE(20)

//RddSetDefault( "DBFCDX" )

SET DELETED ON

op_tela(10,05,15,80,'Exportar Tabelas para "DBFs"')
WHILE .T.
        afile := mtabela := SPACE(30)
        limpa(00,00,24,79)
        mensagem('Digite o Nome da Tabela do Banco de Dados')
        setcor(1)
        DEVPOS(01,01);DEVOUT('Digite o Nome da Tabela "SQL" : ')
        DEVPOS(02,01);DEVOUT('Digite o Nome do Arquivo "DBF": ')
        @ 01,33 GET mtabela
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        IF ! SR_EXISTTABLE(ALLTRIM(mtabela))
                atencao('Nao existe esta Tabela no Banco de Dados....')
                LOOP
        ENDIF
        mensagem('Digite o Nome do Arquivo sem a Extensao')
        @ 02,33 GET afile
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        mtabela := ALLTRIM(mtabela)
        afile := ALLTRIM(afile)
        mensagem('Aguarde um momento fazendo a copia da TABELA p/ARQUIVO.DFB...')
        dbUseArea( .T., "SQLRDD", mtabela, "DEST", .F. )
        copy to (afile) via "DBFCDX"

        DEST->( dbCloseArea() )

        atencao('Foi feito a Atualizacao com SUCESSO....')
ENDDO
wvw_lclosewindow()
Return
*************************** F I M *********************************
* CONVERTE DBF para BANCO DE DADOS
**********************************
#include "directry.ch"
#include "sqlrdd.ch"       // SQLRDD Main include

Function expor_arqall()
***********************
local  aFile:=SPACE(20),mtabela:=SPACE(20)

//RddSetDefault( "DBFCDX" )

SET DELETED ON

op_tela(10,05,15,80,'Exportar Tabelas para "DBFs"')
WHILE .T.
        mensagem('Aguarde um momento fazendo a copia da TABELA p/ARQUIVO.DFB...')
        IF SR_EXISTTABLE('INSOPERA')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM INSOPERA ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","INSOPERA", "DEST", .F. )
                        copy to "INSOPERA" via "DBFCDX"
                        DEST->( dbCloseArea() )
                        atencao('Foi feito a Atualizacao com SUCESSO....')
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('SACSETUP')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM SACSETUP ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","SACSETUP", "DEST", .F. )
                        copy to "SACSETUP" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('SACCONF')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM SACCONF ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","SACCONF", "DEST", .F. )
                        copy to "SACCONF" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTMESAS')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTMESAS ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTMESAS", "DEST", .F. )
                        copy to "MASTMESAS" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTPROD')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTPROD ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTPROD", "DEST", .F. )
                        copy to "MASTPROD" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTCLI')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTCLI ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTCLI", "DEST", .F. )
                        copy to "MASTCLI" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTNUMMOV')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTNUMMOV ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTNUMMOV", "DEST", .F. )
                        copy to "MASTNUMMOV" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTMOV')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTMOV ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTMOV", "DEST", .F. )
                        copy to "MASTMOV" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTCAIXA')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTCAIXA ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTCAIXA", "DEST", .F. )
                        copy to "MASTCAIXA" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTDUPR')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTDUPR ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTDUPR", "DEST", .F. )
                        copy to "MASTDUPR" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTCRED')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTCRED ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTCRED", "DEST", .F. )
                        copy to "MASTCRED" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTCARTA')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTCARTA ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTCARTA", "DEST", .F. )
                        copy to "MASTCARTA" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTDUPP')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTDUPP ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTDUPP", "DEST", .F. )
                        copy to "MASTDUPP" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTFORN')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTFORN ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTFORN", "DEST", .F. )
                        copy to "MASTFORN" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('SACCID')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM SACCID ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","SACCID", "DEST", .F. )
                        copy to "SACCID" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('MASTGRUPO')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM MASTGRUPO ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","MASTGRUPO", "DEST", .F. )
                        copy to "MASTGRUPO" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('SACMOVNT')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM SACMOVNT ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","SACMOVNT", "DEST", .F. )
                        copy to "SACMOVNT" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('SACCST')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM SACCST ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","SACCST", "DEST", .F. )
                        copy to "SACCST" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('SACNONFC')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM SACNONFC ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","SACNONFC", "DEST", .F. )
                        copy to "SACNONFC" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('SACNCM')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM SACNCM ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","SACNCM", "DEST", .F. )
                        copy to "SACNCM" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('SACOP')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM SACOP ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","SACOP", "DEST", .F. )
                        copy to "SACOP" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('SACNOTA')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM SACNOTA ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","SACNOTA", "DEST", .F. )
                        copy to "SACNOTA" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF
        IF SR_EXISTTABLE('SACTOTNT')
                sac_ncm:={}
                sr_getconnection():exec("SELECT * FROM SACTOTNT ",,.t.,@sac_ncm)
                IF LEN(sac_ncm) > 0
                        dbUseArea( .T., "SQLRDD","SACTOTNT", "DEST", .F. )
                        copy to "SACTOTNT" via "DBFCDX"
                        DEST->( dbCloseArea() )
                ENDIF
        ENDIF

        atencao('Foi feito a Atualizacao com SUCESSO....')
        EXIT
ENDDO
wvw_lclosewindow()
Return
************************************ F I M ************************************
* TESTE DE EXISTENCIA DE DESPESAS
**********************************
FUNCTION ver_desp(mcod_des,li,ci,t)
***********************************
LOCAL msele,morde
MEMVAR mdescri1,mdescri2
IF EMPTY(mcod_des); RETURN .T.;END
msele := SELE()
morde := INDEXORD()
**************
SELECT('desp');ORDSETFOCUS(1)
GO TOP
**************
IF ! desp->(DBSEEK(STRZERO(mcod_des,3)))
        IF t = NIL
                atencao('Despesa nao Cadastrada !!!')
        ENDIF
        mdescri1 = ''
        mdescri2 = ''
        mcod_des = 0
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .F.
ELSE
        mdescri1 = desp->desc1
        mdescri2 = desp->desc2
        IF li = NIL
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .T.
        ELSE
                setcor(3)
                DEVPOS(li,ci);DEVOUT(mdescri1)
                DEVPOS(li+1,ci);DEVOUT(mdescri2)
                setcor(1)
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .T.
        ENDIF
ENDIF
RETURN NIL
*********************************  F I M *************************************
FUNCTION DrawLabel(linha,coluna,mtexto,mcor_tex,mcor_fundo,mnome_letra,mlargura,maltura)

WVW_DrawLabel(,linha,coluna,mtexto,,,mcor_tex,mcor_fundo,mnome_letra,mlargura,maltura,,FW_BOLD,,,)
RETURN NIL

**************** f i m **********************************
* FUNCAO P/CONSULTAR CLIENTES
*****************************
#include "inkey.ch"              // constantes de codigos das teclas

FUNCTION f7_cli1(cons)
******************************************************
LOCAL f4tela,f4tela1,f4lci,f4cci,f4lba,f4cba,f4msele,f4morde,f4men,y,mcod,;
      oconsprod,ocolprod[9],i,nkey,mteste,f4,lin_br,mopcao:=' ',;
      cons_m:={},m_prod:={},;
      mhoras:='',menuid,mvalor_fatura:=0,cons_mov,f4_botao,nBota

STATIC mpesquisa:= '                                                  '
//LOCAL mdescri := SPACE(30),mdescri1:='              '

MEMVAR mdata_sis,nivel_acess,mcod_cli
PRIVATE mcod_forn := 0,point:=0,m_pos:={}
***********************************************
f4 := '*'
f4lci := 6
f4cci := 0
f4lba := 22
f4cba := 100 //79
setcor(1)
exibi_prg('F7_CLI1')
op_tela(03,00,48,120,memp_resa+SPACE(10)+' CLIENTES ',,1)
CLEAR GETS

WvW_PBSetFont( NIL, 'times', 25, 10,)
nBota := wvw_pbCreate(NIL,1,90,2,110,'Inclusao Clientes',NIL,{||mast130()})
WVW_PBEnable( NIL, nBota, .T. )

WHILE .T.
        limpa(0,0,50,120)
        mensagem('Digite: *descricao - #descricao p/(Aplicacao) - R=Descricao p/(Ref.) - [III] Inclusao Prod. - [CTRL+Y]Apagar Descricao - [&]Ordem Codigo')
        setcor(1)
        DEVPOS(00,01);DEVOUT('Pesquisa Geral:')
        setcor(3)
        @ 04,00 TO 04,120
        DEVPOS(05,01);DEVOUT('Cliente                                       Fantasia        CPF         CNPJ           CIDADE                    UF')
        @ 06,00 TO 06,120
        @ 43,00 TO 43,120
        DEVPOS(44,01);DEVOUT('Total de Clientes:')
        DEVPOS(44,27);DEVOUT('Tempo da Pesquisa:')
        setcor(1)

        //DEVPOS(04,00);DEVOUT('Cod.Especie...:')
        @ 00,17 GET mpesquisa PICT '@!KS50' VALID IF(EMPTY(mpesquisa),.F.,.T.)
        READ
        IF LASTKEY() = 27
                wvw_lclosewindow()
                CLEAR GETS
                RETURN ' '
        ENDIF

        mhoras := TIME()
        mensagem('Escolha o Cliente e tecle <ENTER> ou <ESC> p/Sair')
                cComm  := "SELECT * FROM mastcli WHERE "
                ccomm := ccomm + " (cod_cli = "+sr_cdbvalue(ALLTRIM(mpesquisa));
                                + " OR razao LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                + " OR nome LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                + " OR tel1 LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                + " OR tel2 LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                + " OR cpf = "+sr_cdbvalue(ALLTRIM(mpesquisa));
                                + " OR cgc = "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%')+")"
        ccomm := ccomm + " ORDER BY razao"
        cons_m := {}
        sr_getconnection():exec(ccomm,,.t.,@cons_m)
        sr_getconnection():exec('COMMIT',,.f.)
        IF LEN(cons_m) = 0
                atencao('Nao foi encontrado nenhum Cliente..')
                LOOP
        ENDIF
        m_prod := {}
        m_pos  := {}
        point  := 0
        DEVPOS(44,20);DEVOUT(STRZERO(LEN(cons_m),5))
        DEVPOS(44,46);DEVOUT(ELAPTIME(mhoras,TIME()))

        FOR i = 1 TO LEN(cons_m)
                AADD(m_prod,cons_m[i,2];
                           +' '+cons_m[i,3]+' '+SUBSTR(cons_m[i,4],1,15);
                           +' '+cons_m[i,34];
                           +' '+cons_m[i,32];
                           +' '+cons_m[i,24];
                           +' '+cons_m[i,25])
                AADD(m_pos,cons_m[i,1])

        NEXT
        setcor(10);point := ACHOICE(7,0,42,120,m_prod,,,point);setcor(1)
        DO CASE
                CASE LASTKEY()=27
                        LOOP
                CASE LASTKEY() = 13
                        mcodigo := m_pos[point]
                        IF cons <> NIL
                                mopcao := mensagem1('Tecle [A] p/ Alteracao [E] p/ Exclusao:','A','A,E')
                                IF LASTKEY() = 27
                                        LOOP
                                ENDIF
                                IF mopcao = 'A'
                                        mast130()
                                ELSEIF mopcao = 'E'
                                        mast130('A')
                                ENDIF
			ELSE
                                wvw_lclosewindow()
                                CLEAR GETS
                                RETURN mcodigo
                        ENDIF
        ENDCASE
END
RELEASE f4tela,f4tela1,f4lci,f4cci,f4lba,f4cba,f4msele,f4morde,f4men,mcod,;
        oconsprod,ocolprod[8],i,nkey,mteste
wvw_lclosewindow()
CLEAR GETS
RETURN ' '

**************** f i m **********************************



